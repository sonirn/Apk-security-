2025-06-24 16:35:36,844 - semgrep.run_scan - DEBUG - semgrep version 1.4.0
2025-06-24 16:35:36,850 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-06-24 16:35:36,851 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-24 16:35:36,854 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-24 16:35:36,857 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-m9801r5o.rules
2025-06-24 16:35:37,612 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-06-24 16:35:37,612 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-06-24 16:35:37,612 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-06-24 16:35:37,613 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.7617156505584717
2025-06-24 16:35:37,685 - semgrep.run_scan - VERBOSE - running 714 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-06-24 16:35:37,686 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-06-24 16:35:37,688 - semgrep.run_scan - VERBOSE - Rules:
2025-06-24 16:35:37,688 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-06-24 16:35:38,042 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-06-24 16:35:38,187 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-06-24 16:35:38,187 - semgrep.core_runner - DEBUG - /tmp/_MEIovuFYJ/semgrep/bin/opengrep-core -json -rules /tmp/tmplsgwkz43.json -j 8 -targets /tmp/tmp637x113j -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-06-24 16:35:43,680 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.07][[34mINFO[0m]: Executed as: /tmp/_MEIovuFYJ/semgrep/bin/opengrep-core -json -rules /tmp/tmplsgwkz43.json -j 8 -targets /tmp/tmp637x113j -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.07][[34mINFO[0m]: Version: 1.4.0
[00.07][[34mINFO[0m]: Parsing rules in /tmp/tmplsgwkz43.json
[00.50][[34mINFO[0m]: scan: processing 250 files (skipping 0), with 456 rules (skipping 0 )
[02.52][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes.ts func: registerRoutes:8654]
[0m[03.08][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.express-wkhtmltoimage-injection file: server/routes.ts func: registerRoutes:8654]
[0m[03.30][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes.ts func: registerRoutes:8654]
[0m[03.47][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes.ts func: registerRoutes:8654]
[0m[03.60][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/routes.ts func: registerRoutes:8654]
[0m--- end semgrep-core stderr ---
2025-06-24 16:35:43,687 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-06-24 16:35:43,688 - semgrep.rule_match - DEBUG - match_key = (' href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" > <script  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = dda1265afc92199e737b9873d7c9c7ebc3aea20301e2d6222d0f11364cc914a52f82389e77acabd02161cc08abe2f39bc5975fea49be3a17b17ea186b56e4b26_0
2025-06-24 16:35:43,689 - semgrep.rule_match - DEBUG - match_key = (' href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" > <script  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = dda1265afc92199e737b9873d7c9c7ebc3aea20301e2d6222d0f11364cc914a52f82389e77acabd02161cc08abe2f39bc5975fea49be3a17b17ea186b56e4b26_0
2025-06-24 16:35:43,689 - semgrep.rule_match - DEBUG - match_key = (' href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" > <script  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = dda1265afc92199e737b9873d7c9c7ebc3aea20301e2d6222d0f11364cc914a52f82389e77acabd02161cc08abe2f39bc5975fea49be3a17b17ea186b56e4b26_0
2025-06-24 16:35:43,690 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-06-24 16:35:43,690 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-24 16:35:43,691 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-24 16:35:43,691 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-24 16:35:43,691 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,692 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) path.dirname(apkPath) path.dirname(apkPath) import 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) apkPath function ... (...,apkPath,...) {...}\n function ... (...,{...,apkPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 96192dcd3909672be4b4eb6bd186d071b640cbeec40f2f792bfdd9444f970d2353bb9cd6c86e5acacd33c6eb81273ceff3a4a663548d455ef57067325c0e8d52_0
2025-06-24 16:35:43,692 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) path.dirname(apkPath) path.dirname(apkPath) import 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) apkPath function ... (...,apkPath,...) {...}\n function ... (...,{...,apkPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 96192dcd3909672be4b4eb6bd186d071b640cbeec40f2f792bfdd9444f970d2353bb9cd6c86e5acacd33c6eb81273ceff3a4a663548d455ef57067325c0e8d52_0
2025-06-24 16:35:43,693 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) path.dirname(apkPath) path.dirname(apkPath) import 'path';\n...\n path.join(...,path.dirname(apkPath),...) path.resolve(...,path.dirname(apkPath),...) apkPath function ... (...,apkPath,...) {...}\n function ... (...,{...,apkPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 96192dcd3909672be4b4eb6bd186d071b640cbeec40f2f792bfdd9444f970d2353bb9cd6c86e5acacd33c6eb81273ceff3a4a663548d455ef57067325c0e8d52_0
2025-06-24 16:35:43,693 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,694 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry.fileName entry.fileName import 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry function ... (...,entry,...) {...}\n function ... (...,{...,entry,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = daa83447889e8c77c745c4c4136a1a00b7133c5d0b308d055c5677eb1f8b56cced31db4052b0690fa5d056f205743fb068cd2a4cbc125c15942d51caf6ee8ac9_0
2025-06-24 16:35:43,695 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry.fileName entry.fileName import 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry function ... (...,entry,...) {...}\n function ... (...,{...,entry,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = daa83447889e8c77c745c4c4136a1a00b7133c5d0b308d055c5677eb1f8b56cced31db4052b0690fa5d056f205743fb068cd2a4cbc125c15942d51caf6ee8ac9_0
2025-06-24 16:35:43,695 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry.fileName entry.fileName import 'path';\n...\n path.join(...,entry.fileName,...) path.resolve(...,entry.fileName,...) entry function ... (...,entry,...) {...}\n function ... (...,{...,entry,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = daa83447889e8c77c745c4c4136a1a00b7133c5d0b308d055c5677eb1f8b56cced31db4052b0690fa5d056f205743fb068cd2a4cbc125c15942d51caf6ee8ac9_0
2025-06-24 16:35:43,695 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,696 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputDir,...) fs. ... .accessSync(outputDir, ...) fs. ... .appendFile(outputDir,...) fs. ... .appendFileSync(outputDir, ...) fs. ... .chmod(outputDir,...) fs. ... .chmodSync(outputDir, ...) fs. ... .chown(outputDir,...) fs. ... .chownSync(outputDir, ...) fs. ... .close(outputDir,...) fs. ... .closeSync(outputDir, ...) fs. ... .copyFile(outputDir,...) fs. ... .copyFile($SMTH, outputDir,...) fs. ... .copyFileSync(outputDir, ...) fs. ... .copyFileSync($SMTH, outputDir, ...) fs. ... .cp(outputDir, ...) fs. ... .cp($SMTH, outputDir, ...) fs. ... .cpSync(outputDir, ...) fs. ... .cpSync($SMTH, outputDir, ...) fs. ... .createReadStream(outputDir,...) fs. ... .createWriteStream(outputDir,...) fs. ... .exists(outputDir, ...) fs. ... .existsSync(outputDir, ...) fs. ... .fchmod(outputDir, ...) fs. ... .fchmodSync(outputDir, ...) fs. ... .fchown(outputDir, ...) fs. ... .fchownSync(outputDir, ...) fs. ... .fdatasync(outputDir, ...) fs. ... .fdatasyncSync(outputDir, ...) fs. ... .fstat(outputDir, ...) fs. ... .fstatSync(outputDir, ...) fs. ... .fsync(outputDir, ...) fs. ... .fsyncSync(outputDir, ...) fs. ... .ftruncate(outputDir, ...) fs. ... .ftruncateSync(outputDir, ...) fs. ... .futimes(outputDir, ...) fs. ... .futimesSync(outputDir, ...) fs. ... .lchmod(outputDir, ...) fs. ... .lchmodSync(outputDir, ...) fs. ... .lchown(outputDir, ...) fs. ... .lchownSync(outputDir, ...) fs. ... .link(outputDir, ...) fs. ... .link($SMTH, outputDir, ...) fs. ... .linkSync(outputDir, ...) fs. ... .linkSync($SMTH, outputDir, ...) fs. ... .lstat(outputDir, ...) fs. ... .lstatSync(outputDir, ...) fs. ... .lutimes(outputDir, ...) fs. ... .lutimesSync(outputDir, ...) fs. ... .mkdir(outputDir, ...) fs. ... .mkdirSync(outputDir, ...) fs. ... .mkdtemp(outputDir, ...) fs. ... .mkdtempSync(outputDir, ...) fs. ... .open(outputDir, ...) fs. ... .openSync(outputDir, ...) fs. ... .opendir(outputDir, ...) fs. ... .opendirSync(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .readFile(outputDir, ...) fs. ... .readFileSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readdir(outputDir, ...) fs. ... .readdirSync(outputDir, ...) fs. ... .readlink(outputDir, ...) fs. ... .readlinkSync(outputDir, ...) fs. ... .readv(outputDir, ...) fs. ... .readvSync(outputDir, ...) fs. ... .realpath(outputDir, ...) fs. ... .realpath.native(outputDir, ...) fs. ... .realpathSync.native(outputDir, ...) fs. ... .realpathync(outputDir, ...) fs. ... .rename(outputDir, ...) fs. ... .rename($SMTH, outputDir, ...) fs. ... .renameSync(outputDir, ...) fs. ... .renameSync($SMTH, outputDir, ...) fs. ... .rm(outputDir, ...) fs. ... .rmSync(outputDir, ...) fs. ... .rmdir(outputDir, ...) fs. ... .rmdirSync(outputDir, ...) fs. ... .stat(outputDir, ...) fs. ... .statSync(outputDir, ...) fs. ... .symlink(outputDir, ...) fs. ... .symlink($SMTH, outputDir, ...) fs. ... .symlinkSync(outputDir, ...) fs. ... .symlinkSync($SMTH, outputDir, ...) fs. ... .truncate(outputDir, ...) fs. ... .truncateSync(outputDir, ...) fs. ... .unlink(outputDir, ...) fs. ... .unlinkSync(outputDir, ...) fs. ... .unwatchFile(outputDir, ...) fs. ... .utimes(outputDir, ...) fs. ... .utimesSync(outputDir, ...) fs. ... .watch(outputDir, ...) fs. ... .watchFile(outputDir, ...) fs. ... .write(outputDir, ...) fs. ... .writeFile(outputDir, ...) fs. ... .writeFileSync(outputDir, ...) fs. ... .writeSync(outputDir, ...) fs. ... .writev(outputDir, ...) fs. ... .writevSync(outputDir, ...) outputDir $METHOD("...", ...) access(outputDir,...) accessSync(outputDir, ...) appendFile(outputDir,...) appendFileSync(outputDir, ...) chmod(outputDir,...) chmodSync(outputDir, ...) chown(outputDir,...) chownSync(outputDir, ...) close(outputDir,...) closeSync(outputDir, ...) copyFile(outputDir,...) copyFile($SMTH, outputDir,...) copyFileSync(outputDir, ...) copyFileSync($SMTH, outputDir, ...) cp(outputDir, ...) cp($SMTH, outputDir, ...) cpSync(outputDir, ...) cpSync($SMTH, outputDir, ...) createReadStream(outputDir,...) createWriteStream(outputDir,...) exists(outputDir, ...) existsSync(outputDir, ...) fchmod(outputDir, ...) fchmodSync(outputDir, ...) fchown(outputDir, ...) fchownSync(outputDir, ...) fdatasync(outputDir, ...) fdatasyncSync(outputDir, ...) fstat(outputDir, ...) fstatSync(outputDir, ...) fsync(outputDir, ...) fsyncSync(outputDir, ...) ftruncate(outputDir, ...) ftruncateSync(outputDir, ...) futimes(outputDir, ...) futimesSync(outputDir, ...) lchmod(outputDir, ...) lchmodSync(outputDir, ...) lchown(outputDir, ...) lchownSync(outputDir, ...) link(outputDir, ...) link($SMTH, outputDir, ...) linkSync(outputDir, ...) linkSync($SMTH, outputDir, ...) lstat(outputDir, ...) lstatSync(outputDir, ...) lutimes(outputDir, ...) lutimesSync(outputDir, ...) mkdir(outputDir, ...) mkdirSync(outputDir, ...) mkdtemp(outputDir, ...) mkdtempSync(outputDir, ...) open(outputDir, ...) openSync(outputDir, ...) opendir(outputDir, ...) opendirSync(outputDir, ...) read(outputDir, ...) read(outputDir, ...) readFile(outputDir, ...) readFileSync(outputDir, ...) readSync(outputDir, ...) readSync(outputDir, ...) readdir(outputDir, ...) readdirSync(outputDir, ...) readlink(outputDir, ...) readlinkSync(outputDir, ...) readv(outputDir, ...) readvSync(outputDir, ...) realpath(outputDir, ...) realpath.native(outputDir, ...) realpathSync.native(outputDir, ...) realpathync(outputDir, ...) rename(outputDir, ...) rename($SMTH, outputDir, ...) renameSync(outputDir, ...) renameSync($SMTH, outputDir, ...) rm(outputDir, ...) rmSync(outputDir, ...) rmdir(outputDir, ...) rmdirSync(outputDir, ...) stat(outputDir, ...) statSync(outputDir, ...) symlink(outputDir, ...) symlink($SMTH, outputDir, ...) symlinkSync(outputDir, ...) symlinkSync($SMTH, outputDir, ...) truncate(outputDir, ...) truncateSync(outputDir, ...) unlink(outputDir, ...) unlinkSync(outputDir, ...) unwatchFile(outputDir, ...) utimes(outputDir, ...) utimesSync(outputDir, ...) watch(outputDir, ...) watchFile(outputDir, ...) write(outputDir, ...) writeFile(outputDir, ...) writeFileSync(outputDir, ...) writeSync(outputDir, ...) writev(outputDir, ...) writevSync(outputDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3f5061d50548ac8315351894fe0a6f858df98bf128148e13ad2888df7b705f39859c3337a84ae98651f6df47a52df76818df7ab622dcf38d4ac59ba2c6ca942e_0
2025-06-24 16:35:43,697 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputDir,...) fs. ... .accessSync(outputDir, ...) fs. ... .appendFile(outputDir,...) fs. ... .appendFileSync(outputDir, ...) fs. ... .chmod(outputDir,...) fs. ... .chmodSync(outputDir, ...) fs. ... .chown(outputDir,...) fs. ... .chownSync(outputDir, ...) fs. ... .close(outputDir,...) fs. ... .closeSync(outputDir, ...) fs. ... .copyFile(outputDir,...) fs. ... .copyFile($SMTH, outputDir,...) fs. ... .copyFileSync(outputDir, ...) fs. ... .copyFileSync($SMTH, outputDir, ...) fs. ... .cp(outputDir, ...) fs. ... .cp($SMTH, outputDir, ...) fs. ... .cpSync(outputDir, ...) fs. ... .cpSync($SMTH, outputDir, ...) fs. ... .createReadStream(outputDir,...) fs. ... .createWriteStream(outputDir,...) fs. ... .exists(outputDir, ...) fs. ... .existsSync(outputDir, ...) fs. ... .fchmod(outputDir, ...) fs. ... .fchmodSync(outputDir, ...) fs. ... .fchown(outputDir, ...) fs. ... .fchownSync(outputDir, ...) fs. ... .fdatasync(outputDir, ...) fs. ... .fdatasyncSync(outputDir, ...) fs. ... .fstat(outputDir, ...) fs. ... .fstatSync(outputDir, ...) fs. ... .fsync(outputDir, ...) fs. ... .fsyncSync(outputDir, ...) fs. ... .ftruncate(outputDir, ...) fs. ... .ftruncateSync(outputDir, ...) fs. ... .futimes(outputDir, ...) fs. ... .futimesSync(outputDir, ...) fs. ... .lchmod(outputDir, ...) fs. ... .lchmodSync(outputDir, ...) fs. ... .lchown(outputDir, ...) fs. ... .lchownSync(outputDir, ...) fs. ... .link(outputDir, ...) fs. ... .link($SMTH, outputDir, ...) fs. ... .linkSync(outputDir, ...) fs. ... .linkSync($SMTH, outputDir, ...) fs. ... .lstat(outputDir, ...) fs. ... .lstatSync(outputDir, ...) fs. ... .lutimes(outputDir, ...) fs. ... .lutimesSync(outputDir, ...) fs. ... .mkdir(outputDir, ...) fs. ... .mkdirSync(outputDir, ...) fs. ... .mkdtemp(outputDir, ...) fs. ... .mkdtempSync(outputDir, ...) fs. ... .open(outputDir, ...) fs. ... .openSync(outputDir, ...) fs. ... .opendir(outputDir, ...) fs. ... .opendirSync(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .readFile(outputDir, ...) fs. ... .readFileSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readdir(outputDir, ...) fs. ... .readdirSync(outputDir, ...) fs. ... .readlink(outputDir, ...) fs. ... .readlinkSync(outputDir, ...) fs. ... .readv(outputDir, ...) fs. ... .readvSync(outputDir, ...) fs. ... .realpath(outputDir, ...) fs. ... .realpath.native(outputDir, ...) fs. ... .realpathSync.native(outputDir, ...) fs. ... .realpathync(outputDir, ...) fs. ... .rename(outputDir, ...) fs. ... .rename($SMTH, outputDir, ...) fs. ... .renameSync(outputDir, ...) fs. ... .renameSync($SMTH, outputDir, ...) fs. ... .rm(outputDir, ...) fs. ... .rmSync(outputDir, ...) fs. ... .rmdir(outputDir, ...) fs. ... .rmdirSync(outputDir, ...) fs. ... .stat(outputDir, ...) fs. ... .statSync(outputDir, ...) fs. ... .symlink(outputDir, ...) fs. ... .symlink($SMTH, outputDir, ...) fs. ... .symlinkSync(outputDir, ...) fs. ... .symlinkSync($SMTH, outputDir, ...) fs. ... .truncate(outputDir, ...) fs. ... .truncateSync(outputDir, ...) fs. ... .unlink(outputDir, ...) fs. ... .unlinkSync(outputDir, ...) fs. ... .unwatchFile(outputDir, ...) fs. ... .utimes(outputDir, ...) fs. ... .utimesSync(outputDir, ...) fs. ... .watch(outputDir, ...) fs. ... .watchFile(outputDir, ...) fs. ... .write(outputDir, ...) fs. ... .writeFile(outputDir, ...) fs. ... .writeFileSync(outputDir, ...) fs. ... .writeSync(outputDir, ...) fs. ... .writev(outputDir, ...) fs. ... .writevSync(outputDir, ...) outputDir $METHOD("...", ...) access(outputDir,...) accessSync(outputDir, ...) appendFile(outputDir,...) appendFileSync(outputDir, ...) chmod(outputDir,...) chmodSync(outputDir, ...) chown(outputDir,...) chownSync(outputDir, ...) close(outputDir,...) closeSync(outputDir, ...) copyFile(outputDir,...) copyFile($SMTH, outputDir,...) copyFileSync(outputDir, ...) copyFileSync($SMTH, outputDir, ...) cp(outputDir, ...) cp($SMTH, outputDir, ...) cpSync(outputDir, ...) cpSync($SMTH, outputDir, ...) createReadStream(outputDir,...) createWriteStream(outputDir,...) exists(outputDir, ...) existsSync(outputDir, ...) fchmod(outputDir, ...) fchmodSync(outputDir, ...) fchown(outputDir, ...) fchownSync(outputDir, ...) fdatasync(outputDir, ...) fdatasyncSync(outputDir, ...) fstat(outputDir, ...) fstatSync(outputDir, ...) fsync(outputDir, ...) fsyncSync(outputDir, ...) ftruncate(outputDir, ...) ftruncateSync(outputDir, ...) futimes(outputDir, ...) futimesSync(outputDir, ...) lchmod(outputDir, ...) lchmodSync(outputDir, ...) lchown(outputDir, ...) lchownSync(outputDir, ...) link(outputDir, ...) link($SMTH, outputDir, ...) linkSync(outputDir, ...) linkSync($SMTH, outputDir, ...) lstat(outputDir, ...) lstatSync(outputDir, ...) lutimes(outputDir, ...) lutimesSync(outputDir, ...) mkdir(outputDir, ...) mkdirSync(outputDir, ...) mkdtemp(outputDir, ...) mkdtempSync(outputDir, ...) open(outputDir, ...) openSync(outputDir, ...) opendir(outputDir, ...) opendirSync(outputDir, ...) read(outputDir, ...) read(outputDir, ...) readFile(outputDir, ...) readFileSync(outputDir, ...) readSync(outputDir, ...) readSync(outputDir, ...) readdir(outputDir, ...) readdirSync(outputDir, ...) readlink(outputDir, ...) readlinkSync(outputDir, ...) readv(outputDir, ...) readvSync(outputDir, ...) realpath(outputDir, ...) realpath.native(outputDir, ...) realpathSync.native(outputDir, ...) realpathync(outputDir, ...) rename(outputDir, ...) rename($SMTH, outputDir, ...) renameSync(outputDir, ...) renameSync($SMTH, outputDir, ...) rm(outputDir, ...) rmSync(outputDir, ...) rmdir(outputDir, ...) rmdirSync(outputDir, ...) stat(outputDir, ...) statSync(outputDir, ...) symlink(outputDir, ...) symlink($SMTH, outputDir, ...) symlinkSync(outputDir, ...) symlinkSync($SMTH, outputDir, ...) truncate(outputDir, ...) truncateSync(outputDir, ...) unlink(outputDir, ...) unlinkSync(outputDir, ...) unwatchFile(outputDir, ...) utimes(outputDir, ...) utimesSync(outputDir, ...) watch(outputDir, ...) watchFile(outputDir, ...) write(outputDir, ...) writeFile(outputDir, ...) writeFileSync(outputDir, ...) writeSync(outputDir, ...) writev(outputDir, ...) writevSync(outputDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3f5061d50548ac8315351894fe0a6f858df98bf128148e13ad2888df7b705f39859c3337a84ae98651f6df47a52df76818df7ab622dcf38d4ac59ba2c6ca942e_0
2025-06-24 16:35:43,697 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputDir,...) fs. ... .accessSync(outputDir, ...) fs. ... .appendFile(outputDir,...) fs. ... .appendFileSync(outputDir, ...) fs. ... .chmod(outputDir,...) fs. ... .chmodSync(outputDir, ...) fs. ... .chown(outputDir,...) fs. ... .chownSync(outputDir, ...) fs. ... .close(outputDir,...) fs. ... .closeSync(outputDir, ...) fs. ... .copyFile(outputDir,...) fs. ... .copyFile($SMTH, outputDir,...) fs. ... .copyFileSync(outputDir, ...) fs. ... .copyFileSync($SMTH, outputDir, ...) fs. ... .cp(outputDir, ...) fs. ... .cp($SMTH, outputDir, ...) fs. ... .cpSync(outputDir, ...) fs. ... .cpSync($SMTH, outputDir, ...) fs. ... .createReadStream(outputDir,...) fs. ... .createWriteStream(outputDir,...) fs. ... .exists(outputDir, ...) fs. ... .existsSync(outputDir, ...) fs. ... .fchmod(outputDir, ...) fs. ... .fchmodSync(outputDir, ...) fs. ... .fchown(outputDir, ...) fs. ... .fchownSync(outputDir, ...) fs. ... .fdatasync(outputDir, ...) fs. ... .fdatasyncSync(outputDir, ...) fs. ... .fstat(outputDir, ...) fs. ... .fstatSync(outputDir, ...) fs. ... .fsync(outputDir, ...) fs. ... .fsyncSync(outputDir, ...) fs. ... .ftruncate(outputDir, ...) fs. ... .ftruncateSync(outputDir, ...) fs. ... .futimes(outputDir, ...) fs. ... .futimesSync(outputDir, ...) fs. ... .lchmod(outputDir, ...) fs. ... .lchmodSync(outputDir, ...) fs. ... .lchown(outputDir, ...) fs. ... .lchownSync(outputDir, ...) fs. ... .link(outputDir, ...) fs. ... .link($SMTH, outputDir, ...) fs. ... .linkSync(outputDir, ...) fs. ... .linkSync($SMTH, outputDir, ...) fs. ... .lstat(outputDir, ...) fs. ... .lstatSync(outputDir, ...) fs. ... .lutimes(outputDir, ...) fs. ... .lutimesSync(outputDir, ...) fs. ... .mkdir(outputDir, ...) fs. ... .mkdirSync(outputDir, ...) fs. ... .mkdtemp(outputDir, ...) fs. ... .mkdtempSync(outputDir, ...) fs. ... .open(outputDir, ...) fs. ... .openSync(outputDir, ...) fs. ... .opendir(outputDir, ...) fs. ... .opendirSync(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .read(outputDir, ...) fs. ... .readFile(outputDir, ...) fs. ... .readFileSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readSync(outputDir, ...) fs. ... .readdir(outputDir, ...) fs. ... .readdirSync(outputDir, ...) fs. ... .readlink(outputDir, ...) fs. ... .readlinkSync(outputDir, ...) fs. ... .readv(outputDir, ...) fs. ... .readvSync(outputDir, ...) fs. ... .realpath(outputDir, ...) fs. ... .realpath.native(outputDir, ...) fs. ... .realpathSync.native(outputDir, ...) fs. ... .realpathync(outputDir, ...) fs. ... .rename(outputDir, ...) fs. ... .rename($SMTH, outputDir, ...) fs. ... .renameSync(outputDir, ...) fs. ... .renameSync($SMTH, outputDir, ...) fs. ... .rm(outputDir, ...) fs. ... .rmSync(outputDir, ...) fs. ... .rmdir(outputDir, ...) fs. ... .rmdirSync(outputDir, ...) fs. ... .stat(outputDir, ...) fs. ... .statSync(outputDir, ...) fs. ... .symlink(outputDir, ...) fs. ... .symlink($SMTH, outputDir, ...) fs. ... .symlinkSync(outputDir, ...) fs. ... .symlinkSync($SMTH, outputDir, ...) fs. ... .truncate(outputDir, ...) fs. ... .truncateSync(outputDir, ...) fs. ... .unlink(outputDir, ...) fs. ... .unlinkSync(outputDir, ...) fs. ... .unwatchFile(outputDir, ...) fs. ... .utimes(outputDir, ...) fs. ... .utimesSync(outputDir, ...) fs. ... .watch(outputDir, ...) fs. ... .watchFile(outputDir, ...) fs. ... .write(outputDir, ...) fs. ... .writeFile(outputDir, ...) fs. ... .writeFileSync(outputDir, ...) fs. ... .writeSync(outputDir, ...) fs. ... .writev(outputDir, ...) fs. ... .writevSync(outputDir, ...) outputDir $METHOD("...", ...) access(outputDir,...) accessSync(outputDir, ...) appendFile(outputDir,...) appendFileSync(outputDir, ...) chmod(outputDir,...) chmodSync(outputDir, ...) chown(outputDir,...) chownSync(outputDir, ...) close(outputDir,...) closeSync(outputDir, ...) copyFile(outputDir,...) copyFile($SMTH, outputDir,...) copyFileSync(outputDir, ...) copyFileSync($SMTH, outputDir, ...) cp(outputDir, ...) cp($SMTH, outputDir, ...) cpSync(outputDir, ...) cpSync($SMTH, outputDir, ...) createReadStream(outputDir,...) createWriteStream(outputDir,...) exists(outputDir, ...) existsSync(outputDir, ...) fchmod(outputDir, ...) fchmodSync(outputDir, ...) fchown(outputDir, ...) fchownSync(outputDir, ...) fdatasync(outputDir, ...) fdatasyncSync(outputDir, ...) fstat(outputDir, ...) fstatSync(outputDir, ...) fsync(outputDir, ...) fsyncSync(outputDir, ...) ftruncate(outputDir, ...) ftruncateSync(outputDir, ...) futimes(outputDir, ...) futimesSync(outputDir, ...) lchmod(outputDir, ...) lchmodSync(outputDir, ...) lchown(outputDir, ...) lchownSync(outputDir, ...) link(outputDir, ...) link($SMTH, outputDir, ...) linkSync(outputDir, ...) linkSync($SMTH, outputDir, ...) lstat(outputDir, ...) lstatSync(outputDir, ...) lutimes(outputDir, ...) lutimesSync(outputDir, ...) mkdir(outputDir, ...) mkdirSync(outputDir, ...) mkdtemp(outputDir, ...) mkdtempSync(outputDir, ...) open(outputDir, ...) openSync(outputDir, ...) opendir(outputDir, ...) opendirSync(outputDir, ...) read(outputDir, ...) read(outputDir, ...) readFile(outputDir, ...) readFileSync(outputDir, ...) readSync(outputDir, ...) readSync(outputDir, ...) readdir(outputDir, ...) readdirSync(outputDir, ...) readlink(outputDir, ...) readlinkSync(outputDir, ...) readv(outputDir, ...) readvSync(outputDir, ...) realpath(outputDir, ...) realpath.native(outputDir, ...) realpathSync.native(outputDir, ...) realpathync(outputDir, ...) rename(outputDir, ...) rename($SMTH, outputDir, ...) renameSync(outputDir, ...) renameSync($SMTH, outputDir, ...) rm(outputDir, ...) rmSync(outputDir, ...) rmdir(outputDir, ...) rmdirSync(outputDir, ...) stat(outputDir, ...) statSync(outputDir, ...) symlink(outputDir, ...) symlink($SMTH, outputDir, ...) symlinkSync(outputDir, ...) symlinkSync($SMTH, outputDir, ...) truncate(outputDir, ...) truncateSync(outputDir, ...) unlink(outputDir, ...) unlinkSync(outputDir, ...) unwatchFile(outputDir, ...) utimes(outputDir, ...) utimesSync(outputDir, ...) watch(outputDir, ...) watchFile(outputDir, ...) write(outputDir, ...) writeFile(outputDir, ...) writeFileSync(outputDir, ...) writeSync(outputDir, ...) writev(outputDir, ...) writevSync(outputDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3f5061d50548ac8315351894fe0a6f858df98bf128148e13ad2888df7b705f39859c3337a84ae98651f6df47a52df76818df7ab622dcf38d4ac59ba2c6ca942e_0
2025-06-24 16:35:43,698 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,698 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile($SMTH, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync($SMTH, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp($SMTH, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync($SMTH, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link($SMTH, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync($SMTH, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename($SMTH, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync($SMTH, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink($SMTH, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync($SMTH, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile($SMTH, outputPath,...) copyFileSync(outputPath, ...) copyFileSync($SMTH, outputPath, ...) cp(outputPath, ...) cp($SMTH, outputPath, ...) cpSync(outputPath, ...) cpSync($SMTH, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link($SMTH, outputPath, ...) linkSync(outputPath, ...) linkSync($SMTH, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename($SMTH, outputPath, ...) renameSync(outputPath, ...) renameSync($SMTH, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink($SMTH, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync($SMTH, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9ff56bad388e5a9464e9e32fe8fb1dbc632ddfae07b52bf003a9e762f299386a1c8dd7cac08ac6276fef8ac21e04dee73aabedbfe553b9a2c7ffd9ebb9c2e9e1_0
2025-06-24 16:35:43,699 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile($SMTH, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync($SMTH, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp($SMTH, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync($SMTH, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link($SMTH, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync($SMTH, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename($SMTH, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync($SMTH, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink($SMTH, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync($SMTH, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile($SMTH, outputPath,...) copyFileSync(outputPath, ...) copyFileSync($SMTH, outputPath, ...) cp(outputPath, ...) cp($SMTH, outputPath, ...) cpSync(outputPath, ...) cpSync($SMTH, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link($SMTH, outputPath, ...) linkSync(outputPath, ...) linkSync($SMTH, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename($SMTH, outputPath, ...) renameSync(outputPath, ...) renameSync($SMTH, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink($SMTH, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync($SMTH, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9ff56bad388e5a9464e9e32fe8fb1dbc632ddfae07b52bf003a9e762f299386a1c8dd7cac08ac6276fef8ac21e04dee73aabedbfe553b9a2c7ffd9ebb9c2e9e1_0
2025-06-24 16:35:43,700 - semgrep.rule_match - DEBUG - match_key = ('entry function ... (..., entry,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile($SMTH, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync($SMTH, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp($SMTH, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync($SMTH, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link($SMTH, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync($SMTH, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename($SMTH, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync($SMTH, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink($SMTH, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync($SMTH, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile($SMTH, outputPath,...) copyFileSync(outputPath, ...) copyFileSync($SMTH, outputPath, ...) cp(outputPath, ...) cp($SMTH, outputPath, ...) cpSync(outputPath, ...) cpSync($SMTH, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link($SMTH, outputPath, ...) linkSync(outputPath, ...) linkSync($SMTH, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename($SMTH, outputPath, ...) renameSync(outputPath, ...) renameSync($SMTH, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink($SMTH, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync($SMTH, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9ff56bad388e5a9464e9e32fe8fb1dbc632ddfae07b52bf003a9e762f299386a1c8dd7cac08ac6276fef8ac21e04dee73aabedbfe553b9a2c7ffd9ebb9c2e9e1_0
2025-06-24 16:35:43,701 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string') match_id = 4a9c39e4fc7bd596f135a3787cee376bdfd2d4a5f060031f609eb13c420436773abead0157c7e178c2c853fe6f8fa82681d8842b309dc0fd539f42497700d565_0
2025-06-24 16:35:43,701 - semgrep.rule_match - DEBUG - match_key = ('    <uses-permission android:name=" .*</?[a-zA-Z] `    <uses-permission android:name="${permission}...`\n `...${permission}    <uses-permission android:name="`\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string') match_id = 61d12bfe35e5d6f28e44e599f2c7fc152b9583173cbdc859a4c556ac577cb968020ad436d6b63c1bc7572102ca85283f64c0a3eee0d504200df703ebc1edc8d9_0
2025-06-24 16:35:43,702 - semgrep.rule_match - DEBUG - match_key = ('    <uses-permission android:name=" .*</?[a-zA-Z] `    <uses-permission android:name="${permission}...`\n `...${permission}    <uses-permission android:name="`\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string') match_id = 61d12bfe35e5d6f28e44e599f2c7fc152b9583173cbdc859a4c556ac577cb968020ad436d6b63c1bc7572102ca85283f64c0a3eee0d504200df703ebc1edc8d9_0
2025-06-24 16:35:43,703 - semgrep.rule_match - DEBUG - match_key = ('    <uses-permission android:name=" .*</?[a-zA-Z] `    <uses-permission android:name="${permission}...`\n `...${permission}    <uses-permission android:name="`\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.html-in-template-string') match_id = 61d12bfe35e5d6f28e44e599f2c7fc152b9583173cbdc859a4c556ac577cb968020ad436d6b63c1bc7572102ca85283f64c0a3eee0d504200df703ebc1edc8d9_0
2025-06-24 16:35:43,703 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,704 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} dirPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dirPath,...) fs. ... .accessSync(dirPath, ...) fs. ... .appendFile(dirPath,...) fs. ... .appendFileSync(dirPath, ...) fs. ... .chmod(dirPath,...) fs. ... .chmodSync(dirPath, ...) fs. ... .chown(dirPath,...) fs. ... .chownSync(dirPath, ...) fs. ... .close(dirPath,...) fs. ... .closeSync(dirPath, ...) fs. ... .copyFile(dirPath,...) fs. ... .copyFile($SMTH, dirPath,...) fs. ... .copyFileSync(dirPath, ...) fs. ... .copyFileSync($SMTH, dirPath, ...) fs. ... .cp(dirPath, ...) fs. ... .cp($SMTH, dirPath, ...) fs. ... .cpSync(dirPath, ...) fs. ... .cpSync($SMTH, dirPath, ...) fs. ... .createReadStream(dirPath,...) fs. ... .createWriteStream(dirPath,...) fs. ... .exists(dirPath, ...) fs. ... .existsSync(dirPath, ...) fs. ... .fchmod(dirPath, ...) fs. ... .fchmodSync(dirPath, ...) fs. ... .fchown(dirPath, ...) fs. ... .fchownSync(dirPath, ...) fs. ... .fdatasync(dirPath, ...) fs. ... .fdatasyncSync(dirPath, ...) fs. ... .fstat(dirPath, ...) fs. ... .fstatSync(dirPath, ...) fs. ... .fsync(dirPath, ...) fs. ... .fsyncSync(dirPath, ...) fs. ... .ftruncate(dirPath, ...) fs. ... .ftruncateSync(dirPath, ...) fs. ... .futimes(dirPath, ...) fs. ... .futimesSync(dirPath, ...) fs. ... .lchmod(dirPath, ...) fs. ... .lchmodSync(dirPath, ...) fs. ... .lchown(dirPath, ...) fs. ... .lchownSync(dirPath, ...) fs. ... .link(dirPath, ...) fs. ... .link($SMTH, dirPath, ...) fs. ... .linkSync(dirPath, ...) fs. ... .linkSync($SMTH, dirPath, ...) fs. ... .lstat(dirPath, ...) fs. ... .lstatSync(dirPath, ...) fs. ... .lutimes(dirPath, ...) fs. ... .lutimesSync(dirPath, ...) fs. ... .mkdir(dirPath, ...) fs. ... .mkdirSync(dirPath, ...) fs. ... .mkdtemp(dirPath, ...) fs. ... .mkdtempSync(dirPath, ...) fs. ... .open(dirPath, ...) fs. ... .openSync(dirPath, ...) fs. ... .opendir(dirPath, ...) fs. ... .opendirSync(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .readFile(dirPath, ...) fs. ... .readFileSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readdir(dirPath, ...) fs. ... .readdirSync(dirPath, ...) fs. ... .readlink(dirPath, ...) fs. ... .readlinkSync(dirPath, ...) fs. ... .readv(dirPath, ...) fs. ... .readvSync(dirPath, ...) fs. ... .realpath(dirPath, ...) fs. ... .realpath.native(dirPath, ...) fs. ... .realpathSync.native(dirPath, ...) fs. ... .realpathync(dirPath, ...) fs. ... .rename(dirPath, ...) fs. ... .rename($SMTH, dirPath, ...) fs. ... .renameSync(dirPath, ...) fs. ... .renameSync($SMTH, dirPath, ...) fs. ... .rm(dirPath, ...) fs. ... .rmSync(dirPath, ...) fs. ... .rmdir(dirPath, ...) fs. ... .rmdirSync(dirPath, ...) fs. ... .stat(dirPath, ...) fs. ... .statSync(dirPath, ...) fs. ... .symlink(dirPath, ...) fs. ... .symlink($SMTH, dirPath, ...) fs. ... .symlinkSync(dirPath, ...) fs. ... .symlinkSync($SMTH, dirPath, ...) fs. ... .truncate(dirPath, ...) fs. ... .truncateSync(dirPath, ...) fs. ... .unlink(dirPath, ...) fs. ... .unlinkSync(dirPath, ...) fs. ... .unwatchFile(dirPath, ...) fs. ... .utimes(dirPath, ...) fs. ... .utimesSync(dirPath, ...) fs. ... .watch(dirPath, ...) fs. ... .watchFile(dirPath, ...) fs. ... .write(dirPath, ...) fs. ... .writeFile(dirPath, ...) fs. ... .writeFileSync(dirPath, ...) fs. ... .writeSync(dirPath, ...) fs. ... .writev(dirPath, ...) fs. ... .writevSync(dirPath, ...) dirPath $METHOD("...", ...) access(dirPath,...) accessSync(dirPath, ...) appendFile(dirPath,...) appendFileSync(dirPath, ...) chmod(dirPath,...) chmodSync(dirPath, ...) chown(dirPath,...) chownSync(dirPath, ...) close(dirPath,...) closeSync(dirPath, ...) copyFile(dirPath,...) copyFile($SMTH, dirPath,...) copyFileSync(dirPath, ...) copyFileSync($SMTH, dirPath, ...) cp(dirPath, ...) cp($SMTH, dirPath, ...) cpSync(dirPath, ...) cpSync($SMTH, dirPath, ...) createReadStream(dirPath,...) createWriteStream(dirPath,...) exists(dirPath, ...) existsSync(dirPath, ...) fchmod(dirPath, ...) fchmodSync(dirPath, ...) fchown(dirPath, ...) fchownSync(dirPath, ...) fdatasync(dirPath, ...) fdatasyncSync(dirPath, ...) fstat(dirPath, ...) fstatSync(dirPath, ...) fsync(dirPath, ...) fsyncSync(dirPath, ...) ftruncate(dirPath, ...) ftruncateSync(dirPath, ...) futimes(dirPath, ...) futimesSync(dirPath, ...) lchmod(dirPath, ...) lchmodSync(dirPath, ...) lchown(dirPath, ...) lchownSync(dirPath, ...) link(dirPath, ...) link($SMTH, dirPath, ...) linkSync(dirPath, ...) linkSync($SMTH, dirPath, ...) lstat(dirPath, ...) lstatSync(dirPath, ...) lutimes(dirPath, ...) lutimesSync(dirPath, ...) mkdir(dirPath, ...) mkdirSync(dirPath, ...) mkdtemp(dirPath, ...) mkdtempSync(dirPath, ...) open(dirPath, ...) openSync(dirPath, ...) opendir(dirPath, ...) opendirSync(dirPath, ...) read(dirPath, ...) read(dirPath, ...) readFile(dirPath, ...) readFileSync(dirPath, ...) readSync(dirPath, ...) readSync(dirPath, ...) readdir(dirPath, ...) readdirSync(dirPath, ...) readlink(dirPath, ...) readlinkSync(dirPath, ...) readv(dirPath, ...) readvSync(dirPath, ...) realpath(dirPath, ...) realpath.native(dirPath, ...) realpathSync.native(dirPath, ...) realpathync(dirPath, ...) rename(dirPath, ...) rename($SMTH, dirPath, ...) renameSync(dirPath, ...) renameSync($SMTH, dirPath, ...) rm(dirPath, ...) rmSync(dirPath, ...) rmdir(dirPath, ...) rmdirSync(dirPath, ...) stat(dirPath, ...) statSync(dirPath, ...) symlink(dirPath, ...) symlink($SMTH, dirPath, ...) symlinkSync(dirPath, ...) symlinkSync($SMTH, dirPath, ...) truncate(dirPath, ...) truncateSync(dirPath, ...) unlink(dirPath, ...) unlinkSync(dirPath, ...) unwatchFile(dirPath, ...) utimes(dirPath, ...) utimesSync(dirPath, ...) watch(dirPath, ...) watchFile(dirPath, ...) write(dirPath, ...) writeFile(dirPath, ...) writeFileSync(dirPath, ...) writeSync(dirPath, ...) writev(dirPath, ...) writevSync(dirPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cfab0b3db3bebff19483df1ac667029fa41e3778e8e06d9c63ff0983f8b200af0f94fbb6c232a4e9d34e806c6ade73b11a10e5eec56bf84b099a7a26a724ebc7_0
2025-06-24 16:35:43,705 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} dirPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dirPath,...) fs. ... .accessSync(dirPath, ...) fs. ... .appendFile(dirPath,...) fs. ... .appendFileSync(dirPath, ...) fs. ... .chmod(dirPath,...) fs. ... .chmodSync(dirPath, ...) fs. ... .chown(dirPath,...) fs. ... .chownSync(dirPath, ...) fs. ... .close(dirPath,...) fs. ... .closeSync(dirPath, ...) fs. ... .copyFile(dirPath,...) fs. ... .copyFile($SMTH, dirPath,...) fs. ... .copyFileSync(dirPath, ...) fs. ... .copyFileSync($SMTH, dirPath, ...) fs. ... .cp(dirPath, ...) fs. ... .cp($SMTH, dirPath, ...) fs. ... .cpSync(dirPath, ...) fs. ... .cpSync($SMTH, dirPath, ...) fs. ... .createReadStream(dirPath,...) fs. ... .createWriteStream(dirPath,...) fs. ... .exists(dirPath, ...) fs. ... .existsSync(dirPath, ...) fs. ... .fchmod(dirPath, ...) fs. ... .fchmodSync(dirPath, ...) fs. ... .fchown(dirPath, ...) fs. ... .fchownSync(dirPath, ...) fs. ... .fdatasync(dirPath, ...) fs. ... .fdatasyncSync(dirPath, ...) fs. ... .fstat(dirPath, ...) fs. ... .fstatSync(dirPath, ...) fs. ... .fsync(dirPath, ...) fs. ... .fsyncSync(dirPath, ...) fs. ... .ftruncate(dirPath, ...) fs. ... .ftruncateSync(dirPath, ...) fs. ... .futimes(dirPath, ...) fs. ... .futimesSync(dirPath, ...) fs. ... .lchmod(dirPath, ...) fs. ... .lchmodSync(dirPath, ...) fs. ... .lchown(dirPath, ...) fs. ... .lchownSync(dirPath, ...) fs. ... .link(dirPath, ...) fs. ... .link($SMTH, dirPath, ...) fs. ... .linkSync(dirPath, ...) fs. ... .linkSync($SMTH, dirPath, ...) fs. ... .lstat(dirPath, ...) fs. ... .lstatSync(dirPath, ...) fs. ... .lutimes(dirPath, ...) fs. ... .lutimesSync(dirPath, ...) fs. ... .mkdir(dirPath, ...) fs. ... .mkdirSync(dirPath, ...) fs. ... .mkdtemp(dirPath, ...) fs. ... .mkdtempSync(dirPath, ...) fs. ... .open(dirPath, ...) fs. ... .openSync(dirPath, ...) fs. ... .opendir(dirPath, ...) fs. ... .opendirSync(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .readFile(dirPath, ...) fs. ... .readFileSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readdir(dirPath, ...) fs. ... .readdirSync(dirPath, ...) fs. ... .readlink(dirPath, ...) fs. ... .readlinkSync(dirPath, ...) fs. ... .readv(dirPath, ...) fs. ... .readvSync(dirPath, ...) fs. ... .realpath(dirPath, ...) fs. ... .realpath.native(dirPath, ...) fs. ... .realpathSync.native(dirPath, ...) fs. ... .realpathync(dirPath, ...) fs. ... .rename(dirPath, ...) fs. ... .rename($SMTH, dirPath, ...) fs. ... .renameSync(dirPath, ...) fs. ... .renameSync($SMTH, dirPath, ...) fs. ... .rm(dirPath, ...) fs. ... .rmSync(dirPath, ...) fs. ... .rmdir(dirPath, ...) fs. ... .rmdirSync(dirPath, ...) fs. ... .stat(dirPath, ...) fs. ... .statSync(dirPath, ...) fs. ... .symlink(dirPath, ...) fs. ... .symlink($SMTH, dirPath, ...) fs. ... .symlinkSync(dirPath, ...) fs. ... .symlinkSync($SMTH, dirPath, ...) fs. ... .truncate(dirPath, ...) fs. ... .truncateSync(dirPath, ...) fs. ... .unlink(dirPath, ...) fs. ... .unlinkSync(dirPath, ...) fs. ... .unwatchFile(dirPath, ...) fs. ... .utimes(dirPath, ...) fs. ... .utimesSync(dirPath, ...) fs. ... .watch(dirPath, ...) fs. ... .watchFile(dirPath, ...) fs. ... .write(dirPath, ...) fs. ... .writeFile(dirPath, ...) fs. ... .writeFileSync(dirPath, ...) fs. ... .writeSync(dirPath, ...) fs. ... .writev(dirPath, ...) fs. ... .writevSync(dirPath, ...) dirPath $METHOD("...", ...) access(dirPath,...) accessSync(dirPath, ...) appendFile(dirPath,...) appendFileSync(dirPath, ...) chmod(dirPath,...) chmodSync(dirPath, ...) chown(dirPath,...) chownSync(dirPath, ...) close(dirPath,...) closeSync(dirPath, ...) copyFile(dirPath,...) copyFile($SMTH, dirPath,...) copyFileSync(dirPath, ...) copyFileSync($SMTH, dirPath, ...) cp(dirPath, ...) cp($SMTH, dirPath, ...) cpSync(dirPath, ...) cpSync($SMTH, dirPath, ...) createReadStream(dirPath,...) createWriteStream(dirPath,...) exists(dirPath, ...) existsSync(dirPath, ...) fchmod(dirPath, ...) fchmodSync(dirPath, ...) fchown(dirPath, ...) fchownSync(dirPath, ...) fdatasync(dirPath, ...) fdatasyncSync(dirPath, ...) fstat(dirPath, ...) fstatSync(dirPath, ...) fsync(dirPath, ...) fsyncSync(dirPath, ...) ftruncate(dirPath, ...) ftruncateSync(dirPath, ...) futimes(dirPath, ...) futimesSync(dirPath, ...) lchmod(dirPath, ...) lchmodSync(dirPath, ...) lchown(dirPath, ...) lchownSync(dirPath, ...) link(dirPath, ...) link($SMTH, dirPath, ...) linkSync(dirPath, ...) linkSync($SMTH, dirPath, ...) lstat(dirPath, ...) lstatSync(dirPath, ...) lutimes(dirPath, ...) lutimesSync(dirPath, ...) mkdir(dirPath, ...) mkdirSync(dirPath, ...) mkdtemp(dirPath, ...) mkdtempSync(dirPath, ...) open(dirPath, ...) openSync(dirPath, ...) opendir(dirPath, ...) opendirSync(dirPath, ...) read(dirPath, ...) read(dirPath, ...) readFile(dirPath, ...) readFileSync(dirPath, ...) readSync(dirPath, ...) readSync(dirPath, ...) readdir(dirPath, ...) readdirSync(dirPath, ...) readlink(dirPath, ...) readlinkSync(dirPath, ...) readv(dirPath, ...) readvSync(dirPath, ...) realpath(dirPath, ...) realpath.native(dirPath, ...) realpathSync.native(dirPath, ...) realpathync(dirPath, ...) rename(dirPath, ...) rename($SMTH, dirPath, ...) renameSync(dirPath, ...) renameSync($SMTH, dirPath, ...) rm(dirPath, ...) rmSync(dirPath, ...) rmdir(dirPath, ...) rmdirSync(dirPath, ...) stat(dirPath, ...) statSync(dirPath, ...) symlink(dirPath, ...) symlink($SMTH, dirPath, ...) symlinkSync(dirPath, ...) symlinkSync($SMTH, dirPath, ...) truncate(dirPath, ...) truncateSync(dirPath, ...) unlink(dirPath, ...) unlinkSync(dirPath, ...) unwatchFile(dirPath, ...) utimes(dirPath, ...) utimesSync(dirPath, ...) watch(dirPath, ...) watchFile(dirPath, ...) write(dirPath, ...) writeFile(dirPath, ...) writeFileSync(dirPath, ...) writeSync(dirPath, ...) writev(dirPath, ...) writevSync(dirPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cfab0b3db3bebff19483df1ac667029fa41e3778e8e06d9c63ff0983f8b200af0f94fbb6c232a4e9d34e806c6ade73b11a10e5eec56bf84b099a7a26a724ebc7_0
2025-06-24 16:35:43,706 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} dirPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(dirPath,...) fs. ... .accessSync(dirPath, ...) fs. ... .appendFile(dirPath,...) fs. ... .appendFileSync(dirPath, ...) fs. ... .chmod(dirPath,...) fs. ... .chmodSync(dirPath, ...) fs. ... .chown(dirPath,...) fs. ... .chownSync(dirPath, ...) fs. ... .close(dirPath,...) fs. ... .closeSync(dirPath, ...) fs. ... .copyFile(dirPath,...) fs. ... .copyFile($SMTH, dirPath,...) fs. ... .copyFileSync(dirPath, ...) fs. ... .copyFileSync($SMTH, dirPath, ...) fs. ... .cp(dirPath, ...) fs. ... .cp($SMTH, dirPath, ...) fs. ... .cpSync(dirPath, ...) fs. ... .cpSync($SMTH, dirPath, ...) fs. ... .createReadStream(dirPath,...) fs. ... .createWriteStream(dirPath,...) fs. ... .exists(dirPath, ...) fs. ... .existsSync(dirPath, ...) fs. ... .fchmod(dirPath, ...) fs. ... .fchmodSync(dirPath, ...) fs. ... .fchown(dirPath, ...) fs. ... .fchownSync(dirPath, ...) fs. ... .fdatasync(dirPath, ...) fs. ... .fdatasyncSync(dirPath, ...) fs. ... .fstat(dirPath, ...) fs. ... .fstatSync(dirPath, ...) fs. ... .fsync(dirPath, ...) fs. ... .fsyncSync(dirPath, ...) fs. ... .ftruncate(dirPath, ...) fs. ... .ftruncateSync(dirPath, ...) fs. ... .futimes(dirPath, ...) fs. ... .futimesSync(dirPath, ...) fs. ... .lchmod(dirPath, ...) fs. ... .lchmodSync(dirPath, ...) fs. ... .lchown(dirPath, ...) fs. ... .lchownSync(dirPath, ...) fs. ... .link(dirPath, ...) fs. ... .link($SMTH, dirPath, ...) fs. ... .linkSync(dirPath, ...) fs. ... .linkSync($SMTH, dirPath, ...) fs. ... .lstat(dirPath, ...) fs. ... .lstatSync(dirPath, ...) fs. ... .lutimes(dirPath, ...) fs. ... .lutimesSync(dirPath, ...) fs. ... .mkdir(dirPath, ...) fs. ... .mkdirSync(dirPath, ...) fs. ... .mkdtemp(dirPath, ...) fs. ... .mkdtempSync(dirPath, ...) fs. ... .open(dirPath, ...) fs. ... .openSync(dirPath, ...) fs. ... .opendir(dirPath, ...) fs. ... .opendirSync(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .read(dirPath, ...) fs. ... .readFile(dirPath, ...) fs. ... .readFileSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readSync(dirPath, ...) fs. ... .readdir(dirPath, ...) fs. ... .readdirSync(dirPath, ...) fs. ... .readlink(dirPath, ...) fs. ... .readlinkSync(dirPath, ...) fs. ... .readv(dirPath, ...) fs. ... .readvSync(dirPath, ...) fs. ... .realpath(dirPath, ...) fs. ... .realpath.native(dirPath, ...) fs. ... .realpathSync.native(dirPath, ...) fs. ... .realpathync(dirPath, ...) fs. ... .rename(dirPath, ...) fs. ... .rename($SMTH, dirPath, ...) fs. ... .renameSync(dirPath, ...) fs. ... .renameSync($SMTH, dirPath, ...) fs. ... .rm(dirPath, ...) fs. ... .rmSync(dirPath, ...) fs. ... .rmdir(dirPath, ...) fs. ... .rmdirSync(dirPath, ...) fs. ... .stat(dirPath, ...) fs. ... .statSync(dirPath, ...) fs. ... .symlink(dirPath, ...) fs. ... .symlink($SMTH, dirPath, ...) fs. ... .symlinkSync(dirPath, ...) fs. ... .symlinkSync($SMTH, dirPath, ...) fs. ... .truncate(dirPath, ...) fs. ... .truncateSync(dirPath, ...) fs. ... .unlink(dirPath, ...) fs. ... .unlinkSync(dirPath, ...) fs. ... .unwatchFile(dirPath, ...) fs. ... .utimes(dirPath, ...) fs. ... .utimesSync(dirPath, ...) fs. ... .watch(dirPath, ...) fs. ... .watchFile(dirPath, ...) fs. ... .write(dirPath, ...) fs. ... .writeFile(dirPath, ...) fs. ... .writeFileSync(dirPath, ...) fs. ... .writeSync(dirPath, ...) fs. ... .writev(dirPath, ...) fs. ... .writevSync(dirPath, ...) dirPath $METHOD("...", ...) access(dirPath,...) accessSync(dirPath, ...) appendFile(dirPath,...) appendFileSync(dirPath, ...) chmod(dirPath,...) chmodSync(dirPath, ...) chown(dirPath,...) chownSync(dirPath, ...) close(dirPath,...) closeSync(dirPath, ...) copyFile(dirPath,...) copyFile($SMTH, dirPath,...) copyFileSync(dirPath, ...) copyFileSync($SMTH, dirPath, ...) cp(dirPath, ...) cp($SMTH, dirPath, ...) cpSync(dirPath, ...) cpSync($SMTH, dirPath, ...) createReadStream(dirPath,...) createWriteStream(dirPath,...) exists(dirPath, ...) existsSync(dirPath, ...) fchmod(dirPath, ...) fchmodSync(dirPath, ...) fchown(dirPath, ...) fchownSync(dirPath, ...) fdatasync(dirPath, ...) fdatasyncSync(dirPath, ...) fstat(dirPath, ...) fstatSync(dirPath, ...) fsync(dirPath, ...) fsyncSync(dirPath, ...) ftruncate(dirPath, ...) ftruncateSync(dirPath, ...) futimes(dirPath, ...) futimesSync(dirPath, ...) lchmod(dirPath, ...) lchmodSync(dirPath, ...) lchown(dirPath, ...) lchownSync(dirPath, ...) link(dirPath, ...) link($SMTH, dirPath, ...) linkSync(dirPath, ...) linkSync($SMTH, dirPath, ...) lstat(dirPath, ...) lstatSync(dirPath, ...) lutimes(dirPath, ...) lutimesSync(dirPath, ...) mkdir(dirPath, ...) mkdirSync(dirPath, ...) mkdtemp(dirPath, ...) mkdtempSync(dirPath, ...) open(dirPath, ...) openSync(dirPath, ...) opendir(dirPath, ...) opendirSync(dirPath, ...) read(dirPath, ...) read(dirPath, ...) readFile(dirPath, ...) readFileSync(dirPath, ...) readSync(dirPath, ...) readSync(dirPath, ...) readdir(dirPath, ...) readdirSync(dirPath, ...) readlink(dirPath, ...) readlinkSync(dirPath, ...) readv(dirPath, ...) readvSync(dirPath, ...) realpath(dirPath, ...) realpath.native(dirPath, ...) realpathSync.native(dirPath, ...) realpathync(dirPath, ...) rename(dirPath, ...) rename($SMTH, dirPath, ...) renameSync(dirPath, ...) renameSync($SMTH, dirPath, ...) rm(dirPath, ...) rmSync(dirPath, ...) rmdir(dirPath, ...) rmdirSync(dirPath, ...) stat(dirPath, ...) statSync(dirPath, ...) symlink(dirPath, ...) symlink($SMTH, dirPath, ...) symlinkSync(dirPath, ...) symlinkSync($SMTH, dirPath, ...) truncate(dirPath, ...) truncateSync(dirPath, ...) unlink(dirPath, ...) unlinkSync(dirPath, ...) unwatchFile(dirPath, ...) utimes(dirPath, ...) utimesSync(dirPath, ...) watch(dirPath, ...) watchFile(dirPath, ...) write(dirPath, ...) writeFile(dirPath, ...) writeFileSync(dirPath, ...) writeSync(dirPath, ...) writev(dirPath, ...) writevSync(dirPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cfab0b3db3bebff19483df1ac667029fa41e3778e8e06d9c63ff0983f8b200af0f94fbb6c232a4e9d34e806c6ade73b11a10e5eec56bf84b099a7a26a724ebc7_0
2025-06-24 16:35:43,707 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,707 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath dirPath import 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 3a163dce379023dcfbefa8f46d1fbf5e5de55f348d21251493cc5735926e6dd0410b90c0e3d7a6abd93356d683be130c822f954756cba0b629c143f8e3e1e3ea_0
2025-06-24 16:35:43,708 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath dirPath import 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 3a163dce379023dcfbefa8f46d1fbf5e5de55f348d21251493cc5735926e6dd0410b90c0e3d7a6abd93356d683be130c822f954756cba0b629c143f8e3e1e3ea_0
2025-06-24 16:35:43,709 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath dirPath import 'path';\n...\n path.join(...,dirPath,...) path.resolve(...,dirPath,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 3a163dce379023dcfbefa8f46d1fbf5e5de55f348d21251493cc5735926e6dd0410b90c0e3d7a6abd93356d683be130c822f954756cba0b629c143f8e3e1e3ea_0
2025-06-24 16:35:43,710 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,710 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_0
2025-06-24 16:35:43,711 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_0
2025-06-24 16:35:43,712 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_0
2025-06-24 16:35:43,712 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,713 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath archivePath import 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath function ... (...,archivePath,...) {...}\n function ... (...,{...,archivePath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 9fe8ad6e21810ff2739af2d599611fb35b3fd31ec7e2f91f46ccf83a7caef77fb17fc1abf0d662cf3c877c661931cfeaedb815f73dc554791a7053e4b9e99492_0
2025-06-24 16:35:43,714 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath archivePath import 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath function ... (...,archivePath,...) {...}\n function ... (...,{...,archivePath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 9fe8ad6e21810ff2739af2d599611fb35b3fd31ec7e2f91f46ccf83a7caef77fb17fc1abf0d662cf3c877c661931cfeaedb815f73dc554791a7053e4b9e99492_0
2025-06-24 16:35:43,715 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath archivePath import 'path';\n...\n path.join(...,archivePath,...) path.resolve(...,archivePath,...) archivePath function ... (...,archivePath,...) {...}\n function ... (...,{...,archivePath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 9fe8ad6e21810ff2739af2d599611fb35b3fd31ec7e2f91f46ccf83a7caef77fb17fc1abf0d662cf3c877c661931cfeaedb815f73dc554791a7053e4b9e99492_0
2025-06-24 16:35:43,715 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,716 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_0
2025-06-24 16:35:43,717 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_0
2025-06-24 16:35:43,717 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) dirPath function ... (...,dirPath,...) {...}\n function ... (...,{...,dirPath,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = fbc9cbce46c5dceefc996cfe618d78c3fc07f7cee1fe79f6111b86dad1d5507723b13f8de066d3c7429e04db116513d6e4f540098b361c6cde7c514ad4af61c9_1
2025-06-24 16:35:43,718 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,719 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 34862f3ed88fdd76bb47541fdb179f7f00bb5a957fc54fa614e3561688345177b4f78380ff724bbdd95b60f638b2ba1f481d1b5d430eb0abf5441d1163f4a8b6_0
2025-06-24 16:35:43,720 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 34862f3ed88fdd76bb47541fdb179f7f00bb5a957fc54fa614e3561688345177b4f78380ff724bbdd95b60f638b2ba1f481d1b5d430eb0abf5441d1163f4a8b6_0
2025-06-24 16:35:43,721 - semgrep.rule_match - DEBUG - match_key = ('dirPath function ... (..., dirPath,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 34862f3ed88fdd76bb47541fdb179f7f00bb5a957fc54fa614e3561688345177b4f78380ff724bbdd95b60f638b2ba1f481d1b5d430eb0abf5441d1163f4a8b6_0
2025-06-24 16:35:43,722 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 987385f9e1bdf7707ee32bc82796f05bebb41e22bfe84ee9d96c27bd90e6d9b4ed9a1af363ff6139068ed030025e800af8c7bde6b0effc58578042498c484e5f_0
2025-06-24 16:35:43,722 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n ``Error adding directory dirPath:` $UTIL = require(\'util\')\n...\n $UTIL.format(``Error adding directory dirPath:`,error,...)\n console.error(``Error adding directory dirPath:`,error,...)\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4105de8868d39d82036bcadf4bb0ac8cf832db38605c940d529b87d50dfa2d601f1231233ee023ce4958b59784d7dc27c276a9e08877d3f4b9594ab1fa5e5599_0
2025-06-24 16:35:43,723 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n ``Error adding directory dirPath:` $UTIL = require(\'util\')\n...\n $UTIL.format(``Error adding directory dirPath:`,error,...)\n console.error(``Error adding directory dirPath:`,error,...)\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4105de8868d39d82036bcadf4bb0ac8cf832db38605c940d529b87d50dfa2d601f1231233ee023ce4958b59784d7dc27c276a9e08877d3f4b9594ab1fa5e5599_0
2025-06-24 16:35:43,724 - semgrep.rule_match - DEBUG - match_key = ('"..." + "..."\n $X + $Y $X.concat($Y) `...${...}...`\n $X.concat("...")\n ``Error adding directory dirPath:` $UTIL = require(\'util\')\n...\n $UTIL.format(``Error adding directory dirPath:`,error,...)\n console.error(``Error adding directory dirPath:`,error,...)\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring') match_id = 4105de8868d39d82036bcadf4bb0ac8cf832db38605c940d529b87d50dfa2d601f1231233ee023ce4958b59784d7dc27c276a9e08877d3f4b9594ab1fa5e5599_0
2025-06-24 16:35:43,724 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,725 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} currentDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(currentDir,...) fs. ... .accessSync(currentDir, ...) fs. ... .appendFile(currentDir,...) fs. ... .appendFileSync(currentDir, ...) fs. ... .chmod(currentDir,...) fs. ... .chmodSync(currentDir, ...) fs. ... .chown(currentDir,...) fs. ... .chownSync(currentDir, ...) fs. ... .close(currentDir,...) fs. ... .closeSync(currentDir, ...) fs. ... .copyFile(currentDir,...) fs. ... .copyFile($SMTH, currentDir,...) fs. ... .copyFileSync(currentDir, ...) fs. ... .copyFileSync($SMTH, currentDir, ...) fs. ... .cp(currentDir, ...) fs. ... .cp($SMTH, currentDir, ...) fs. ... .cpSync(currentDir, ...) fs. ... .cpSync($SMTH, currentDir, ...) fs. ... .createReadStream(currentDir,...) fs. ... .createWriteStream(currentDir,...) fs. ... .exists(currentDir, ...) fs. ... .existsSync(currentDir, ...) fs. ... .fchmod(currentDir, ...) fs. ... .fchmodSync(currentDir, ...) fs. ... .fchown(currentDir, ...) fs. ... .fchownSync(currentDir, ...) fs. ... .fdatasync(currentDir, ...) fs. ... .fdatasyncSync(currentDir, ...) fs. ... .fstat(currentDir, ...) fs. ... .fstatSync(currentDir, ...) fs. ... .fsync(currentDir, ...) fs. ... .fsyncSync(currentDir, ...) fs. ... .ftruncate(currentDir, ...) fs. ... .ftruncateSync(currentDir, ...) fs. ... .futimes(currentDir, ...) fs. ... .futimesSync(currentDir, ...) fs. ... .lchmod(currentDir, ...) fs. ... .lchmodSync(currentDir, ...) fs. ... .lchown(currentDir, ...) fs. ... .lchownSync(currentDir, ...) fs. ... .link(currentDir, ...) fs. ... .link($SMTH, currentDir, ...) fs. ... .linkSync(currentDir, ...) fs. ... .linkSync($SMTH, currentDir, ...) fs. ... .lstat(currentDir, ...) fs. ... .lstatSync(currentDir, ...) fs. ... .lutimes(currentDir, ...) fs. ... .lutimesSync(currentDir, ...) fs. ... .mkdir(currentDir, ...) fs. ... .mkdirSync(currentDir, ...) fs. ... .mkdtemp(currentDir, ...) fs. ... .mkdtempSync(currentDir, ...) fs. ... .open(currentDir, ...) fs. ... .openSync(currentDir, ...) fs. ... .opendir(currentDir, ...) fs. ... .opendirSync(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .readFile(currentDir, ...) fs. ... .readFileSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readdir(currentDir, ...) fs. ... .readdirSync(currentDir, ...) fs. ... .readlink(currentDir, ...) fs. ... .readlinkSync(currentDir, ...) fs. ... .readv(currentDir, ...) fs. ... .readvSync(currentDir, ...) fs. ... .realpath(currentDir, ...) fs. ... .realpath.native(currentDir, ...) fs. ... .realpathSync.native(currentDir, ...) fs. ... .realpathync(currentDir, ...) fs. ... .rename(currentDir, ...) fs. ... .rename($SMTH, currentDir, ...) fs. ... .renameSync(currentDir, ...) fs. ... .renameSync($SMTH, currentDir, ...) fs. ... .rm(currentDir, ...) fs. ... .rmSync(currentDir, ...) fs. ... .rmdir(currentDir, ...) fs. ... .rmdirSync(currentDir, ...) fs. ... .stat(currentDir, ...) fs. ... .statSync(currentDir, ...) fs. ... .symlink(currentDir, ...) fs. ... .symlink($SMTH, currentDir, ...) fs. ... .symlinkSync(currentDir, ...) fs. ... .symlinkSync($SMTH, currentDir, ...) fs. ... .truncate(currentDir, ...) fs. ... .truncateSync(currentDir, ...) fs. ... .unlink(currentDir, ...) fs. ... .unlinkSync(currentDir, ...) fs. ... .unwatchFile(currentDir, ...) fs. ... .utimes(currentDir, ...) fs. ... .utimesSync(currentDir, ...) fs. ... .watch(currentDir, ...) fs. ... .watchFile(currentDir, ...) fs. ... .write(currentDir, ...) fs. ... .writeFile(currentDir, ...) fs. ... .writeFileSync(currentDir, ...) fs. ... .writeSync(currentDir, ...) fs. ... .writev(currentDir, ...) fs. ... .writevSync(currentDir, ...) currentDir $METHOD("...", ...) access(currentDir,...) accessSync(currentDir, ...) appendFile(currentDir,...) appendFileSync(currentDir, ...) chmod(currentDir,...) chmodSync(currentDir, ...) chown(currentDir,...) chownSync(currentDir, ...) close(currentDir,...) closeSync(currentDir, ...) copyFile(currentDir,...) copyFile($SMTH, currentDir,...) copyFileSync(currentDir, ...) copyFileSync($SMTH, currentDir, ...) cp(currentDir, ...) cp($SMTH, currentDir, ...) cpSync(currentDir, ...) cpSync($SMTH, currentDir, ...) createReadStream(currentDir,...) createWriteStream(currentDir,...) exists(currentDir, ...) existsSync(currentDir, ...) fchmod(currentDir, ...) fchmodSync(currentDir, ...) fchown(currentDir, ...) fchownSync(currentDir, ...) fdatasync(currentDir, ...) fdatasyncSync(currentDir, ...) fstat(currentDir, ...) fstatSync(currentDir, ...) fsync(currentDir, ...) fsyncSync(currentDir, ...) ftruncate(currentDir, ...) ftruncateSync(currentDir, ...) futimes(currentDir, ...) futimesSync(currentDir, ...) lchmod(currentDir, ...) lchmodSync(currentDir, ...) lchown(currentDir, ...) lchownSync(currentDir, ...) link(currentDir, ...) link($SMTH, currentDir, ...) linkSync(currentDir, ...) linkSync($SMTH, currentDir, ...) lstat(currentDir, ...) lstatSync(currentDir, ...) lutimes(currentDir, ...) lutimesSync(currentDir, ...) mkdir(currentDir, ...) mkdirSync(currentDir, ...) mkdtemp(currentDir, ...) mkdtempSync(currentDir, ...) open(currentDir, ...) openSync(currentDir, ...) opendir(currentDir, ...) opendirSync(currentDir, ...) read(currentDir, ...) read(currentDir, ...) readFile(currentDir, ...) readFileSync(currentDir, ...) readSync(currentDir, ...) readSync(currentDir, ...) readdir(currentDir, ...) readdirSync(currentDir, ...) readlink(currentDir, ...) readlinkSync(currentDir, ...) readv(currentDir, ...) readvSync(currentDir, ...) realpath(currentDir, ...) realpath.native(currentDir, ...) realpathSync.native(currentDir, ...) realpathync(currentDir, ...) rename(currentDir, ...) rename($SMTH, currentDir, ...) renameSync(currentDir, ...) renameSync($SMTH, currentDir, ...) rm(currentDir, ...) rmSync(currentDir, ...) rmdir(currentDir, ...) rmdirSync(currentDir, ...) stat(currentDir, ...) statSync(currentDir, ...) symlink(currentDir, ...) symlink($SMTH, currentDir, ...) symlinkSync(currentDir, ...) symlinkSync($SMTH, currentDir, ...) truncate(currentDir, ...) truncateSync(currentDir, ...) unlink(currentDir, ...) unlinkSync(currentDir, ...) unwatchFile(currentDir, ...) utimes(currentDir, ...) utimesSync(currentDir, ...) watch(currentDir, ...) watchFile(currentDir, ...) write(currentDir, ...) writeFile(currentDir, ...) writeFileSync(currentDir, ...) writeSync(currentDir, ...) writev(currentDir, ...) writevSync(currentDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3a72d7f15ba064f15c1f5a26c892cb5c7ca78258bfab76a768257c94877cb9b58f3acbaef6753b9dd816ae0a76ea4f41d38013d605152c75de850823cfd9a0b6_0
2025-06-24 16:35:43,726 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} currentDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(currentDir,...) fs. ... .accessSync(currentDir, ...) fs. ... .appendFile(currentDir,...) fs. ... .appendFileSync(currentDir, ...) fs. ... .chmod(currentDir,...) fs. ... .chmodSync(currentDir, ...) fs. ... .chown(currentDir,...) fs. ... .chownSync(currentDir, ...) fs. ... .close(currentDir,...) fs. ... .closeSync(currentDir, ...) fs. ... .copyFile(currentDir,...) fs. ... .copyFile($SMTH, currentDir,...) fs. ... .copyFileSync(currentDir, ...) fs. ... .copyFileSync($SMTH, currentDir, ...) fs. ... .cp(currentDir, ...) fs. ... .cp($SMTH, currentDir, ...) fs. ... .cpSync(currentDir, ...) fs. ... .cpSync($SMTH, currentDir, ...) fs. ... .createReadStream(currentDir,...) fs. ... .createWriteStream(currentDir,...) fs. ... .exists(currentDir, ...) fs. ... .existsSync(currentDir, ...) fs. ... .fchmod(currentDir, ...) fs. ... .fchmodSync(currentDir, ...) fs. ... .fchown(currentDir, ...) fs. ... .fchownSync(currentDir, ...) fs. ... .fdatasync(currentDir, ...) fs. ... .fdatasyncSync(currentDir, ...) fs. ... .fstat(currentDir, ...) fs. ... .fstatSync(currentDir, ...) fs. ... .fsync(currentDir, ...) fs. ... .fsyncSync(currentDir, ...) fs. ... .ftruncate(currentDir, ...) fs. ... .ftruncateSync(currentDir, ...) fs. ... .futimes(currentDir, ...) fs. ... .futimesSync(currentDir, ...) fs. ... .lchmod(currentDir, ...) fs. ... .lchmodSync(currentDir, ...) fs. ... .lchown(currentDir, ...) fs. ... .lchownSync(currentDir, ...) fs. ... .link(currentDir, ...) fs. ... .link($SMTH, currentDir, ...) fs. ... .linkSync(currentDir, ...) fs. ... .linkSync($SMTH, currentDir, ...) fs. ... .lstat(currentDir, ...) fs. ... .lstatSync(currentDir, ...) fs. ... .lutimes(currentDir, ...) fs. ... .lutimesSync(currentDir, ...) fs. ... .mkdir(currentDir, ...) fs. ... .mkdirSync(currentDir, ...) fs. ... .mkdtemp(currentDir, ...) fs. ... .mkdtempSync(currentDir, ...) fs. ... .open(currentDir, ...) fs. ... .openSync(currentDir, ...) fs. ... .opendir(currentDir, ...) fs. ... .opendirSync(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .readFile(currentDir, ...) fs. ... .readFileSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readdir(currentDir, ...) fs. ... .readdirSync(currentDir, ...) fs. ... .readlink(currentDir, ...) fs. ... .readlinkSync(currentDir, ...) fs. ... .readv(currentDir, ...) fs. ... .readvSync(currentDir, ...) fs. ... .realpath(currentDir, ...) fs. ... .realpath.native(currentDir, ...) fs. ... .realpathSync.native(currentDir, ...) fs. ... .realpathync(currentDir, ...) fs. ... .rename(currentDir, ...) fs. ... .rename($SMTH, currentDir, ...) fs. ... .renameSync(currentDir, ...) fs. ... .renameSync($SMTH, currentDir, ...) fs. ... .rm(currentDir, ...) fs. ... .rmSync(currentDir, ...) fs. ... .rmdir(currentDir, ...) fs. ... .rmdirSync(currentDir, ...) fs. ... .stat(currentDir, ...) fs. ... .statSync(currentDir, ...) fs. ... .symlink(currentDir, ...) fs. ... .symlink($SMTH, currentDir, ...) fs. ... .symlinkSync(currentDir, ...) fs. ... .symlinkSync($SMTH, currentDir, ...) fs. ... .truncate(currentDir, ...) fs. ... .truncateSync(currentDir, ...) fs. ... .unlink(currentDir, ...) fs. ... .unlinkSync(currentDir, ...) fs. ... .unwatchFile(currentDir, ...) fs. ... .utimes(currentDir, ...) fs. ... .utimesSync(currentDir, ...) fs. ... .watch(currentDir, ...) fs. ... .watchFile(currentDir, ...) fs. ... .write(currentDir, ...) fs. ... .writeFile(currentDir, ...) fs. ... .writeFileSync(currentDir, ...) fs. ... .writeSync(currentDir, ...) fs. ... .writev(currentDir, ...) fs. ... .writevSync(currentDir, ...) currentDir $METHOD("...", ...) access(currentDir,...) accessSync(currentDir, ...) appendFile(currentDir,...) appendFileSync(currentDir, ...) chmod(currentDir,...) chmodSync(currentDir, ...) chown(currentDir,...) chownSync(currentDir, ...) close(currentDir,...) closeSync(currentDir, ...) copyFile(currentDir,...) copyFile($SMTH, currentDir,...) copyFileSync(currentDir, ...) copyFileSync($SMTH, currentDir, ...) cp(currentDir, ...) cp($SMTH, currentDir, ...) cpSync(currentDir, ...) cpSync($SMTH, currentDir, ...) createReadStream(currentDir,...) createWriteStream(currentDir,...) exists(currentDir, ...) existsSync(currentDir, ...) fchmod(currentDir, ...) fchmodSync(currentDir, ...) fchown(currentDir, ...) fchownSync(currentDir, ...) fdatasync(currentDir, ...) fdatasyncSync(currentDir, ...) fstat(currentDir, ...) fstatSync(currentDir, ...) fsync(currentDir, ...) fsyncSync(currentDir, ...) ftruncate(currentDir, ...) ftruncateSync(currentDir, ...) futimes(currentDir, ...) futimesSync(currentDir, ...) lchmod(currentDir, ...) lchmodSync(currentDir, ...) lchown(currentDir, ...) lchownSync(currentDir, ...) link(currentDir, ...) link($SMTH, currentDir, ...) linkSync(currentDir, ...) linkSync($SMTH, currentDir, ...) lstat(currentDir, ...) lstatSync(currentDir, ...) lutimes(currentDir, ...) lutimesSync(currentDir, ...) mkdir(currentDir, ...) mkdirSync(currentDir, ...) mkdtemp(currentDir, ...) mkdtempSync(currentDir, ...) open(currentDir, ...) openSync(currentDir, ...) opendir(currentDir, ...) opendirSync(currentDir, ...) read(currentDir, ...) read(currentDir, ...) readFile(currentDir, ...) readFileSync(currentDir, ...) readSync(currentDir, ...) readSync(currentDir, ...) readdir(currentDir, ...) readdirSync(currentDir, ...) readlink(currentDir, ...) readlinkSync(currentDir, ...) readv(currentDir, ...) readvSync(currentDir, ...) realpath(currentDir, ...) realpath.native(currentDir, ...) realpathSync.native(currentDir, ...) realpathync(currentDir, ...) rename(currentDir, ...) rename($SMTH, currentDir, ...) renameSync(currentDir, ...) renameSync($SMTH, currentDir, ...) rm(currentDir, ...) rmSync(currentDir, ...) rmdir(currentDir, ...) rmdirSync(currentDir, ...) stat(currentDir, ...) statSync(currentDir, ...) symlink(currentDir, ...) symlink($SMTH, currentDir, ...) symlinkSync(currentDir, ...) symlinkSync($SMTH, currentDir, ...) truncate(currentDir, ...) truncateSync(currentDir, ...) unlink(currentDir, ...) unlinkSync(currentDir, ...) unwatchFile(currentDir, ...) utimes(currentDir, ...) utimesSync(currentDir, ...) watch(currentDir, ...) watchFile(currentDir, ...) write(currentDir, ...) writeFile(currentDir, ...) writeFileSync(currentDir, ...) writeSync(currentDir, ...) writev(currentDir, ...) writevSync(currentDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3a72d7f15ba064f15c1f5a26c892cb5c7ca78258bfab76a768257c94877cb9b58f3acbaef6753b9dd816ae0a76ea4f41d38013d605152c75de850823cfd9a0b6_0
2025-06-24 16:35:43,727 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} currentDir fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(currentDir,...) fs. ... .accessSync(currentDir, ...) fs. ... .appendFile(currentDir,...) fs. ... .appendFileSync(currentDir, ...) fs. ... .chmod(currentDir,...) fs. ... .chmodSync(currentDir, ...) fs. ... .chown(currentDir,...) fs. ... .chownSync(currentDir, ...) fs. ... .close(currentDir,...) fs. ... .closeSync(currentDir, ...) fs. ... .copyFile(currentDir,...) fs. ... .copyFile($SMTH, currentDir,...) fs. ... .copyFileSync(currentDir, ...) fs. ... .copyFileSync($SMTH, currentDir, ...) fs. ... .cp(currentDir, ...) fs. ... .cp($SMTH, currentDir, ...) fs. ... .cpSync(currentDir, ...) fs. ... .cpSync($SMTH, currentDir, ...) fs. ... .createReadStream(currentDir,...) fs. ... .createWriteStream(currentDir,...) fs. ... .exists(currentDir, ...) fs. ... .existsSync(currentDir, ...) fs. ... .fchmod(currentDir, ...) fs. ... .fchmodSync(currentDir, ...) fs. ... .fchown(currentDir, ...) fs. ... .fchownSync(currentDir, ...) fs. ... .fdatasync(currentDir, ...) fs. ... .fdatasyncSync(currentDir, ...) fs. ... .fstat(currentDir, ...) fs. ... .fstatSync(currentDir, ...) fs. ... .fsync(currentDir, ...) fs. ... .fsyncSync(currentDir, ...) fs. ... .ftruncate(currentDir, ...) fs. ... .ftruncateSync(currentDir, ...) fs. ... .futimes(currentDir, ...) fs. ... .futimesSync(currentDir, ...) fs. ... .lchmod(currentDir, ...) fs. ... .lchmodSync(currentDir, ...) fs. ... .lchown(currentDir, ...) fs. ... .lchownSync(currentDir, ...) fs. ... .link(currentDir, ...) fs. ... .link($SMTH, currentDir, ...) fs. ... .linkSync(currentDir, ...) fs. ... .linkSync($SMTH, currentDir, ...) fs. ... .lstat(currentDir, ...) fs. ... .lstatSync(currentDir, ...) fs. ... .lutimes(currentDir, ...) fs. ... .lutimesSync(currentDir, ...) fs. ... .mkdir(currentDir, ...) fs. ... .mkdirSync(currentDir, ...) fs. ... .mkdtemp(currentDir, ...) fs. ... .mkdtempSync(currentDir, ...) fs. ... .open(currentDir, ...) fs. ... .openSync(currentDir, ...) fs. ... .opendir(currentDir, ...) fs. ... .opendirSync(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .read(currentDir, ...) fs. ... .readFile(currentDir, ...) fs. ... .readFileSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readSync(currentDir, ...) fs. ... .readdir(currentDir, ...) fs. ... .readdirSync(currentDir, ...) fs. ... .readlink(currentDir, ...) fs. ... .readlinkSync(currentDir, ...) fs. ... .readv(currentDir, ...) fs. ... .readvSync(currentDir, ...) fs. ... .realpath(currentDir, ...) fs. ... .realpath.native(currentDir, ...) fs. ... .realpathSync.native(currentDir, ...) fs. ... .realpathync(currentDir, ...) fs. ... .rename(currentDir, ...) fs. ... .rename($SMTH, currentDir, ...) fs. ... .renameSync(currentDir, ...) fs. ... .renameSync($SMTH, currentDir, ...) fs. ... .rm(currentDir, ...) fs. ... .rmSync(currentDir, ...) fs. ... .rmdir(currentDir, ...) fs. ... .rmdirSync(currentDir, ...) fs. ... .stat(currentDir, ...) fs. ... .statSync(currentDir, ...) fs. ... .symlink(currentDir, ...) fs. ... .symlink($SMTH, currentDir, ...) fs. ... .symlinkSync(currentDir, ...) fs. ... .symlinkSync($SMTH, currentDir, ...) fs. ... .truncate(currentDir, ...) fs. ... .truncateSync(currentDir, ...) fs. ... .unlink(currentDir, ...) fs. ... .unlinkSync(currentDir, ...) fs. ... .unwatchFile(currentDir, ...) fs. ... .utimes(currentDir, ...) fs. ... .utimesSync(currentDir, ...) fs. ... .watch(currentDir, ...) fs. ... .watchFile(currentDir, ...) fs. ... .write(currentDir, ...) fs. ... .writeFile(currentDir, ...) fs. ... .writeFileSync(currentDir, ...) fs. ... .writeSync(currentDir, ...) fs. ... .writev(currentDir, ...) fs. ... .writevSync(currentDir, ...) currentDir $METHOD("...", ...) access(currentDir,...) accessSync(currentDir, ...) appendFile(currentDir,...) appendFileSync(currentDir, ...) chmod(currentDir,...) chmodSync(currentDir, ...) chown(currentDir,...) chownSync(currentDir, ...) close(currentDir,...) closeSync(currentDir, ...) copyFile(currentDir,...) copyFile($SMTH, currentDir,...) copyFileSync(currentDir, ...) copyFileSync($SMTH, currentDir, ...) cp(currentDir, ...) cp($SMTH, currentDir, ...) cpSync(currentDir, ...) cpSync($SMTH, currentDir, ...) createReadStream(currentDir,...) createWriteStream(currentDir,...) exists(currentDir, ...) existsSync(currentDir, ...) fchmod(currentDir, ...) fchmodSync(currentDir, ...) fchown(currentDir, ...) fchownSync(currentDir, ...) fdatasync(currentDir, ...) fdatasyncSync(currentDir, ...) fstat(currentDir, ...) fstatSync(currentDir, ...) fsync(currentDir, ...) fsyncSync(currentDir, ...) ftruncate(currentDir, ...) ftruncateSync(currentDir, ...) futimes(currentDir, ...) futimesSync(currentDir, ...) lchmod(currentDir, ...) lchmodSync(currentDir, ...) lchown(currentDir, ...) lchownSync(currentDir, ...) link(currentDir, ...) link($SMTH, currentDir, ...) linkSync(currentDir, ...) linkSync($SMTH, currentDir, ...) lstat(currentDir, ...) lstatSync(currentDir, ...) lutimes(currentDir, ...) lutimesSync(currentDir, ...) mkdir(currentDir, ...) mkdirSync(currentDir, ...) mkdtemp(currentDir, ...) mkdtempSync(currentDir, ...) open(currentDir, ...) openSync(currentDir, ...) opendir(currentDir, ...) opendirSync(currentDir, ...) read(currentDir, ...) read(currentDir, ...) readFile(currentDir, ...) readFileSync(currentDir, ...) readSync(currentDir, ...) readSync(currentDir, ...) readdir(currentDir, ...) readdirSync(currentDir, ...) readlink(currentDir, ...) readlinkSync(currentDir, ...) readv(currentDir, ...) readvSync(currentDir, ...) realpath(currentDir, ...) realpath.native(currentDir, ...) realpathSync.native(currentDir, ...) realpathync(currentDir, ...) rename(currentDir, ...) rename($SMTH, currentDir, ...) renameSync(currentDir, ...) renameSync($SMTH, currentDir, ...) rm(currentDir, ...) rmSync(currentDir, ...) rmdir(currentDir, ...) rmdirSync(currentDir, ...) stat(currentDir, ...) statSync(currentDir, ...) symlink(currentDir, ...) symlink($SMTH, currentDir, ...) symlinkSync(currentDir, ...) symlinkSync($SMTH, currentDir, ...) truncate(currentDir, ...) truncateSync(currentDir, ...) unlink(currentDir, ...) unlinkSync(currentDir, ...) unwatchFile(currentDir, ...) utimes(currentDir, ...) utimesSync(currentDir, ...) watch(currentDir, ...) watchFile(currentDir, ...) write(currentDir, ...) writeFile(currentDir, ...) writeFileSync(currentDir, ...) writeSync(currentDir, ...) writev(currentDir, ...) writevSync(currentDir, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 3a72d7f15ba064f15c1f5a26c892cb5c7ca78258bfab76a768257c94877cb9b58f3acbaef6753b9dd816ae0a76ea4f41d38013d605152c75de850823cfd9a0b6_0
2025-06-24 16:35:43,728 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,728 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir currentDir import 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 22245b4e2d7f343fd9c7689887f7282cd0c2a7c77423b26f957a388841a3a496e2c84a046d11c14e45f5de7bebfabddf73ad67cf95929c2336816a6a66bf81f0_0
2025-06-24 16:35:43,729 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir currentDir import 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 22245b4e2d7f343fd9c7689887f7282cd0c2a7c77423b26f957a388841a3a496e2c84a046d11c14e45f5de7bebfabddf73ad67cf95929c2336816a6a66bf81f0_0
2025-06-24 16:35:43,730 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir currentDir import 'path';\n...\n path.join(...,currentDir,...) path.resolve(...,currentDir,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 22245b4e2d7f343fd9c7689887f7282cd0c2a7c77423b26f957a388841a3a496e2c84a046d11c14e45f5de7bebfabddf73ad67cf95929c2336816a6a66bf81f0_0
2025-06-24 16:35:43,731 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 02c4c3d565ed6657da485b0d126a56617aaba0477aa0b0e3b40f7fe909f0ecf588b6d18127be09ebf77d5f63f731fa279153cf47f0a483334ac953b574f57eec_0
2025-06-24 16:35:43,731 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 50bf4fc31bd67258a54b036c5e6f790853348d6145c3960067a2d2447b22a4e830dfa75dab23425fa3d2482574c560aca055e21fc2852340e94bfc2405d6c803_0
2025-06-24 16:35:43,732 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 50bf4fc31bd67258a54b036c5e6f790853348d6145c3960067a2d2447b22a4e830dfa75dab23425fa3d2482574c560aca055e21fc2852340e94bfc2405d6c803_0
2025-06-24 16:35:43,733 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) item item import 'path';\n...\n path.join(...,item,...) path.resolve(...,item,...) currentDir function ... (...,currentDir,...) {...}\n function ... (...,{...,currentDir,...},...) {...}\n", PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 50bf4fc31bd67258a54b036c5e6f790853348d6145c3960067a2d2447b22a4e830dfa75dab23425fa3d2482574c560aca055e21fc2852340e94bfc2405d6c803_0
2025-06-24 16:35:43,733 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 72775f4dc930eb991ce605f744308e55aa863ad9920039d1b0a04b84b0f6f8095835b7e4ba2fa8c072a61e69c6f4382baf973370d2e5e98bdcecc0aaf3172910_0
2025-06-24 16:35:43,734 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4a079f4a13cd95a9b8039da0b80863e4c9c1cccd4c1dadfee2274aaf4e87d8823ad2b4b65d322e817b09dbbf1c9001e69c36969e5d4625926633c33affcf26ac_0
2025-06-24 16:35:43,735 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4a079f4a13cd95a9b8039da0b80863e4c9c1cccd4c1dadfee2274aaf4e87d8823ad2b4b65d322e817b09dbbf1c9001e69c36969e5d4625926633c33affcf26ac_0
2025-06-24 16:35:43,736 - semgrep.rule_match - DEBUG - match_key = ('currentDir function ... (..., currentDir,...) {...} fullPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(fullPath,...) fs. ... .accessSync(fullPath, ...) fs. ... .appendFile(fullPath,...) fs. ... .appendFileSync(fullPath, ...) fs. ... .chmod(fullPath,...) fs. ... .chmodSync(fullPath, ...) fs. ... .chown(fullPath,...) fs. ... .chownSync(fullPath, ...) fs. ... .close(fullPath,...) fs. ... .closeSync(fullPath, ...) fs. ... .copyFile(fullPath,...) fs. ... .copyFile($SMTH, fullPath,...) fs. ... .copyFileSync(fullPath, ...) fs. ... .copyFileSync($SMTH, fullPath, ...) fs. ... .cp(fullPath, ...) fs. ... .cp($SMTH, fullPath, ...) fs. ... .cpSync(fullPath, ...) fs. ... .cpSync($SMTH, fullPath, ...) fs. ... .createReadStream(fullPath,...) fs. ... .createWriteStream(fullPath,...) fs. ... .exists(fullPath, ...) fs. ... .existsSync(fullPath, ...) fs. ... .fchmod(fullPath, ...) fs. ... .fchmodSync(fullPath, ...) fs. ... .fchown(fullPath, ...) fs. ... .fchownSync(fullPath, ...) fs. ... .fdatasync(fullPath, ...) fs. ... .fdatasyncSync(fullPath, ...) fs. ... .fstat(fullPath, ...) fs. ... .fstatSync(fullPath, ...) fs. ... .fsync(fullPath, ...) fs. ... .fsyncSync(fullPath, ...) fs. ... .ftruncate(fullPath, ...) fs. ... .ftruncateSync(fullPath, ...) fs. ... .futimes(fullPath, ...) fs. ... .futimesSync(fullPath, ...) fs. ... .lchmod(fullPath, ...) fs. ... .lchmodSync(fullPath, ...) fs. ... .lchown(fullPath, ...) fs. ... .lchownSync(fullPath, ...) fs. ... .link(fullPath, ...) fs. ... .link($SMTH, fullPath, ...) fs. ... .linkSync(fullPath, ...) fs. ... .linkSync($SMTH, fullPath, ...) fs. ... .lstat(fullPath, ...) fs. ... .lstatSync(fullPath, ...) fs. ... .lutimes(fullPath, ...) fs. ... .lutimesSync(fullPath, ...) fs. ... .mkdir(fullPath, ...) fs. ... .mkdirSync(fullPath, ...) fs. ... .mkdtemp(fullPath, ...) fs. ... .mkdtempSync(fullPath, ...) fs. ... .open(fullPath, ...) fs. ... .openSync(fullPath, ...) fs. ... .opendir(fullPath, ...) fs. ... .opendirSync(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .read(fullPath, ...) fs. ... .readFile(fullPath, ...) fs. ... .readFileSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readSync(fullPath, ...) fs. ... .readdir(fullPath, ...) fs. ... .readdirSync(fullPath, ...) fs. ... .readlink(fullPath, ...) fs. ... .readlinkSync(fullPath, ...) fs. ... .readv(fullPath, ...) fs. ... .readvSync(fullPath, ...) fs. ... .realpath(fullPath, ...) fs. ... .realpath.native(fullPath, ...) fs. ... .realpathSync.native(fullPath, ...) fs. ... .realpathync(fullPath, ...) fs. ... .rename(fullPath, ...) fs. ... .rename($SMTH, fullPath, ...) fs. ... .renameSync(fullPath, ...) fs. ... .renameSync($SMTH, fullPath, ...) fs. ... .rm(fullPath, ...) fs. ... .rmSync(fullPath, ...) fs. ... .rmdir(fullPath, ...) fs. ... .rmdirSync(fullPath, ...) fs. ... .stat(fullPath, ...) fs. ... .statSync(fullPath, ...) fs. ... .symlink(fullPath, ...) fs. ... .symlink($SMTH, fullPath, ...) fs. ... .symlinkSync(fullPath, ...) fs. ... .symlinkSync($SMTH, fullPath, ...) fs. ... .truncate(fullPath, ...) fs. ... .truncateSync(fullPath, ...) fs. ... .unlink(fullPath, ...) fs. ... .unlinkSync(fullPath, ...) fs. ... .unwatchFile(fullPath, ...) fs. ... .utimes(fullPath, ...) fs. ... .utimesSync(fullPath, ...) fs. ... .watch(fullPath, ...) fs. ... .watchFile(fullPath, ...) fs. ... .write(fullPath, ...) fs. ... .writeFile(fullPath, ...) fs. ... .writeFileSync(fullPath, ...) fs. ... .writeSync(fullPath, ...) fs. ... .writev(fullPath, ...) fs. ... .writevSync(fullPath, ...) fullPath $METHOD("...", ...) access(fullPath,...) accessSync(fullPath, ...) appendFile(fullPath,...) appendFileSync(fullPath, ...) chmod(fullPath,...) chmodSync(fullPath, ...) chown(fullPath,...) chownSync(fullPath, ...) close(fullPath,...) closeSync(fullPath, ...) copyFile(fullPath,...) copyFile($SMTH, fullPath,...) copyFileSync(fullPath, ...) copyFileSync($SMTH, fullPath, ...) cp(fullPath, ...) cp($SMTH, fullPath, ...) cpSync(fullPath, ...) cpSync($SMTH, fullPath, ...) createReadStream(fullPath,...) createWriteStream(fullPath,...) exists(fullPath, ...) existsSync(fullPath, ...) fchmod(fullPath, ...) fchmodSync(fullPath, ...) fchown(fullPath, ...) fchownSync(fullPath, ...) fdatasync(fullPath, ...) fdatasyncSync(fullPath, ...) fstat(fullPath, ...) fstatSync(fullPath, ...) fsync(fullPath, ...) fsyncSync(fullPath, ...) ftruncate(fullPath, ...) ftruncateSync(fullPath, ...) futimes(fullPath, ...) futimesSync(fullPath, ...) lchmod(fullPath, ...) lchmodSync(fullPath, ...) lchown(fullPath, ...) lchownSync(fullPath, ...) link(fullPath, ...) link($SMTH, fullPath, ...) linkSync(fullPath, ...) linkSync($SMTH, fullPath, ...) lstat(fullPath, ...) lstatSync(fullPath, ...) lutimes(fullPath, ...) lutimesSync(fullPath, ...) mkdir(fullPath, ...) mkdirSync(fullPath, ...) mkdtemp(fullPath, ...) mkdtempSync(fullPath, ...) open(fullPath, ...) openSync(fullPath, ...) opendir(fullPath, ...) opendirSync(fullPath, ...) read(fullPath, ...) read(fullPath, ...) readFile(fullPath, ...) readFileSync(fullPath, ...) readSync(fullPath, ...) readSync(fullPath, ...) readdir(fullPath, ...) readdirSync(fullPath, ...) readlink(fullPath, ...) readlinkSync(fullPath, ...) readv(fullPath, ...) readvSync(fullPath, ...) realpath(fullPath, ...) realpath.native(fullPath, ...) realpathSync.native(fullPath, ...) realpathync(fullPath, ...) rename(fullPath, ...) rename($SMTH, fullPath, ...) renameSync(fullPath, ...) renameSync($SMTH, fullPath, ...) rm(fullPath, ...) rmSync(fullPath, ...) rmdir(fullPath, ...) rmdirSync(fullPath, ...) stat(fullPath, ...) statSync(fullPath, ...) symlink(fullPath, ...) symlink($SMTH, fullPath, ...) symlinkSync(fullPath, ...) symlinkSync($SMTH, fullPath, ...) truncate(fullPath, ...) truncateSync(fullPath, ...) unlink(fullPath, ...) unlinkSync(fullPath, ...) unwatchFile(fullPath, ...) utimes(fullPath, ...) utimesSync(fullPath, ...) watch(fullPath, ...) watchFile(fullPath, ...) write(fullPath, ...) writeFile(fullPath, ...) writeFileSync(fullPath, ...) writeSync(fullPath, ...) writev(fullPath, ...) writevSync(fullPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-analyzer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 4a079f4a13cd95a9b8039da0b80863e4c9c1cccd4c1dadfee2274aaf4e87d8823ad2b4b65d322e817b09dbbf1c9001e69c36969e5d4625926633c33affcf26ac_0
2025-06-24 16:35:43,737 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cbc433ac51a6758492b62879f4661bf76b259e9a470331b31ca5c0d0ea8d4d0d9a91c39928866a5fd131d6d887c80a38ab7fd936999841359da81f03a840ed25_0
2025-06-24 16:35:43,737 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} alignedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(alignedApkPath,...) fs. ... .accessSync(alignedApkPath, ...) fs. ... .appendFile(alignedApkPath,...) fs. ... .appendFileSync(alignedApkPath, ...) fs. ... .chmod(alignedApkPath,...) fs. ... .chmodSync(alignedApkPath, ...) fs. ... .chown(alignedApkPath,...) fs. ... .chownSync(alignedApkPath, ...) fs. ... .close(alignedApkPath,...) fs. ... .closeSync(alignedApkPath, ...) fs. ... .copyFile(alignedApkPath,...) fs. ... .copyFile($SMTH, alignedApkPath,...) fs. ... .copyFileSync(alignedApkPath, ...) fs. ... .copyFileSync($SMTH, alignedApkPath, ...) fs. ... .cp(alignedApkPath, ...) fs. ... .cp($SMTH, alignedApkPath, ...) fs. ... .cpSync(alignedApkPath, ...) fs. ... .cpSync($SMTH, alignedApkPath, ...) fs. ... .createReadStream(alignedApkPath,...) fs. ... .createWriteStream(alignedApkPath,...) fs. ... .exists(alignedApkPath, ...) fs. ... .existsSync(alignedApkPath, ...) fs. ... .fchmod(alignedApkPath, ...) fs. ... .fchmodSync(alignedApkPath, ...) fs. ... .fchown(alignedApkPath, ...) fs. ... .fchownSync(alignedApkPath, ...) fs. ... .fdatasync(alignedApkPath, ...) fs. ... .fdatasyncSync(alignedApkPath, ...) fs. ... .fstat(alignedApkPath, ...) fs. ... .fstatSync(alignedApkPath, ...) fs. ... .fsync(alignedApkPath, ...) fs. ... .fsyncSync(alignedApkPath, ...) fs. ... .ftruncate(alignedApkPath, ...) fs. ... .ftruncateSync(alignedApkPath, ...) fs. ... .futimes(alignedApkPath, ...) fs. ... .futimesSync(alignedApkPath, ...) fs. ... .lchmod(alignedApkPath, ...) fs. ... .lchmodSync(alignedApkPath, ...) fs. ... .lchown(alignedApkPath, ...) fs. ... .lchownSync(alignedApkPath, ...) fs. ... .link(alignedApkPath, ...) fs. ... .link($SMTH, alignedApkPath, ...) fs. ... .linkSync(alignedApkPath, ...) fs. ... .linkSync($SMTH, alignedApkPath, ...) fs. ... .lstat(alignedApkPath, ...) fs. ... .lstatSync(alignedApkPath, ...) fs. ... .lutimes(alignedApkPath, ...) fs. ... .lutimesSync(alignedApkPath, ...) fs. ... .mkdir(alignedApkPath, ...) fs. ... .mkdirSync(alignedApkPath, ...) fs. ... .mkdtemp(alignedApkPath, ...) fs. ... .mkdtempSync(alignedApkPath, ...) fs. ... .open(alignedApkPath, ...) fs. ... .openSync(alignedApkPath, ...) fs. ... .opendir(alignedApkPath, ...) fs. ... .opendirSync(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .readFile(alignedApkPath, ...) fs. ... .readFileSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readdir(alignedApkPath, ...) fs. ... .readdirSync(alignedApkPath, ...) fs. ... .readlink(alignedApkPath, ...) fs. ... .readlinkSync(alignedApkPath, ...) fs. ... .readv(alignedApkPath, ...) fs. ... .readvSync(alignedApkPath, ...) fs. ... .realpath(alignedApkPath, ...) fs. ... .realpath.native(alignedApkPath, ...) fs. ... .realpathSync.native(alignedApkPath, ...) fs. ... .realpathync(alignedApkPath, ...) fs. ... .rename(alignedApkPath, ...) fs. ... .rename($SMTH, alignedApkPath, ...) fs. ... .renameSync(alignedApkPath, ...) fs. ... .renameSync($SMTH, alignedApkPath, ...) fs. ... .rm(alignedApkPath, ...) fs. ... .rmSync(alignedApkPath, ...) fs. ... .rmdir(alignedApkPath, ...) fs. ... .rmdirSync(alignedApkPath, ...) fs. ... .stat(alignedApkPath, ...) fs. ... .statSync(alignedApkPath, ...) fs. ... .symlink(alignedApkPath, ...) fs. ... .symlink($SMTH, alignedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, ...) fs. ... .symlinkSync($SMTH, alignedApkPath, ...) fs. ... .truncate(alignedApkPath, ...) fs. ... .truncateSync(alignedApkPath, ...) fs. ... .unlink(alignedApkPath, ...) fs. ... .unlinkSync(alignedApkPath, ...) fs. ... .unwatchFile(alignedApkPath, ...) fs. ... .utimes(alignedApkPath, ...) fs. ... .utimesSync(alignedApkPath, ...) fs. ... .watch(alignedApkPath, ...) fs. ... .watchFile(alignedApkPath, ...) fs. ... .write(alignedApkPath, ...) fs. ... .writeFile(alignedApkPath, ...) fs. ... .writeFileSync(alignedApkPath, ...) fs. ... .writeSync(alignedApkPath, ...) fs. ... .writev(alignedApkPath, ...) fs. ... .writevSync(alignedApkPath, ...) alignedApkPath $METHOD("...", ...) access(alignedApkPath,...) accessSync(alignedApkPath, ...) appendFile(alignedApkPath,...) appendFileSync(alignedApkPath, ...) chmod(alignedApkPath,...) chmodSync(alignedApkPath, ...) chown(alignedApkPath,...) chownSync(alignedApkPath, ...) close(alignedApkPath,...) closeSync(alignedApkPath, ...) copyFile(alignedApkPath,...) copyFile($SMTH, alignedApkPath,...) copyFileSync(alignedApkPath, ...) copyFileSync($SMTH, alignedApkPath, ...) cp(alignedApkPath, ...) cp($SMTH, alignedApkPath, ...) cpSync(alignedApkPath, ...) cpSync($SMTH, alignedApkPath, ...) createReadStream(alignedApkPath,...) createWriteStream(alignedApkPath,...) exists(alignedApkPath, ...) existsSync(alignedApkPath, ...) fchmod(alignedApkPath, ...) fchmodSync(alignedApkPath, ...) fchown(alignedApkPath, ...) fchownSync(alignedApkPath, ...) fdatasync(alignedApkPath, ...) fdatasyncSync(alignedApkPath, ...) fstat(alignedApkPath, ...) fstatSync(alignedApkPath, ...) fsync(alignedApkPath, ...) fsyncSync(alignedApkPath, ...) ftruncate(alignedApkPath, ...) ftruncateSync(alignedApkPath, ...) futimes(alignedApkPath, ...) futimesSync(alignedApkPath, ...) lchmod(alignedApkPath, ...) lchmodSync(alignedApkPath, ...) lchown(alignedApkPath, ...) lchownSync(alignedApkPath, ...) link(alignedApkPath, ...) link($SMTH, alignedApkPath, ...) linkSync(alignedApkPath, ...) linkSync($SMTH, alignedApkPath, ...) lstat(alignedApkPath, ...) lstatSync(alignedApkPath, ...) lutimes(alignedApkPath, ...) lutimesSync(alignedApkPath, ...) mkdir(alignedApkPath, ...) mkdirSync(alignedApkPath, ...) mkdtemp(alignedApkPath, ...) mkdtempSync(alignedApkPath, ...) open(alignedApkPath, ...) openSync(alignedApkPath, ...) opendir(alignedApkPath, ...) opendirSync(alignedApkPath, ...) read(alignedApkPath, ...) read(alignedApkPath, ...) readFile(alignedApkPath, ...) readFileSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readdir(alignedApkPath, ...) readdirSync(alignedApkPath, ...) readlink(alignedApkPath, ...) readlinkSync(alignedApkPath, ...) readv(alignedApkPath, ...) readvSync(alignedApkPath, ...) realpath(alignedApkPath, ...) realpath.native(alignedApkPath, ...) realpathSync.native(alignedApkPath, ...) realpathync(alignedApkPath, ...) rename(alignedApkPath, ...) rename($SMTH, alignedApkPath, ...) renameSync(alignedApkPath, ...) renameSync($SMTH, alignedApkPath, ...) rm(alignedApkPath, ...) rmSync(alignedApkPath, ...) rmdir(alignedApkPath, ...) rmdirSync(alignedApkPath, ...) stat(alignedApkPath, ...) statSync(alignedApkPath, ...) symlink(alignedApkPath, ...) symlink($SMTH, alignedApkPath, ...) symlinkSync(alignedApkPath, ...) symlinkSync($SMTH, alignedApkPath, ...) truncate(alignedApkPath, ...) truncateSync(alignedApkPath, ...) unlink(alignedApkPath, ...) unlinkSync(alignedApkPath, ...) unwatchFile(alignedApkPath, ...) utimes(alignedApkPath, ...) utimesSync(alignedApkPath, ...) watch(alignedApkPath, ...) watchFile(alignedApkPath, ...) write(alignedApkPath, ...) writeFile(alignedApkPath, ...) writeFileSync(alignedApkPath, ...) writeSync(alignedApkPath, ...) writev(alignedApkPath, ...) writevSync(alignedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6399b6cb10c48c7c7c4b8992544c608c7c41b5ca664ccdf16d2fa7eae6904930eabc281c6c427bd71ccacf4737c5dd133ab543e73d01d1395ee753036eaa253c_0
2025-06-24 16:35:43,738 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} alignedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(alignedApkPath,...) fs. ... .accessSync(alignedApkPath, ...) fs. ... .appendFile(alignedApkPath,...) fs. ... .appendFileSync(alignedApkPath, ...) fs. ... .chmod(alignedApkPath,...) fs. ... .chmodSync(alignedApkPath, ...) fs. ... .chown(alignedApkPath,...) fs. ... .chownSync(alignedApkPath, ...) fs. ... .close(alignedApkPath,...) fs. ... .closeSync(alignedApkPath, ...) fs. ... .copyFile(alignedApkPath,...) fs. ... .copyFile($SMTH, alignedApkPath,...) fs. ... .copyFileSync(alignedApkPath, ...) fs. ... .copyFileSync($SMTH, alignedApkPath, ...) fs. ... .cp(alignedApkPath, ...) fs. ... .cp($SMTH, alignedApkPath, ...) fs. ... .cpSync(alignedApkPath, ...) fs. ... .cpSync($SMTH, alignedApkPath, ...) fs. ... .createReadStream(alignedApkPath,...) fs. ... .createWriteStream(alignedApkPath,...) fs. ... .exists(alignedApkPath, ...) fs. ... .existsSync(alignedApkPath, ...) fs. ... .fchmod(alignedApkPath, ...) fs. ... .fchmodSync(alignedApkPath, ...) fs. ... .fchown(alignedApkPath, ...) fs. ... .fchownSync(alignedApkPath, ...) fs. ... .fdatasync(alignedApkPath, ...) fs. ... .fdatasyncSync(alignedApkPath, ...) fs. ... .fstat(alignedApkPath, ...) fs. ... .fstatSync(alignedApkPath, ...) fs. ... .fsync(alignedApkPath, ...) fs. ... .fsyncSync(alignedApkPath, ...) fs. ... .ftruncate(alignedApkPath, ...) fs. ... .ftruncateSync(alignedApkPath, ...) fs. ... .futimes(alignedApkPath, ...) fs. ... .futimesSync(alignedApkPath, ...) fs. ... .lchmod(alignedApkPath, ...) fs. ... .lchmodSync(alignedApkPath, ...) fs. ... .lchown(alignedApkPath, ...) fs. ... .lchownSync(alignedApkPath, ...) fs. ... .link(alignedApkPath, ...) fs. ... .link($SMTH, alignedApkPath, ...) fs. ... .linkSync(alignedApkPath, ...) fs. ... .linkSync($SMTH, alignedApkPath, ...) fs. ... .lstat(alignedApkPath, ...) fs. ... .lstatSync(alignedApkPath, ...) fs. ... .lutimes(alignedApkPath, ...) fs. ... .lutimesSync(alignedApkPath, ...) fs. ... .mkdir(alignedApkPath, ...) fs. ... .mkdirSync(alignedApkPath, ...) fs. ... .mkdtemp(alignedApkPath, ...) fs. ... .mkdtempSync(alignedApkPath, ...) fs. ... .open(alignedApkPath, ...) fs. ... .openSync(alignedApkPath, ...) fs. ... .opendir(alignedApkPath, ...) fs. ... .opendirSync(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .readFile(alignedApkPath, ...) fs. ... .readFileSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readdir(alignedApkPath, ...) fs. ... .readdirSync(alignedApkPath, ...) fs. ... .readlink(alignedApkPath, ...) fs. ... .readlinkSync(alignedApkPath, ...) fs. ... .readv(alignedApkPath, ...) fs. ... .readvSync(alignedApkPath, ...) fs. ... .realpath(alignedApkPath, ...) fs. ... .realpath.native(alignedApkPath, ...) fs. ... .realpathSync.native(alignedApkPath, ...) fs. ... .realpathync(alignedApkPath, ...) fs. ... .rename(alignedApkPath, ...) fs. ... .rename($SMTH, alignedApkPath, ...) fs. ... .renameSync(alignedApkPath, ...) fs. ... .renameSync($SMTH, alignedApkPath, ...) fs. ... .rm(alignedApkPath, ...) fs. ... .rmSync(alignedApkPath, ...) fs. ... .rmdir(alignedApkPath, ...) fs. ... .rmdirSync(alignedApkPath, ...) fs. ... .stat(alignedApkPath, ...) fs. ... .statSync(alignedApkPath, ...) fs. ... .symlink(alignedApkPath, ...) fs. ... .symlink($SMTH, alignedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, ...) fs. ... .symlinkSync($SMTH, alignedApkPath, ...) fs. ... .truncate(alignedApkPath, ...) fs. ... .truncateSync(alignedApkPath, ...) fs. ... .unlink(alignedApkPath, ...) fs. ... .unlinkSync(alignedApkPath, ...) fs. ... .unwatchFile(alignedApkPath, ...) fs. ... .utimes(alignedApkPath, ...) fs. ... .utimesSync(alignedApkPath, ...) fs. ... .watch(alignedApkPath, ...) fs. ... .watchFile(alignedApkPath, ...) fs. ... .write(alignedApkPath, ...) fs. ... .writeFile(alignedApkPath, ...) fs. ... .writeFileSync(alignedApkPath, ...) fs. ... .writeSync(alignedApkPath, ...) fs. ... .writev(alignedApkPath, ...) fs. ... .writevSync(alignedApkPath, ...) alignedApkPath $METHOD("...", ...) access(alignedApkPath,...) accessSync(alignedApkPath, ...) appendFile(alignedApkPath,...) appendFileSync(alignedApkPath, ...) chmod(alignedApkPath,...) chmodSync(alignedApkPath, ...) chown(alignedApkPath,...) chownSync(alignedApkPath, ...) close(alignedApkPath,...) closeSync(alignedApkPath, ...) copyFile(alignedApkPath,...) copyFile($SMTH, alignedApkPath,...) copyFileSync(alignedApkPath, ...) copyFileSync($SMTH, alignedApkPath, ...) cp(alignedApkPath, ...) cp($SMTH, alignedApkPath, ...) cpSync(alignedApkPath, ...) cpSync($SMTH, alignedApkPath, ...) createReadStream(alignedApkPath,...) createWriteStream(alignedApkPath,...) exists(alignedApkPath, ...) existsSync(alignedApkPath, ...) fchmod(alignedApkPath, ...) fchmodSync(alignedApkPath, ...) fchown(alignedApkPath, ...) fchownSync(alignedApkPath, ...) fdatasync(alignedApkPath, ...) fdatasyncSync(alignedApkPath, ...) fstat(alignedApkPath, ...) fstatSync(alignedApkPath, ...) fsync(alignedApkPath, ...) fsyncSync(alignedApkPath, ...) ftruncate(alignedApkPath, ...) ftruncateSync(alignedApkPath, ...) futimes(alignedApkPath, ...) futimesSync(alignedApkPath, ...) lchmod(alignedApkPath, ...) lchmodSync(alignedApkPath, ...) lchown(alignedApkPath, ...) lchownSync(alignedApkPath, ...) link(alignedApkPath, ...) link($SMTH, alignedApkPath, ...) linkSync(alignedApkPath, ...) linkSync($SMTH, alignedApkPath, ...) lstat(alignedApkPath, ...) lstatSync(alignedApkPath, ...) lutimes(alignedApkPath, ...) lutimesSync(alignedApkPath, ...) mkdir(alignedApkPath, ...) mkdirSync(alignedApkPath, ...) mkdtemp(alignedApkPath, ...) mkdtempSync(alignedApkPath, ...) open(alignedApkPath, ...) openSync(alignedApkPath, ...) opendir(alignedApkPath, ...) opendirSync(alignedApkPath, ...) read(alignedApkPath, ...) read(alignedApkPath, ...) readFile(alignedApkPath, ...) readFileSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readdir(alignedApkPath, ...) readdirSync(alignedApkPath, ...) readlink(alignedApkPath, ...) readlinkSync(alignedApkPath, ...) readv(alignedApkPath, ...) readvSync(alignedApkPath, ...) realpath(alignedApkPath, ...) realpath.native(alignedApkPath, ...) realpathSync.native(alignedApkPath, ...) realpathync(alignedApkPath, ...) rename(alignedApkPath, ...) rename($SMTH, alignedApkPath, ...) renameSync(alignedApkPath, ...) renameSync($SMTH, alignedApkPath, ...) rm(alignedApkPath, ...) rmSync(alignedApkPath, ...) rmdir(alignedApkPath, ...) rmdirSync(alignedApkPath, ...) stat(alignedApkPath, ...) statSync(alignedApkPath, ...) symlink(alignedApkPath, ...) symlink($SMTH, alignedApkPath, ...) symlinkSync(alignedApkPath, ...) symlinkSync($SMTH, alignedApkPath, ...) truncate(alignedApkPath, ...) truncateSync(alignedApkPath, ...) unlink(alignedApkPath, ...) unlinkSync(alignedApkPath, ...) unwatchFile(alignedApkPath, ...) utimes(alignedApkPath, ...) utimesSync(alignedApkPath, ...) watch(alignedApkPath, ...) watchFile(alignedApkPath, ...) write(alignedApkPath, ...) writeFile(alignedApkPath, ...) writeFileSync(alignedApkPath, ...) writeSync(alignedApkPath, ...) writev(alignedApkPath, ...) writevSync(alignedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6399b6cb10c48c7c7c4b8992544c608c7c41b5ca664ccdf16d2fa7eae6904930eabc281c6c427bd71ccacf4737c5dd133ab543e73d01d1395ee753036eaa253c_0
2025-06-24 16:35:43,738 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} alignedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(alignedApkPath,...) fs. ... .accessSync(alignedApkPath, ...) fs. ... .appendFile(alignedApkPath,...) fs. ... .appendFileSync(alignedApkPath, ...) fs. ... .chmod(alignedApkPath,...) fs. ... .chmodSync(alignedApkPath, ...) fs. ... .chown(alignedApkPath,...) fs. ... .chownSync(alignedApkPath, ...) fs. ... .close(alignedApkPath,...) fs. ... .closeSync(alignedApkPath, ...) fs. ... .copyFile(alignedApkPath,...) fs. ... .copyFile($SMTH, alignedApkPath,...) fs. ... .copyFileSync(alignedApkPath, ...) fs. ... .copyFileSync($SMTH, alignedApkPath, ...) fs. ... .cp(alignedApkPath, ...) fs. ... .cp($SMTH, alignedApkPath, ...) fs. ... .cpSync(alignedApkPath, ...) fs. ... .cpSync($SMTH, alignedApkPath, ...) fs. ... .createReadStream(alignedApkPath,...) fs. ... .createWriteStream(alignedApkPath,...) fs. ... .exists(alignedApkPath, ...) fs. ... .existsSync(alignedApkPath, ...) fs. ... .fchmod(alignedApkPath, ...) fs. ... .fchmodSync(alignedApkPath, ...) fs. ... .fchown(alignedApkPath, ...) fs. ... .fchownSync(alignedApkPath, ...) fs. ... .fdatasync(alignedApkPath, ...) fs. ... .fdatasyncSync(alignedApkPath, ...) fs. ... .fstat(alignedApkPath, ...) fs. ... .fstatSync(alignedApkPath, ...) fs. ... .fsync(alignedApkPath, ...) fs. ... .fsyncSync(alignedApkPath, ...) fs. ... .ftruncate(alignedApkPath, ...) fs. ... .ftruncateSync(alignedApkPath, ...) fs. ... .futimes(alignedApkPath, ...) fs. ... .futimesSync(alignedApkPath, ...) fs. ... .lchmod(alignedApkPath, ...) fs. ... .lchmodSync(alignedApkPath, ...) fs. ... .lchown(alignedApkPath, ...) fs. ... .lchownSync(alignedApkPath, ...) fs. ... .link(alignedApkPath, ...) fs. ... .link($SMTH, alignedApkPath, ...) fs. ... .linkSync(alignedApkPath, ...) fs. ... .linkSync($SMTH, alignedApkPath, ...) fs. ... .lstat(alignedApkPath, ...) fs. ... .lstatSync(alignedApkPath, ...) fs. ... .lutimes(alignedApkPath, ...) fs. ... .lutimesSync(alignedApkPath, ...) fs. ... .mkdir(alignedApkPath, ...) fs. ... .mkdirSync(alignedApkPath, ...) fs. ... .mkdtemp(alignedApkPath, ...) fs. ... .mkdtempSync(alignedApkPath, ...) fs. ... .open(alignedApkPath, ...) fs. ... .openSync(alignedApkPath, ...) fs. ... .opendir(alignedApkPath, ...) fs. ... .opendirSync(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .read(alignedApkPath, ...) fs. ... .readFile(alignedApkPath, ...) fs. ... .readFileSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readSync(alignedApkPath, ...) fs. ... .readdir(alignedApkPath, ...) fs. ... .readdirSync(alignedApkPath, ...) fs. ... .readlink(alignedApkPath, ...) fs. ... .readlinkSync(alignedApkPath, ...) fs. ... .readv(alignedApkPath, ...) fs. ... .readvSync(alignedApkPath, ...) fs. ... .realpath(alignedApkPath, ...) fs. ... .realpath.native(alignedApkPath, ...) fs. ... .realpathSync.native(alignedApkPath, ...) fs. ... .realpathync(alignedApkPath, ...) fs. ... .rename(alignedApkPath, ...) fs. ... .rename($SMTH, alignedApkPath, ...) fs. ... .renameSync(alignedApkPath, ...) fs. ... .renameSync($SMTH, alignedApkPath, ...) fs. ... .rm(alignedApkPath, ...) fs. ... .rmSync(alignedApkPath, ...) fs. ... .rmdir(alignedApkPath, ...) fs. ... .rmdirSync(alignedApkPath, ...) fs. ... .stat(alignedApkPath, ...) fs. ... .statSync(alignedApkPath, ...) fs. ... .symlink(alignedApkPath, ...) fs. ... .symlink($SMTH, alignedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, ...) fs. ... .symlinkSync($SMTH, alignedApkPath, ...) fs. ... .truncate(alignedApkPath, ...) fs. ... .truncateSync(alignedApkPath, ...) fs. ... .unlink(alignedApkPath, ...) fs. ... .unlinkSync(alignedApkPath, ...) fs. ... .unwatchFile(alignedApkPath, ...) fs. ... .utimes(alignedApkPath, ...) fs. ... .utimesSync(alignedApkPath, ...) fs. ... .watch(alignedApkPath, ...) fs. ... .watchFile(alignedApkPath, ...) fs. ... .write(alignedApkPath, ...) fs. ... .writeFile(alignedApkPath, ...) fs. ... .writeFileSync(alignedApkPath, ...) fs. ... .writeSync(alignedApkPath, ...) fs. ... .writev(alignedApkPath, ...) fs. ... .writevSync(alignedApkPath, ...) alignedApkPath $METHOD("...", ...) access(alignedApkPath,...) accessSync(alignedApkPath, ...) appendFile(alignedApkPath,...) appendFileSync(alignedApkPath, ...) chmod(alignedApkPath,...) chmodSync(alignedApkPath, ...) chown(alignedApkPath,...) chownSync(alignedApkPath, ...) close(alignedApkPath,...) closeSync(alignedApkPath, ...) copyFile(alignedApkPath,...) copyFile($SMTH, alignedApkPath,...) copyFileSync(alignedApkPath, ...) copyFileSync($SMTH, alignedApkPath, ...) cp(alignedApkPath, ...) cp($SMTH, alignedApkPath, ...) cpSync(alignedApkPath, ...) cpSync($SMTH, alignedApkPath, ...) createReadStream(alignedApkPath,...) createWriteStream(alignedApkPath,...) exists(alignedApkPath, ...) existsSync(alignedApkPath, ...) fchmod(alignedApkPath, ...) fchmodSync(alignedApkPath, ...) fchown(alignedApkPath, ...) fchownSync(alignedApkPath, ...) fdatasync(alignedApkPath, ...) fdatasyncSync(alignedApkPath, ...) fstat(alignedApkPath, ...) fstatSync(alignedApkPath, ...) fsync(alignedApkPath, ...) fsyncSync(alignedApkPath, ...) ftruncate(alignedApkPath, ...) ftruncateSync(alignedApkPath, ...) futimes(alignedApkPath, ...) futimesSync(alignedApkPath, ...) lchmod(alignedApkPath, ...) lchmodSync(alignedApkPath, ...) lchown(alignedApkPath, ...) lchownSync(alignedApkPath, ...) link(alignedApkPath, ...) link($SMTH, alignedApkPath, ...) linkSync(alignedApkPath, ...) linkSync($SMTH, alignedApkPath, ...) lstat(alignedApkPath, ...) lstatSync(alignedApkPath, ...) lutimes(alignedApkPath, ...) lutimesSync(alignedApkPath, ...) mkdir(alignedApkPath, ...) mkdirSync(alignedApkPath, ...) mkdtemp(alignedApkPath, ...) mkdtempSync(alignedApkPath, ...) open(alignedApkPath, ...) openSync(alignedApkPath, ...) opendir(alignedApkPath, ...) opendirSync(alignedApkPath, ...) read(alignedApkPath, ...) read(alignedApkPath, ...) readFile(alignedApkPath, ...) readFileSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readSync(alignedApkPath, ...) readdir(alignedApkPath, ...) readdirSync(alignedApkPath, ...) readlink(alignedApkPath, ...) readlinkSync(alignedApkPath, ...) readv(alignedApkPath, ...) readvSync(alignedApkPath, ...) realpath(alignedApkPath, ...) realpath.native(alignedApkPath, ...) realpathSync.native(alignedApkPath, ...) realpathync(alignedApkPath, ...) rename(alignedApkPath, ...) rename($SMTH, alignedApkPath, ...) renameSync(alignedApkPath, ...) renameSync($SMTH, alignedApkPath, ...) rm(alignedApkPath, ...) rmSync(alignedApkPath, ...) rmdir(alignedApkPath, ...) rmdirSync(alignedApkPath, ...) stat(alignedApkPath, ...) statSync(alignedApkPath, ...) symlink(alignedApkPath, ...) symlink($SMTH, alignedApkPath, ...) symlinkSync(alignedApkPath, ...) symlinkSync($SMTH, alignedApkPath, ...) truncate(alignedApkPath, ...) truncateSync(alignedApkPath, ...) unlink(alignedApkPath, ...) unlinkSync(alignedApkPath, ...) unwatchFile(alignedApkPath, ...) utimes(alignedApkPath, ...) utimesSync(alignedApkPath, ...) watch(alignedApkPath, ...) watchFile(alignedApkPath, ...) write(alignedApkPath, ...) writeFile(alignedApkPath, ...) writeFileSync(alignedApkPath, ...) writeSync(alignedApkPath, ...) writev(alignedApkPath, ...) writevSync(alignedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6399b6cb10c48c7c7c4b8992544c608c7c41b5ca664ccdf16d2fa7eae6904930eabc281c6c427bd71ccacf4737c5dd133ab543e73d01d1395ee753036eaa253c_0
2025-06-24 16:35:43,739 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cbc433ac51a6758492b62879f4661bf76b259e9a470331b31ca5c0d0ea8d4d0d9a91c39928866a5fd131d6d887c80a38ab7fd936999841359da81f03a840ed25_0
2025-06-24 16:35:43,740 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} signedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(signedApkPath,...) fs. ... .accessSync(signedApkPath, ...) fs. ... .appendFile(signedApkPath,...) fs. ... .appendFileSync(signedApkPath, ...) fs. ... .chmod(signedApkPath,...) fs. ... .chmodSync(signedApkPath, ...) fs. ... .chown(signedApkPath,...) fs. ... .chownSync(signedApkPath, ...) fs. ... .close(signedApkPath,...) fs. ... .closeSync(signedApkPath, ...) fs. ... .copyFile(signedApkPath,...) fs. ... .copyFile(alignedApkPath, signedApkPath,...) fs. ... .copyFileSync(signedApkPath, ...) fs. ... .copyFileSync(alignedApkPath, signedApkPath, ...) fs. ... .cp(signedApkPath, ...) fs. ... .cp(alignedApkPath, signedApkPath, ...) fs. ... .cpSync(signedApkPath, ...) fs. ... .cpSync(alignedApkPath, signedApkPath, ...) fs. ... .createReadStream(signedApkPath,...) fs. ... .createWriteStream(signedApkPath,...) fs. ... .exists(signedApkPath, ...) fs. ... .existsSync(signedApkPath, ...) fs. ... .fchmod(signedApkPath, ...) fs. ... .fchmodSync(signedApkPath, ...) fs. ... .fchown(signedApkPath, ...) fs. ... .fchownSync(signedApkPath, ...) fs. ... .fdatasync(signedApkPath, ...) fs. ... .fdatasyncSync(signedApkPath, ...) fs. ... .fstat(signedApkPath, ...) fs. ... .fstatSync(signedApkPath, ...) fs. ... .fsync(signedApkPath, ...) fs. ... .fsyncSync(signedApkPath, ...) fs. ... .ftruncate(signedApkPath, ...) fs. ... .ftruncateSync(signedApkPath, ...) fs. ... .futimes(signedApkPath, ...) fs. ... .futimesSync(signedApkPath, ...) fs. ... .lchmod(signedApkPath, ...) fs. ... .lchmodSync(signedApkPath, ...) fs. ... .lchown(signedApkPath, ...) fs. ... .lchownSync(signedApkPath, ...) fs. ... .link(signedApkPath, ...) fs. ... .link(alignedApkPath, signedApkPath, ...) fs. ... .linkSync(signedApkPath, ...) fs. ... .linkSync(alignedApkPath, signedApkPath, ...) fs. ... .lstat(signedApkPath, ...) fs. ... .lstatSync(signedApkPath, ...) fs. ... .lutimes(signedApkPath, ...) fs. ... .lutimesSync(signedApkPath, ...) fs. ... .mkdir(signedApkPath, ...) fs. ... .mkdirSync(signedApkPath, ...) fs. ... .mkdtemp(signedApkPath, ...) fs. ... .mkdtempSync(signedApkPath, ...) fs. ... .open(signedApkPath, ...) fs. ... .openSync(signedApkPath, ...) fs. ... .opendir(signedApkPath, ...) fs. ... .opendirSync(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .readFile(signedApkPath, ...) fs. ... .readFileSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readdir(signedApkPath, ...) fs. ... .readdirSync(signedApkPath, ...) fs. ... .readlink(signedApkPath, ...) fs. ... .readlinkSync(signedApkPath, ...) fs. ... .readv(signedApkPath, ...) fs. ... .readvSync(signedApkPath, ...) fs. ... .realpath(signedApkPath, ...) fs. ... .realpath.native(signedApkPath, ...) fs. ... .realpathSync.native(signedApkPath, ...) fs. ... .realpathync(signedApkPath, ...) fs. ... .rename(signedApkPath, ...) fs. ... .rename(alignedApkPath, signedApkPath, ...) fs. ... .renameSync(signedApkPath, ...) fs. ... .renameSync(alignedApkPath, signedApkPath, ...) fs. ... .rm(signedApkPath, ...) fs. ... .rmSync(signedApkPath, ...) fs. ... .rmdir(signedApkPath, ...) fs. ... .rmdirSync(signedApkPath, ...) fs. ... .stat(signedApkPath, ...) fs. ... .statSync(signedApkPath, ...) fs. ... .symlink(signedApkPath, ...) fs. ... .symlink(alignedApkPath, signedApkPath, ...) fs. ... .symlinkSync(signedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, signedApkPath, ...) fs. ... .truncate(signedApkPath, ...) fs. ... .truncateSync(signedApkPath, ...) fs. ... .unlink(signedApkPath, ...) fs. ... .unlinkSync(signedApkPath, ...) fs. ... .unwatchFile(signedApkPath, ...) fs. ... .utimes(signedApkPath, ...) fs. ... .utimesSync(signedApkPath, ...) fs. ... .watch(signedApkPath, ...) fs. ... .watchFile(signedApkPath, ...) fs. ... .write(signedApkPath, ...) fs. ... .writeFile(signedApkPath, ...) fs. ... .writeFileSync(signedApkPath, ...) fs. ... .writeSync(signedApkPath, ...) fs. ... .writev(signedApkPath, ...) fs. ... .writevSync(signedApkPath, ...) signedApkPath $METHOD("...", ...) access(signedApkPath,...) accessSync(signedApkPath, ...) appendFile(signedApkPath,...) appendFileSync(signedApkPath, ...) chmod(signedApkPath,...) chmodSync(signedApkPath, ...) chown(signedApkPath,...) chownSync(signedApkPath, ...) close(signedApkPath,...) closeSync(signedApkPath, ...) copyFile(signedApkPath,...) copyFile(alignedApkPath, signedApkPath,...) copyFileSync(signedApkPath, ...) copyFileSync(alignedApkPath, signedApkPath, ...) cp(signedApkPath, ...) cp(alignedApkPath, signedApkPath, ...) cpSync(signedApkPath, ...) cpSync(alignedApkPath, signedApkPath, ...) createReadStream(signedApkPath,...) createWriteStream(signedApkPath,...) exists(signedApkPath, ...) existsSync(signedApkPath, ...) fchmod(signedApkPath, ...) fchmodSync(signedApkPath, ...) fchown(signedApkPath, ...) fchownSync(signedApkPath, ...) fdatasync(signedApkPath, ...) fdatasyncSync(signedApkPath, ...) fstat(signedApkPath, ...) fstatSync(signedApkPath, ...) fsync(signedApkPath, ...) fsyncSync(signedApkPath, ...) ftruncate(signedApkPath, ...) ftruncateSync(signedApkPath, ...) futimes(signedApkPath, ...) futimesSync(signedApkPath, ...) lchmod(signedApkPath, ...) lchmodSync(signedApkPath, ...) lchown(signedApkPath, ...) lchownSync(signedApkPath, ...) link(signedApkPath, ...) link(alignedApkPath, signedApkPath, ...) linkSync(signedApkPath, ...) linkSync(alignedApkPath, signedApkPath, ...) lstat(signedApkPath, ...) lstatSync(signedApkPath, ...) lutimes(signedApkPath, ...) lutimesSync(signedApkPath, ...) mkdir(signedApkPath, ...) mkdirSync(signedApkPath, ...) mkdtemp(signedApkPath, ...) mkdtempSync(signedApkPath, ...) open(signedApkPath, ...) openSync(signedApkPath, ...) opendir(signedApkPath, ...) opendirSync(signedApkPath, ...) read(signedApkPath, ...) read(signedApkPath, ...) readFile(signedApkPath, ...) readFileSync(signedApkPath, ...) readSync(signedApkPath, ...) readSync(signedApkPath, ...) readdir(signedApkPath, ...) readdirSync(signedApkPath, ...) readlink(signedApkPath, ...) readlinkSync(signedApkPath, ...) readv(signedApkPath, ...) readvSync(signedApkPath, ...) realpath(signedApkPath, ...) realpath.native(signedApkPath, ...) realpathSync.native(signedApkPath, ...) realpathync(signedApkPath, ...) rename(signedApkPath, ...) rename(alignedApkPath, signedApkPath, ...) renameSync(signedApkPath, ...) renameSync(alignedApkPath, signedApkPath, ...) rm(signedApkPath, ...) rmSync(signedApkPath, ...) rmdir(signedApkPath, ...) rmdirSync(signedApkPath, ...) stat(signedApkPath, ...) statSync(signedApkPath, ...) symlink(signedApkPath, ...) symlink(alignedApkPath, signedApkPath, ...) symlinkSync(signedApkPath, ...) symlinkSync(alignedApkPath, signedApkPath, ...) truncate(signedApkPath, ...) truncateSync(signedApkPath, ...) unlink(signedApkPath, ...) unlinkSync(signedApkPath, ...) unwatchFile(signedApkPath, ...) utimes(signedApkPath, ...) utimesSync(signedApkPath, ...) watch(signedApkPath, ...) watchFile(signedApkPath, ...) write(signedApkPath, ...) writeFile(signedApkPath, ...) writeFileSync(signedApkPath, ...) writeSync(signedApkPath, ...) writev(signedApkPath, ...) writevSync(signedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ab4d741cfff7480f57ec674d2388f5d43046c94844380cde1079fcafa1521c24d5ed23ebec0ed4544f898919738b45bb8da60b1debb1a5edb4e476a594a57a02_0
2025-06-24 16:35:43,826 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} signedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(signedApkPath,...) fs. ... .accessSync(signedApkPath, ...) fs. ... .appendFile(signedApkPath,...) fs. ... .appendFileSync(signedApkPath, ...) fs. ... .chmod(signedApkPath,...) fs. ... .chmodSync(signedApkPath, ...) fs. ... .chown(signedApkPath,...) fs. ... .chownSync(signedApkPath, ...) fs. ... .close(signedApkPath,...) fs. ... .closeSync(signedApkPath, ...) fs. ... .copyFile(signedApkPath,...) fs. ... .copyFile(alignedApkPath, signedApkPath,...) fs. ... .copyFileSync(signedApkPath, ...) fs. ... .copyFileSync(alignedApkPath, signedApkPath, ...) fs. ... .cp(signedApkPath, ...) fs. ... .cp(alignedApkPath, signedApkPath, ...) fs. ... .cpSync(signedApkPath, ...) fs. ... .cpSync(alignedApkPath, signedApkPath, ...) fs. ... .createReadStream(signedApkPath,...) fs. ... .createWriteStream(signedApkPath,...) fs. ... .exists(signedApkPath, ...) fs. ... .existsSync(signedApkPath, ...) fs. ... .fchmod(signedApkPath, ...) fs. ... .fchmodSync(signedApkPath, ...) fs. ... .fchown(signedApkPath, ...) fs. ... .fchownSync(signedApkPath, ...) fs. ... .fdatasync(signedApkPath, ...) fs. ... .fdatasyncSync(signedApkPath, ...) fs. ... .fstat(signedApkPath, ...) fs. ... .fstatSync(signedApkPath, ...) fs. ... .fsync(signedApkPath, ...) fs. ... .fsyncSync(signedApkPath, ...) fs. ... .ftruncate(signedApkPath, ...) fs. ... .ftruncateSync(signedApkPath, ...) fs. ... .futimes(signedApkPath, ...) fs. ... .futimesSync(signedApkPath, ...) fs. ... .lchmod(signedApkPath, ...) fs. ... .lchmodSync(signedApkPath, ...) fs. ... .lchown(signedApkPath, ...) fs. ... .lchownSync(signedApkPath, ...) fs. ... .link(signedApkPath, ...) fs. ... .link(alignedApkPath, signedApkPath, ...) fs. ... .linkSync(signedApkPath, ...) fs. ... .linkSync(alignedApkPath, signedApkPath, ...) fs. ... .lstat(signedApkPath, ...) fs. ... .lstatSync(signedApkPath, ...) fs. ... .lutimes(signedApkPath, ...) fs. ... .lutimesSync(signedApkPath, ...) fs. ... .mkdir(signedApkPath, ...) fs. ... .mkdirSync(signedApkPath, ...) fs. ... .mkdtemp(signedApkPath, ...) fs. ... .mkdtempSync(signedApkPath, ...) fs. ... .open(signedApkPath, ...) fs. ... .openSync(signedApkPath, ...) fs. ... .opendir(signedApkPath, ...) fs. ... .opendirSync(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .readFile(signedApkPath, ...) fs. ... .readFileSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readdir(signedApkPath, ...) fs. ... .readdirSync(signedApkPath, ...) fs. ... .readlink(signedApkPath, ...) fs. ... .readlinkSync(signedApkPath, ...) fs. ... .readv(signedApkPath, ...) fs. ... .readvSync(signedApkPath, ...) fs. ... .realpath(signedApkPath, ...) fs. ... .realpath.native(signedApkPath, ...) fs. ... .realpathSync.native(signedApkPath, ...) fs. ... .realpathync(signedApkPath, ...) fs. ... .rename(signedApkPath, ...) fs. ... .rename(alignedApkPath, signedApkPath, ...) fs. ... .renameSync(signedApkPath, ...) fs. ... .renameSync(alignedApkPath, signedApkPath, ...) fs. ... .rm(signedApkPath, ...) fs. ... .rmSync(signedApkPath, ...) fs. ... .rmdir(signedApkPath, ...) fs. ... .rmdirSync(signedApkPath, ...) fs. ... .stat(signedApkPath, ...) fs. ... .statSync(signedApkPath, ...) fs. ... .symlink(signedApkPath, ...) fs. ... .symlink(alignedApkPath, signedApkPath, ...) fs. ... .symlinkSync(signedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, signedApkPath, ...) fs. ... .truncate(signedApkPath, ...) fs. ... .truncateSync(signedApkPath, ...) fs. ... .unlink(signedApkPath, ...) fs. ... .unlinkSync(signedApkPath, ...) fs. ... .unwatchFile(signedApkPath, ...) fs. ... .utimes(signedApkPath, ...) fs. ... .utimesSync(signedApkPath, ...) fs. ... .watch(signedApkPath, ...) fs. ... .watchFile(signedApkPath, ...) fs. ... .write(signedApkPath, ...) fs. ... .writeFile(signedApkPath, ...) fs. ... .writeFileSync(signedApkPath, ...) fs. ... .writeSync(signedApkPath, ...) fs. ... .writev(signedApkPath, ...) fs. ... .writevSync(signedApkPath, ...) signedApkPath $METHOD("...", ...) access(signedApkPath,...) accessSync(signedApkPath, ...) appendFile(signedApkPath,...) appendFileSync(signedApkPath, ...) chmod(signedApkPath,...) chmodSync(signedApkPath, ...) chown(signedApkPath,...) chownSync(signedApkPath, ...) close(signedApkPath,...) closeSync(signedApkPath, ...) copyFile(signedApkPath,...) copyFile(alignedApkPath, signedApkPath,...) copyFileSync(signedApkPath, ...) copyFileSync(alignedApkPath, signedApkPath, ...) cp(signedApkPath, ...) cp(alignedApkPath, signedApkPath, ...) cpSync(signedApkPath, ...) cpSync(alignedApkPath, signedApkPath, ...) createReadStream(signedApkPath,...) createWriteStream(signedApkPath,...) exists(signedApkPath, ...) existsSync(signedApkPath, ...) fchmod(signedApkPath, ...) fchmodSync(signedApkPath, ...) fchown(signedApkPath, ...) fchownSync(signedApkPath, ...) fdatasync(signedApkPath, ...) fdatasyncSync(signedApkPath, ...) fstat(signedApkPath, ...) fstatSync(signedApkPath, ...) fsync(signedApkPath, ...) fsyncSync(signedApkPath, ...) ftruncate(signedApkPath, ...) ftruncateSync(signedApkPath, ...) futimes(signedApkPath, ...) futimesSync(signedApkPath, ...) lchmod(signedApkPath, ...) lchmodSync(signedApkPath, ...) lchown(signedApkPath, ...) lchownSync(signedApkPath, ...) link(signedApkPath, ...) link(alignedApkPath, signedApkPath, ...) linkSync(signedApkPath, ...) linkSync(alignedApkPath, signedApkPath, ...) lstat(signedApkPath, ...) lstatSync(signedApkPath, ...) lutimes(signedApkPath, ...) lutimesSync(signedApkPath, ...) mkdir(signedApkPath, ...) mkdirSync(signedApkPath, ...) mkdtemp(signedApkPath, ...) mkdtempSync(signedApkPath, ...) open(signedApkPath, ...) openSync(signedApkPath, ...) opendir(signedApkPath, ...) opendirSync(signedApkPath, ...) read(signedApkPath, ...) read(signedApkPath, ...) readFile(signedApkPath, ...) readFileSync(signedApkPath, ...) readSync(signedApkPath, ...) readSync(signedApkPath, ...) readdir(signedApkPath, ...) readdirSync(signedApkPath, ...) readlink(signedApkPath, ...) readlinkSync(signedApkPath, ...) readv(signedApkPath, ...) readvSync(signedApkPath, ...) realpath(signedApkPath, ...) realpath.native(signedApkPath, ...) realpathSync.native(signedApkPath, ...) realpathync(signedApkPath, ...) rename(signedApkPath, ...) rename(alignedApkPath, signedApkPath, ...) renameSync(signedApkPath, ...) renameSync(alignedApkPath, signedApkPath, ...) rm(signedApkPath, ...) rmSync(signedApkPath, ...) rmdir(signedApkPath, ...) rmdirSync(signedApkPath, ...) stat(signedApkPath, ...) statSync(signedApkPath, ...) symlink(signedApkPath, ...) symlink(alignedApkPath, signedApkPath, ...) symlinkSync(signedApkPath, ...) symlinkSync(alignedApkPath, signedApkPath, ...) truncate(signedApkPath, ...) truncateSync(signedApkPath, ...) unlink(signedApkPath, ...) unlinkSync(signedApkPath, ...) unwatchFile(signedApkPath, ...) utimes(signedApkPath, ...) utimesSync(signedApkPath, ...) watch(signedApkPath, ...) watchFile(signedApkPath, ...) write(signedApkPath, ...) writeFile(signedApkPath, ...) writeFileSync(signedApkPath, ...) writeSync(signedApkPath, ...) writev(signedApkPath, ...) writevSync(signedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ab4d741cfff7480f57ec674d2388f5d43046c94844380cde1079fcafa1521c24d5ed23ebec0ed4544f898919738b45bb8da60b1debb1a5edb4e476a594a57a02_0
2025-06-24 16:35:43,827 - semgrep.rule_match - DEBUG - match_key = ('unsignedApkPath function ... (..., unsignedApkPath,...) {...} signedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(signedApkPath,...) fs. ... .accessSync(signedApkPath, ...) fs. ... .appendFile(signedApkPath,...) fs. ... .appendFileSync(signedApkPath, ...) fs. ... .chmod(signedApkPath,...) fs. ... .chmodSync(signedApkPath, ...) fs. ... .chown(signedApkPath,...) fs. ... .chownSync(signedApkPath, ...) fs. ... .close(signedApkPath,...) fs. ... .closeSync(signedApkPath, ...) fs. ... .copyFile(signedApkPath,...) fs. ... .copyFile(alignedApkPath, signedApkPath,...) fs. ... .copyFileSync(signedApkPath, ...) fs. ... .copyFileSync(alignedApkPath, signedApkPath, ...) fs. ... .cp(signedApkPath, ...) fs. ... .cp(alignedApkPath, signedApkPath, ...) fs. ... .cpSync(signedApkPath, ...) fs. ... .cpSync(alignedApkPath, signedApkPath, ...) fs. ... .createReadStream(signedApkPath,...) fs. ... .createWriteStream(signedApkPath,...) fs. ... .exists(signedApkPath, ...) fs. ... .existsSync(signedApkPath, ...) fs. ... .fchmod(signedApkPath, ...) fs. ... .fchmodSync(signedApkPath, ...) fs. ... .fchown(signedApkPath, ...) fs. ... .fchownSync(signedApkPath, ...) fs. ... .fdatasync(signedApkPath, ...) fs. ... .fdatasyncSync(signedApkPath, ...) fs. ... .fstat(signedApkPath, ...) fs. ... .fstatSync(signedApkPath, ...) fs. ... .fsync(signedApkPath, ...) fs. ... .fsyncSync(signedApkPath, ...) fs. ... .ftruncate(signedApkPath, ...) fs. ... .ftruncateSync(signedApkPath, ...) fs. ... .futimes(signedApkPath, ...) fs. ... .futimesSync(signedApkPath, ...) fs. ... .lchmod(signedApkPath, ...) fs. ... .lchmodSync(signedApkPath, ...) fs. ... .lchown(signedApkPath, ...) fs. ... .lchownSync(signedApkPath, ...) fs. ... .link(signedApkPath, ...) fs. ... .link(alignedApkPath, signedApkPath, ...) fs. ... .linkSync(signedApkPath, ...) fs. ... .linkSync(alignedApkPath, signedApkPath, ...) fs. ... .lstat(signedApkPath, ...) fs. ... .lstatSync(signedApkPath, ...) fs. ... .lutimes(signedApkPath, ...) fs. ... .lutimesSync(signedApkPath, ...) fs. ... .mkdir(signedApkPath, ...) fs. ... .mkdirSync(signedApkPath, ...) fs. ... .mkdtemp(signedApkPath, ...) fs. ... .mkdtempSync(signedApkPath, ...) fs. ... .open(signedApkPath, ...) fs. ... .openSync(signedApkPath, ...) fs. ... .opendir(signedApkPath, ...) fs. ... .opendirSync(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .read(signedApkPath, ...) fs. ... .readFile(signedApkPath, ...) fs. ... .readFileSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readSync(signedApkPath, ...) fs. ... .readdir(signedApkPath, ...) fs. ... .readdirSync(signedApkPath, ...) fs. ... .readlink(signedApkPath, ...) fs. ... .readlinkSync(signedApkPath, ...) fs. ... .readv(signedApkPath, ...) fs. ... .readvSync(signedApkPath, ...) fs. ... .realpath(signedApkPath, ...) fs. ... .realpath.native(signedApkPath, ...) fs. ... .realpathSync.native(signedApkPath, ...) fs. ... .realpathync(signedApkPath, ...) fs. ... .rename(signedApkPath, ...) fs. ... .rename(alignedApkPath, signedApkPath, ...) fs. ... .renameSync(signedApkPath, ...) fs. ... .renameSync(alignedApkPath, signedApkPath, ...) fs. ... .rm(signedApkPath, ...) fs. ... .rmSync(signedApkPath, ...) fs. ... .rmdir(signedApkPath, ...) fs. ... .rmdirSync(signedApkPath, ...) fs. ... .stat(signedApkPath, ...) fs. ... .statSync(signedApkPath, ...) fs. ... .symlink(signedApkPath, ...) fs. ... .symlink(alignedApkPath, signedApkPath, ...) fs. ... .symlinkSync(signedApkPath, ...) fs. ... .symlinkSync(alignedApkPath, signedApkPath, ...) fs. ... .truncate(signedApkPath, ...) fs. ... .truncateSync(signedApkPath, ...) fs. ... .unlink(signedApkPath, ...) fs. ... .unlinkSync(signedApkPath, ...) fs. ... .unwatchFile(signedApkPath, ...) fs. ... .utimes(signedApkPath, ...) fs. ... .utimesSync(signedApkPath, ...) fs. ... .watch(signedApkPath, ...) fs. ... .watchFile(signedApkPath, ...) fs. ... .write(signedApkPath, ...) fs. ... .writeFile(signedApkPath, ...) fs. ... .writeFileSync(signedApkPath, ...) fs. ... .writeSync(signedApkPath, ...) fs. ... .writev(signedApkPath, ...) fs. ... .writevSync(signedApkPath, ...) signedApkPath $METHOD("...", ...) access(signedApkPath,...) accessSync(signedApkPath, ...) appendFile(signedApkPath,...) appendFileSync(signedApkPath, ...) chmod(signedApkPath,...) chmodSync(signedApkPath, ...) chown(signedApkPath,...) chownSync(signedApkPath, ...) close(signedApkPath,...) closeSync(signedApkPath, ...) copyFile(signedApkPath,...) copyFile(alignedApkPath, signedApkPath,...) copyFileSync(signedApkPath, ...) copyFileSync(alignedApkPath, signedApkPath, ...) cp(signedApkPath, ...) cp(alignedApkPath, signedApkPath, ...) cpSync(signedApkPath, ...) cpSync(alignedApkPath, signedApkPath, ...) createReadStream(signedApkPath,...) createWriteStream(signedApkPath,...) exists(signedApkPath, ...) existsSync(signedApkPath, ...) fchmod(signedApkPath, ...) fchmodSync(signedApkPath, ...) fchown(signedApkPath, ...) fchownSync(signedApkPath, ...) fdatasync(signedApkPath, ...) fdatasyncSync(signedApkPath, ...) fstat(signedApkPath, ...) fstatSync(signedApkPath, ...) fsync(signedApkPath, ...) fsyncSync(signedApkPath, ...) ftruncate(signedApkPath, ...) ftruncateSync(signedApkPath, ...) futimes(signedApkPath, ...) futimesSync(signedApkPath, ...) lchmod(signedApkPath, ...) lchmodSync(signedApkPath, ...) lchown(signedApkPath, ...) lchownSync(signedApkPath, ...) link(signedApkPath, ...) link(alignedApkPath, signedApkPath, ...) linkSync(signedApkPath, ...) linkSync(alignedApkPath, signedApkPath, ...) lstat(signedApkPath, ...) lstatSync(signedApkPath, ...) lutimes(signedApkPath, ...) lutimesSync(signedApkPath, ...) mkdir(signedApkPath, ...) mkdirSync(signedApkPath, ...) mkdtemp(signedApkPath, ...) mkdtempSync(signedApkPath, ...) open(signedApkPath, ...) openSync(signedApkPath, ...) opendir(signedApkPath, ...) opendirSync(signedApkPath, ...) read(signedApkPath, ...) read(signedApkPath, ...) readFile(signedApkPath, ...) readFileSync(signedApkPath, ...) readSync(signedApkPath, ...) readSync(signedApkPath, ...) readdir(signedApkPath, ...) readdirSync(signedApkPath, ...) readlink(signedApkPath, ...) readlinkSync(signedApkPath, ...) readv(signedApkPath, ...) readvSync(signedApkPath, ...) realpath(signedApkPath, ...) realpath.native(signedApkPath, ...) realpathSync.native(signedApkPath, ...) realpathync(signedApkPath, ...) rename(signedApkPath, ...) rename(alignedApkPath, signedApkPath, ...) renameSync(signedApkPath, ...) renameSync(alignedApkPath, signedApkPath, ...) rm(signedApkPath, ...) rmSync(signedApkPath, ...) rmdir(signedApkPath, ...) rmdirSync(signedApkPath, ...) stat(signedApkPath, ...) statSync(signedApkPath, ...) symlink(signedApkPath, ...) symlink(alignedApkPath, signedApkPath, ...) symlinkSync(signedApkPath, ...) symlinkSync(alignedApkPath, signedApkPath, ...) truncate(signedApkPath, ...) truncateSync(signedApkPath, ...) unlink(signedApkPath, ...) unlinkSync(signedApkPath, ...) unwatchFile(signedApkPath, ...) utimes(signedApkPath, ...) utimesSync(signedApkPath, ...) watch(signedApkPath, ...) watchFile(signedApkPath, ...) write(signedApkPath, ...) writeFile(signedApkPath, ...) writeFileSync(signedApkPath, ...) writeSync(signedApkPath, ...) writev(signedApkPath, ...) writevSync(signedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ab4d741cfff7480f57ec674d2388f5d43046c94844380cde1079fcafa1521c24d5ed23ebec0ed4544f898919738b45bb8da60b1debb1a5edb4e476a594a57a02_0
2025-06-24 16:35:43,828 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cbc433ac51a6758492b62879f4661bf76b259e9a470331b31ca5c0d0ea8d4d0d9a91c39928866a5fd131d6d887c80a38ab7fd936999841359da81f03a840ed25_0
2025-06-24 16:35:43,828 - semgrep.rule_match - DEBUG - match_key = ('inputPath function ... (..., inputPath,...) {...} inputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(inputPath,...) fs. ... .accessSync(inputPath, ...) fs. ... .appendFile(inputPath,...) fs. ... .appendFileSync(inputPath, ...) fs. ... .chmod(inputPath,...) fs. ... .chmodSync(inputPath, ...) fs. ... .chown(inputPath,...) fs. ... .chownSync(inputPath, ...) fs. ... .close(inputPath,...) fs. ... .closeSync(inputPath, ...) fs. ... .copyFile(inputPath,...) fs. ... .copyFile($SMTH, inputPath,...) fs. ... .copyFileSync(inputPath, ...) fs. ... .copyFileSync($SMTH, inputPath, ...) fs. ... .cp(inputPath, ...) fs. ... .cp($SMTH, inputPath, ...) fs. ... .cpSync(inputPath, ...) fs. ... .cpSync($SMTH, inputPath, ...) fs. ... .createReadStream(inputPath,...) fs. ... .createWriteStream(inputPath,...) fs. ... .exists(inputPath, ...) fs. ... .existsSync(inputPath, ...) fs. ... .fchmod(inputPath, ...) fs. ... .fchmodSync(inputPath, ...) fs. ... .fchown(inputPath, ...) fs. ... .fchownSync(inputPath, ...) fs. ... .fdatasync(inputPath, ...) fs. ... .fdatasyncSync(inputPath, ...) fs. ... .fstat(inputPath, ...) fs. ... .fstatSync(inputPath, ...) fs. ... .fsync(inputPath, ...) fs. ... .fsyncSync(inputPath, ...) fs. ... .ftruncate(inputPath, ...) fs. ... .ftruncateSync(inputPath, ...) fs. ... .futimes(inputPath, ...) fs. ... .futimesSync(inputPath, ...) fs. ... .lchmod(inputPath, ...) fs. ... .lchmodSync(inputPath, ...) fs. ... .lchown(inputPath, ...) fs. ... .lchownSync(inputPath, ...) fs. ... .link(inputPath, ...) fs. ... .link($SMTH, inputPath, ...) fs. ... .linkSync(inputPath, ...) fs. ... .linkSync($SMTH, inputPath, ...) fs. ... .lstat(inputPath, ...) fs. ... .lstatSync(inputPath, ...) fs. ... .lutimes(inputPath, ...) fs. ... .lutimesSync(inputPath, ...) fs. ... .mkdir(inputPath, ...) fs. ... .mkdirSync(inputPath, ...) fs. ... .mkdtemp(inputPath, ...) fs. ... .mkdtempSync(inputPath, ...) fs. ... .open(inputPath, ...) fs. ... .openSync(inputPath, ...) fs. ... .opendir(inputPath, ...) fs. ... .opendirSync(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .readFile(inputPath, ...) fs. ... .readFileSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readdir(inputPath, ...) fs. ... .readdirSync(inputPath, ...) fs. ... .readlink(inputPath, ...) fs. ... .readlinkSync(inputPath, ...) fs. ... .readv(inputPath, ...) fs. ... .readvSync(inputPath, ...) fs. ... .realpath(inputPath, ...) fs. ... .realpath.native(inputPath, ...) fs. ... .realpathSync.native(inputPath, ...) fs. ... .realpathync(inputPath, ...) fs. ... .rename(inputPath, ...) fs. ... .rename($SMTH, inputPath, ...) fs. ... .renameSync(inputPath, ...) fs. ... .renameSync($SMTH, inputPath, ...) fs. ... .rm(inputPath, ...) fs. ... .rmSync(inputPath, ...) fs. ... .rmdir(inputPath, ...) fs. ... .rmdirSync(inputPath, ...) fs. ... .stat(inputPath, ...) fs. ... .statSync(inputPath, ...) fs. ... .symlink(inputPath, ...) fs. ... .symlink($SMTH, inputPath, ...) fs. ... .symlinkSync(inputPath, ...) fs. ... .symlinkSync($SMTH, inputPath, ...) fs. ... .truncate(inputPath, ...) fs. ... .truncateSync(inputPath, ...) fs. ... .unlink(inputPath, ...) fs. ... .unlinkSync(inputPath, ...) fs. ... .unwatchFile(inputPath, ...) fs. ... .utimes(inputPath, ...) fs. ... .utimesSync(inputPath, ...) fs. ... .watch(inputPath, ...) fs. ... .watchFile(inputPath, ...) fs. ... .write(inputPath, ...) fs. ... .writeFile(inputPath, ...) fs. ... .writeFileSync(inputPath, ...) fs. ... .writeSync(inputPath, ...) fs. ... .writev(inputPath, ...) fs. ... .writevSync(inputPath, ...) inputPath $METHOD("...", ...) access(inputPath,...) accessSync(inputPath, ...) appendFile(inputPath,...) appendFileSync(inputPath, ...) chmod(inputPath,...) chmodSync(inputPath, ...) chown(inputPath,...) chownSync(inputPath, ...) close(inputPath,...) closeSync(inputPath, ...) copyFile(inputPath,...) copyFile($SMTH, inputPath,...) copyFileSync(inputPath, ...) copyFileSync($SMTH, inputPath, ...) cp(inputPath, ...) cp($SMTH, inputPath, ...) cpSync(inputPath, ...) cpSync($SMTH, inputPath, ...) createReadStream(inputPath,...) createWriteStream(inputPath,...) exists(inputPath, ...) existsSync(inputPath, ...) fchmod(inputPath, ...) fchmodSync(inputPath, ...) fchown(inputPath, ...) fchownSync(inputPath, ...) fdatasync(inputPath, ...) fdatasyncSync(inputPath, ...) fstat(inputPath, ...) fstatSync(inputPath, ...) fsync(inputPath, ...) fsyncSync(inputPath, ...) ftruncate(inputPath, ...) ftruncateSync(inputPath, ...) futimes(inputPath, ...) futimesSync(inputPath, ...) lchmod(inputPath, ...) lchmodSync(inputPath, ...) lchown(inputPath, ...) lchownSync(inputPath, ...) link(inputPath, ...) link($SMTH, inputPath, ...) linkSync(inputPath, ...) linkSync($SMTH, inputPath, ...) lstat(inputPath, ...) lstatSync(inputPath, ...) lutimes(inputPath, ...) lutimesSync(inputPath, ...) mkdir(inputPath, ...) mkdirSync(inputPath, ...) mkdtemp(inputPath, ...) mkdtempSync(inputPath, ...) open(inputPath, ...) openSync(inputPath, ...) opendir(inputPath, ...) opendirSync(inputPath, ...) read(inputPath, ...) read(inputPath, ...) readFile(inputPath, ...) readFileSync(inputPath, ...) readSync(inputPath, ...) readSync(inputPath, ...) readdir(inputPath, ...) readdirSync(inputPath, ...) readlink(inputPath, ...) readlinkSync(inputPath, ...) readv(inputPath, ...) readvSync(inputPath, ...) realpath(inputPath, ...) realpath.native(inputPath, ...) realpathSync.native(inputPath, ...) realpathync(inputPath, ...) rename(inputPath, ...) rename($SMTH, inputPath, ...) renameSync(inputPath, ...) renameSync($SMTH, inputPath, ...) rm(inputPath, ...) rmSync(inputPath, ...) rmdir(inputPath, ...) rmdirSync(inputPath, ...) stat(inputPath, ...) statSync(inputPath, ...) symlink(inputPath, ...) symlink($SMTH, inputPath, ...) symlinkSync(inputPath, ...) symlinkSync($SMTH, inputPath, ...) truncate(inputPath, ...) truncateSync(inputPath, ...) unlink(inputPath, ...) unlinkSync(inputPath, ...) unwatchFile(inputPath, ...) utimes(inputPath, ...) utimesSync(inputPath, ...) watch(inputPath, ...) watchFile(inputPath, ...) write(inputPath, ...) writeFile(inputPath, ...) writeFileSync(inputPath, ...) writeSync(inputPath, ...) writev(inputPath, ...) writevSync(inputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = a5e11e85054f43999549fff03ad416a04e1775364cef40678c1687c2695c099e7b18d806973815affea1e1ce8e71cb84263ac5429043acb10fef007e5a11e590_0
2025-06-24 16:35:43,829 - semgrep.rule_match - DEBUG - match_key = ('inputPath function ... (..., inputPath,...) {...} inputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(inputPath,...) fs. ... .accessSync(inputPath, ...) fs. ... .appendFile(inputPath,...) fs. ... .appendFileSync(inputPath, ...) fs. ... .chmod(inputPath,...) fs. ... .chmodSync(inputPath, ...) fs. ... .chown(inputPath,...) fs. ... .chownSync(inputPath, ...) fs. ... .close(inputPath,...) fs. ... .closeSync(inputPath, ...) fs. ... .copyFile(inputPath,...) fs. ... .copyFile($SMTH, inputPath,...) fs. ... .copyFileSync(inputPath, ...) fs. ... .copyFileSync($SMTH, inputPath, ...) fs. ... .cp(inputPath, ...) fs. ... .cp($SMTH, inputPath, ...) fs. ... .cpSync(inputPath, ...) fs. ... .cpSync($SMTH, inputPath, ...) fs. ... .createReadStream(inputPath,...) fs. ... .createWriteStream(inputPath,...) fs. ... .exists(inputPath, ...) fs. ... .existsSync(inputPath, ...) fs. ... .fchmod(inputPath, ...) fs. ... .fchmodSync(inputPath, ...) fs. ... .fchown(inputPath, ...) fs. ... .fchownSync(inputPath, ...) fs. ... .fdatasync(inputPath, ...) fs. ... .fdatasyncSync(inputPath, ...) fs. ... .fstat(inputPath, ...) fs. ... .fstatSync(inputPath, ...) fs. ... .fsync(inputPath, ...) fs. ... .fsyncSync(inputPath, ...) fs. ... .ftruncate(inputPath, ...) fs. ... .ftruncateSync(inputPath, ...) fs. ... .futimes(inputPath, ...) fs. ... .futimesSync(inputPath, ...) fs. ... .lchmod(inputPath, ...) fs. ... .lchmodSync(inputPath, ...) fs. ... .lchown(inputPath, ...) fs. ... .lchownSync(inputPath, ...) fs. ... .link(inputPath, ...) fs. ... .link($SMTH, inputPath, ...) fs. ... .linkSync(inputPath, ...) fs. ... .linkSync($SMTH, inputPath, ...) fs. ... .lstat(inputPath, ...) fs. ... .lstatSync(inputPath, ...) fs. ... .lutimes(inputPath, ...) fs. ... .lutimesSync(inputPath, ...) fs. ... .mkdir(inputPath, ...) fs. ... .mkdirSync(inputPath, ...) fs. ... .mkdtemp(inputPath, ...) fs. ... .mkdtempSync(inputPath, ...) fs. ... .open(inputPath, ...) fs. ... .openSync(inputPath, ...) fs. ... .opendir(inputPath, ...) fs. ... .opendirSync(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .readFile(inputPath, ...) fs. ... .readFileSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readdir(inputPath, ...) fs. ... .readdirSync(inputPath, ...) fs. ... .readlink(inputPath, ...) fs. ... .readlinkSync(inputPath, ...) fs. ... .readv(inputPath, ...) fs. ... .readvSync(inputPath, ...) fs. ... .realpath(inputPath, ...) fs. ... .realpath.native(inputPath, ...) fs. ... .realpathSync.native(inputPath, ...) fs. ... .realpathync(inputPath, ...) fs. ... .rename(inputPath, ...) fs. ... .rename($SMTH, inputPath, ...) fs. ... .renameSync(inputPath, ...) fs. ... .renameSync($SMTH, inputPath, ...) fs. ... .rm(inputPath, ...) fs. ... .rmSync(inputPath, ...) fs. ... .rmdir(inputPath, ...) fs. ... .rmdirSync(inputPath, ...) fs. ... .stat(inputPath, ...) fs. ... .statSync(inputPath, ...) fs. ... .symlink(inputPath, ...) fs. ... .symlink($SMTH, inputPath, ...) fs. ... .symlinkSync(inputPath, ...) fs. ... .symlinkSync($SMTH, inputPath, ...) fs. ... .truncate(inputPath, ...) fs. ... .truncateSync(inputPath, ...) fs. ... .unlink(inputPath, ...) fs. ... .unlinkSync(inputPath, ...) fs. ... .unwatchFile(inputPath, ...) fs. ... .utimes(inputPath, ...) fs. ... .utimesSync(inputPath, ...) fs. ... .watch(inputPath, ...) fs. ... .watchFile(inputPath, ...) fs. ... .write(inputPath, ...) fs. ... .writeFile(inputPath, ...) fs. ... .writeFileSync(inputPath, ...) fs. ... .writeSync(inputPath, ...) fs. ... .writev(inputPath, ...) fs. ... .writevSync(inputPath, ...) inputPath $METHOD("...", ...) access(inputPath,...) accessSync(inputPath, ...) appendFile(inputPath,...) appendFileSync(inputPath, ...) chmod(inputPath,...) chmodSync(inputPath, ...) chown(inputPath,...) chownSync(inputPath, ...) close(inputPath,...) closeSync(inputPath, ...) copyFile(inputPath,...) copyFile($SMTH, inputPath,...) copyFileSync(inputPath, ...) copyFileSync($SMTH, inputPath, ...) cp(inputPath, ...) cp($SMTH, inputPath, ...) cpSync(inputPath, ...) cpSync($SMTH, inputPath, ...) createReadStream(inputPath,...) createWriteStream(inputPath,...) exists(inputPath, ...) existsSync(inputPath, ...) fchmod(inputPath, ...) fchmodSync(inputPath, ...) fchown(inputPath, ...) fchownSync(inputPath, ...) fdatasync(inputPath, ...) fdatasyncSync(inputPath, ...) fstat(inputPath, ...) fstatSync(inputPath, ...) fsync(inputPath, ...) fsyncSync(inputPath, ...) ftruncate(inputPath, ...) ftruncateSync(inputPath, ...) futimes(inputPath, ...) futimesSync(inputPath, ...) lchmod(inputPath, ...) lchmodSync(inputPath, ...) lchown(inputPath, ...) lchownSync(inputPath, ...) link(inputPath, ...) link($SMTH, inputPath, ...) linkSync(inputPath, ...) linkSync($SMTH, inputPath, ...) lstat(inputPath, ...) lstatSync(inputPath, ...) lutimes(inputPath, ...) lutimesSync(inputPath, ...) mkdir(inputPath, ...) mkdirSync(inputPath, ...) mkdtemp(inputPath, ...) mkdtempSync(inputPath, ...) open(inputPath, ...) openSync(inputPath, ...) opendir(inputPath, ...) opendirSync(inputPath, ...) read(inputPath, ...) read(inputPath, ...) readFile(inputPath, ...) readFileSync(inputPath, ...) readSync(inputPath, ...) readSync(inputPath, ...) readdir(inputPath, ...) readdirSync(inputPath, ...) readlink(inputPath, ...) readlinkSync(inputPath, ...) readv(inputPath, ...) readvSync(inputPath, ...) realpath(inputPath, ...) realpath.native(inputPath, ...) realpathSync.native(inputPath, ...) realpathync(inputPath, ...) rename(inputPath, ...) rename($SMTH, inputPath, ...) renameSync(inputPath, ...) renameSync($SMTH, inputPath, ...) rm(inputPath, ...) rmSync(inputPath, ...) rmdir(inputPath, ...) rmdirSync(inputPath, ...) stat(inputPath, ...) statSync(inputPath, ...) symlink(inputPath, ...) symlink($SMTH, inputPath, ...) symlinkSync(inputPath, ...) symlinkSync($SMTH, inputPath, ...) truncate(inputPath, ...) truncateSync(inputPath, ...) unlink(inputPath, ...) unlinkSync(inputPath, ...) unwatchFile(inputPath, ...) utimes(inputPath, ...) utimesSync(inputPath, ...) watch(inputPath, ...) watchFile(inputPath, ...) write(inputPath, ...) writeFile(inputPath, ...) writeFileSync(inputPath, ...) writeSync(inputPath, ...) writev(inputPath, ...) writevSync(inputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = a5e11e85054f43999549fff03ad416a04e1775364cef40678c1687c2695c099e7b18d806973815affea1e1ce8e71cb84263ac5429043acb10fef007e5a11e590_0
2025-06-24 16:35:43,829 - semgrep.rule_match - DEBUG - match_key = ('inputPath function ... (..., inputPath,...) {...} inputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(inputPath,...) fs. ... .accessSync(inputPath, ...) fs. ... .appendFile(inputPath,...) fs. ... .appendFileSync(inputPath, ...) fs. ... .chmod(inputPath,...) fs. ... .chmodSync(inputPath, ...) fs. ... .chown(inputPath,...) fs. ... .chownSync(inputPath, ...) fs. ... .close(inputPath,...) fs. ... .closeSync(inputPath, ...) fs. ... .copyFile(inputPath,...) fs. ... .copyFile($SMTH, inputPath,...) fs. ... .copyFileSync(inputPath, ...) fs. ... .copyFileSync($SMTH, inputPath, ...) fs. ... .cp(inputPath, ...) fs. ... .cp($SMTH, inputPath, ...) fs. ... .cpSync(inputPath, ...) fs. ... .cpSync($SMTH, inputPath, ...) fs. ... .createReadStream(inputPath,...) fs. ... .createWriteStream(inputPath,...) fs. ... .exists(inputPath, ...) fs. ... .existsSync(inputPath, ...) fs. ... .fchmod(inputPath, ...) fs. ... .fchmodSync(inputPath, ...) fs. ... .fchown(inputPath, ...) fs. ... .fchownSync(inputPath, ...) fs. ... .fdatasync(inputPath, ...) fs. ... .fdatasyncSync(inputPath, ...) fs. ... .fstat(inputPath, ...) fs. ... .fstatSync(inputPath, ...) fs. ... .fsync(inputPath, ...) fs. ... .fsyncSync(inputPath, ...) fs. ... .ftruncate(inputPath, ...) fs. ... .ftruncateSync(inputPath, ...) fs. ... .futimes(inputPath, ...) fs. ... .futimesSync(inputPath, ...) fs. ... .lchmod(inputPath, ...) fs. ... .lchmodSync(inputPath, ...) fs. ... .lchown(inputPath, ...) fs. ... .lchownSync(inputPath, ...) fs. ... .link(inputPath, ...) fs. ... .link($SMTH, inputPath, ...) fs. ... .linkSync(inputPath, ...) fs. ... .linkSync($SMTH, inputPath, ...) fs. ... .lstat(inputPath, ...) fs. ... .lstatSync(inputPath, ...) fs. ... .lutimes(inputPath, ...) fs. ... .lutimesSync(inputPath, ...) fs. ... .mkdir(inputPath, ...) fs. ... .mkdirSync(inputPath, ...) fs. ... .mkdtemp(inputPath, ...) fs. ... .mkdtempSync(inputPath, ...) fs. ... .open(inputPath, ...) fs. ... .openSync(inputPath, ...) fs. ... .opendir(inputPath, ...) fs. ... .opendirSync(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .read(inputPath, ...) fs. ... .readFile(inputPath, ...) fs. ... .readFileSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readSync(inputPath, ...) fs. ... .readdir(inputPath, ...) fs. ... .readdirSync(inputPath, ...) fs. ... .readlink(inputPath, ...) fs. ... .readlinkSync(inputPath, ...) fs. ... .readv(inputPath, ...) fs. ... .readvSync(inputPath, ...) fs. ... .realpath(inputPath, ...) fs. ... .realpath.native(inputPath, ...) fs. ... .realpathSync.native(inputPath, ...) fs. ... .realpathync(inputPath, ...) fs. ... .rename(inputPath, ...) fs. ... .rename($SMTH, inputPath, ...) fs. ... .renameSync(inputPath, ...) fs. ... .renameSync($SMTH, inputPath, ...) fs. ... .rm(inputPath, ...) fs. ... .rmSync(inputPath, ...) fs. ... .rmdir(inputPath, ...) fs. ... .rmdirSync(inputPath, ...) fs. ... .stat(inputPath, ...) fs. ... .statSync(inputPath, ...) fs. ... .symlink(inputPath, ...) fs. ... .symlink($SMTH, inputPath, ...) fs. ... .symlinkSync(inputPath, ...) fs. ... .symlinkSync($SMTH, inputPath, ...) fs. ... .truncate(inputPath, ...) fs. ... .truncateSync(inputPath, ...) fs. ... .unlink(inputPath, ...) fs. ... .unlinkSync(inputPath, ...) fs. ... .unwatchFile(inputPath, ...) fs. ... .utimes(inputPath, ...) fs. ... .utimesSync(inputPath, ...) fs. ... .watch(inputPath, ...) fs. ... .watchFile(inputPath, ...) fs. ... .write(inputPath, ...) fs. ... .writeFile(inputPath, ...) fs. ... .writeFileSync(inputPath, ...) fs. ... .writeSync(inputPath, ...) fs. ... .writev(inputPath, ...) fs. ... .writevSync(inputPath, ...) inputPath $METHOD("...", ...) access(inputPath,...) accessSync(inputPath, ...) appendFile(inputPath,...) appendFileSync(inputPath, ...) chmod(inputPath,...) chmodSync(inputPath, ...) chown(inputPath,...) chownSync(inputPath, ...) close(inputPath,...) closeSync(inputPath, ...) copyFile(inputPath,...) copyFile($SMTH, inputPath,...) copyFileSync(inputPath, ...) copyFileSync($SMTH, inputPath, ...) cp(inputPath, ...) cp($SMTH, inputPath, ...) cpSync(inputPath, ...) cpSync($SMTH, inputPath, ...) createReadStream(inputPath,...) createWriteStream(inputPath,...) exists(inputPath, ...) existsSync(inputPath, ...) fchmod(inputPath, ...) fchmodSync(inputPath, ...) fchown(inputPath, ...) fchownSync(inputPath, ...) fdatasync(inputPath, ...) fdatasyncSync(inputPath, ...) fstat(inputPath, ...) fstatSync(inputPath, ...) fsync(inputPath, ...) fsyncSync(inputPath, ...) ftruncate(inputPath, ...) ftruncateSync(inputPath, ...) futimes(inputPath, ...) futimesSync(inputPath, ...) lchmod(inputPath, ...) lchmodSync(inputPath, ...) lchown(inputPath, ...) lchownSync(inputPath, ...) link(inputPath, ...) link($SMTH, inputPath, ...) linkSync(inputPath, ...) linkSync($SMTH, inputPath, ...) lstat(inputPath, ...) lstatSync(inputPath, ...) lutimes(inputPath, ...) lutimesSync(inputPath, ...) mkdir(inputPath, ...) mkdirSync(inputPath, ...) mkdtemp(inputPath, ...) mkdtempSync(inputPath, ...) open(inputPath, ...) openSync(inputPath, ...) opendir(inputPath, ...) opendirSync(inputPath, ...) read(inputPath, ...) read(inputPath, ...) readFile(inputPath, ...) readFileSync(inputPath, ...) readSync(inputPath, ...) readSync(inputPath, ...) readdir(inputPath, ...) readdirSync(inputPath, ...) readlink(inputPath, ...) readlinkSync(inputPath, ...) readv(inputPath, ...) readvSync(inputPath, ...) realpath(inputPath, ...) realpath.native(inputPath, ...) realpathSync.native(inputPath, ...) realpathync(inputPath, ...) rename(inputPath, ...) rename($SMTH, inputPath, ...) renameSync(inputPath, ...) renameSync($SMTH, inputPath, ...) rm(inputPath, ...) rmSync(inputPath, ...) rmdir(inputPath, ...) rmdirSync(inputPath, ...) stat(inputPath, ...) statSync(inputPath, ...) symlink(inputPath, ...) symlink($SMTH, inputPath, ...) symlinkSync(inputPath, ...) symlinkSync($SMTH, inputPath, ...) truncate(inputPath, ...) truncateSync(inputPath, ...) unlink(inputPath, ...) unlinkSync(inputPath, ...) unwatchFile(inputPath, ...) utimes(inputPath, ...) utimesSync(inputPath, ...) watch(inputPath, ...) watchFile(inputPath, ...) write(inputPath, ...) writeFile(inputPath, ...) writeFileSync(inputPath, ...) writeSync(inputPath, ...) writev(inputPath, ...) writevSync(inputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = a5e11e85054f43999549fff03ad416a04e1775364cef40678c1687c2695c099e7b18d806973815affea1e1ce8e71cb84263ac5429043acb10fef007e5a11e590_0
2025-06-24 16:35:43,830 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = cbc433ac51a6758492b62879f4661bf76b259e9a470331b31ca5c0d0ea8d4d0d9a91c39928866a5fd131d6d887c80a38ab7fd936999841359da81f03a840ed25_0
2025-06-24 16:35:43,831 - semgrep.rule_match - DEBUG - match_key = ('outputPath function ... (..., outputPath,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile(inputPath, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync(inputPath, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp(inputPath, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync(inputPath, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link(inputPath, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync(inputPath, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename(inputPath, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync(inputPath, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink(inputPath, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync(inputPath, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile(inputPath, outputPath,...) copyFileSync(outputPath, ...) copyFileSync(inputPath, outputPath, ...) cp(outputPath, ...) cp(inputPath, outputPath, ...) cpSync(outputPath, ...) cpSync(inputPath, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link(inputPath, outputPath, ...) linkSync(outputPath, ...) linkSync(inputPath, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename(inputPath, outputPath, ...) renameSync(outputPath, ...) renameSync(inputPath, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink(inputPath, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync(inputPath, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 85f87cf87bc4ea37ae963c8004186c3b6669b03939116cfe1c739ae1db90f4eadf0884780c8e30c3ae8defdedf16ebde65efc62eddd144e131d2d0cca6620ae9_0
2025-06-24 16:35:43,832 - semgrep.rule_match - DEBUG - match_key = ('outputPath function ... (..., outputPath,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile(inputPath, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync(inputPath, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp(inputPath, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync(inputPath, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link(inputPath, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync(inputPath, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename(inputPath, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync(inputPath, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink(inputPath, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync(inputPath, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile(inputPath, outputPath,...) copyFileSync(outputPath, ...) copyFileSync(inputPath, outputPath, ...) cp(outputPath, ...) cp(inputPath, outputPath, ...) cpSync(outputPath, ...) cpSync(inputPath, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link(inputPath, outputPath, ...) linkSync(outputPath, ...) linkSync(inputPath, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename(inputPath, outputPath, ...) renameSync(outputPath, ...) renameSync(inputPath, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink(inputPath, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync(inputPath, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 85f87cf87bc4ea37ae963c8004186c3b6669b03939116cfe1c739ae1db90f4eadf0884780c8e30c3ae8defdedf16ebde65efc62eddd144e131d2d0cca6620ae9_0
2025-06-24 16:35:43,832 - semgrep.rule_match - DEBUG - match_key = ('outputPath function ... (..., outputPath,...) {...} outputPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath,...) fs. ... .accessSync(outputPath, ...) fs. ... .appendFile(outputPath,...) fs. ... .appendFileSync(outputPath, ...) fs. ... .chmod(outputPath,...) fs. ... .chmodSync(outputPath, ...) fs. ... .chown(outputPath,...) fs. ... .chownSync(outputPath, ...) fs. ... .close(outputPath,...) fs. ... .closeSync(outputPath, ...) fs. ... .copyFile(outputPath,...) fs. ... .copyFile(inputPath, outputPath,...) fs. ... .copyFileSync(outputPath, ...) fs. ... .copyFileSync(inputPath, outputPath, ...) fs. ... .cp(outputPath, ...) fs. ... .cp(inputPath, outputPath, ...) fs. ... .cpSync(outputPath, ...) fs. ... .cpSync(inputPath, outputPath, ...) fs. ... .createReadStream(outputPath,...) fs. ... .createWriteStream(outputPath,...) fs. ... .exists(outputPath, ...) fs. ... .existsSync(outputPath, ...) fs. ... .fchmod(outputPath, ...) fs. ... .fchmodSync(outputPath, ...) fs. ... .fchown(outputPath, ...) fs. ... .fchownSync(outputPath, ...) fs. ... .fdatasync(outputPath, ...) fs. ... .fdatasyncSync(outputPath, ...) fs. ... .fstat(outputPath, ...) fs. ... .fstatSync(outputPath, ...) fs. ... .fsync(outputPath, ...) fs. ... .fsyncSync(outputPath, ...) fs. ... .ftruncate(outputPath, ...) fs. ... .ftruncateSync(outputPath, ...) fs. ... .futimes(outputPath, ...) fs. ... .futimesSync(outputPath, ...) fs. ... .lchmod(outputPath, ...) fs. ... .lchmodSync(outputPath, ...) fs. ... .lchown(outputPath, ...) fs. ... .lchownSync(outputPath, ...) fs. ... .link(outputPath, ...) fs. ... .link(inputPath, outputPath, ...) fs. ... .linkSync(outputPath, ...) fs. ... .linkSync(inputPath, outputPath, ...) fs. ... .lstat(outputPath, ...) fs. ... .lstatSync(outputPath, ...) fs. ... .lutimes(outputPath, ...) fs. ... .lutimesSync(outputPath, ...) fs. ... .mkdir(outputPath, ...) fs. ... .mkdirSync(outputPath, ...) fs. ... .mkdtemp(outputPath, ...) fs. ... .mkdtempSync(outputPath, ...) fs. ... .open(outputPath, ...) fs. ... .openSync(outputPath, ...) fs. ... .opendir(outputPath, ...) fs. ... .opendirSync(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .read(outputPath, ...) fs. ... .readFile(outputPath, ...) fs. ... .readFileSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readSync(outputPath, ...) fs. ... .readdir(outputPath, ...) fs. ... .readdirSync(outputPath, ...) fs. ... .readlink(outputPath, ...) fs. ... .readlinkSync(outputPath, ...) fs. ... .readv(outputPath, ...) fs. ... .readvSync(outputPath, ...) fs. ... .realpath(outputPath, ...) fs. ... .realpath.native(outputPath, ...) fs. ... .realpathSync.native(outputPath, ...) fs. ... .realpathync(outputPath, ...) fs. ... .rename(outputPath, ...) fs. ... .rename(inputPath, outputPath, ...) fs. ... .renameSync(outputPath, ...) fs. ... .renameSync(inputPath, outputPath, ...) fs. ... .rm(outputPath, ...) fs. ... .rmSync(outputPath, ...) fs. ... .rmdir(outputPath, ...) fs. ... .rmdirSync(outputPath, ...) fs. ... .stat(outputPath, ...) fs. ... .statSync(outputPath, ...) fs. ... .symlink(outputPath, ...) fs. ... .symlink(inputPath, outputPath, ...) fs. ... .symlinkSync(outputPath, ...) fs. ... .symlinkSync(inputPath, outputPath, ...) fs. ... .truncate(outputPath, ...) fs. ... .truncateSync(outputPath, ...) fs. ... .unlink(outputPath, ...) fs. ... .unlinkSync(outputPath, ...) fs. ... .unwatchFile(outputPath, ...) fs. ... .utimes(outputPath, ...) fs. ... .utimesSync(outputPath, ...) fs. ... .watch(outputPath, ...) fs. ... .watchFile(outputPath, ...) fs. ... .write(outputPath, ...) fs. ... .writeFile(outputPath, ...) fs. ... .writeFileSync(outputPath, ...) fs. ... .writeSync(outputPath, ...) fs. ... .writev(outputPath, ...) fs. ... .writevSync(outputPath, ...) outputPath $METHOD("...", ...) access(outputPath,...) accessSync(outputPath, ...) appendFile(outputPath,...) appendFileSync(outputPath, ...) chmod(outputPath,...) chmodSync(outputPath, ...) chown(outputPath,...) chownSync(outputPath, ...) close(outputPath,...) closeSync(outputPath, ...) copyFile(outputPath,...) copyFile(inputPath, outputPath,...) copyFileSync(outputPath, ...) copyFileSync(inputPath, outputPath, ...) cp(outputPath, ...) cp(inputPath, outputPath, ...) cpSync(outputPath, ...) cpSync(inputPath, outputPath, ...) createReadStream(outputPath,...) createWriteStream(outputPath,...) exists(outputPath, ...) existsSync(outputPath, ...) fchmod(outputPath, ...) fchmodSync(outputPath, ...) fchown(outputPath, ...) fchownSync(outputPath, ...) fdatasync(outputPath, ...) fdatasyncSync(outputPath, ...) fstat(outputPath, ...) fstatSync(outputPath, ...) fsync(outputPath, ...) fsyncSync(outputPath, ...) ftruncate(outputPath, ...) ftruncateSync(outputPath, ...) futimes(outputPath, ...) futimesSync(outputPath, ...) lchmod(outputPath, ...) lchmodSync(outputPath, ...) lchown(outputPath, ...) lchownSync(outputPath, ...) link(outputPath, ...) link(inputPath, outputPath, ...) linkSync(outputPath, ...) linkSync(inputPath, outputPath, ...) lstat(outputPath, ...) lstatSync(outputPath, ...) lutimes(outputPath, ...) lutimesSync(outputPath, ...) mkdir(outputPath, ...) mkdirSync(outputPath, ...) mkdtemp(outputPath, ...) mkdtempSync(outputPath, ...) open(outputPath, ...) openSync(outputPath, ...) opendir(outputPath, ...) opendirSync(outputPath, ...) read(outputPath, ...) read(outputPath, ...) readFile(outputPath, ...) readFileSync(outputPath, ...) readSync(outputPath, ...) readSync(outputPath, ...) readdir(outputPath, ...) readdirSync(outputPath, ...) readlink(outputPath, ...) readlinkSync(outputPath, ...) readv(outputPath, ...) readvSync(outputPath, ...) realpath(outputPath, ...) realpath.native(outputPath, ...) realpathSync.native(outputPath, ...) realpathync(outputPath, ...) rename(outputPath, ...) rename(inputPath, outputPath, ...) renameSync(outputPath, ...) renameSync(inputPath, outputPath, ...) rm(outputPath, ...) rmSync(outputPath, ...) rmdir(outputPath, ...) rmdirSync(outputPath, ...) stat(outputPath, ...) statSync(outputPath, ...) symlink(outputPath, ...) symlink(inputPath, outputPath, ...) symlinkSync(outputPath, ...) symlinkSync(inputPath, outputPath, ...) truncate(outputPath, ...) truncateSync(outputPath, ...) unlink(outputPath, ...) unlinkSync(outputPath, ...) unwatchFile(outputPath, ...) utimes(outputPath, ...) utimesSync(outputPath, ...) watch(outputPath, ...) watchFile(outputPath, ...) write(outputPath, ...) writeFile(outputPath, ...) writeFileSync(outputPath, ...) writeSync(outputPath, ...) writev(outputPath, ...) writevSync(outputPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/apk-signer.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 85f87cf87bc4ea37ae963c8004186c3b6669b03939116cfe1c739ae1db90f4eadf0884780c8e30c3ae8defdedf16ebde65efc62eddd144e131d2d0cca6620ae9_0
2025-06-24 16:35:43,833 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-06-24 16:35:43,834 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_0
2025-06-24 16:35:43,835 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_0
2025-06-24 16:35:43,835 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_0
2025-06-24 16:35:43,836 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-06-24 16:35:43,837 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_0
2025-06-24 16:35:43,837 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_0
2025-06-24 16:35:43,838 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file!.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file!.path,...) fs. ... .accessSync(req.file!.path, ...) fs. ... .appendFile(req.file!.path,...) fs. ... .appendFileSync(req.file!.path, ...) fs. ... .chmod(req.file!.path,...) fs. ... .chmodSync(req.file!.path, ...) fs. ... .chown(req.file!.path,...) fs. ... .chownSync(req.file!.path, ...) fs. ... .close(req.file!.path,...) fs. ... .closeSync(req.file!.path, ...) fs. ... .copyFile(req.file!.path,...) fs. ... .copyFile($SMTH, req.file!.path,...) fs. ... .copyFileSync(req.file!.path, ...) fs. ... .copyFileSync($SMTH, req.file!.path, ...) fs. ... .cp(req.file!.path, ...) fs. ... .cp($SMTH, req.file!.path, ...) fs. ... .cpSync(req.file!.path, ...) fs. ... .cpSync($SMTH, req.file!.path, ...) fs. ... .createReadStream(req.file!.path,...) fs. ... .createWriteStream(req.file!.path,...) fs. ... .exists(req.file!.path, ...) fs. ... .existsSync(req.file!.path, ...) fs. ... .fchmod(req.file!.path, ...) fs. ... .fchmodSync(req.file!.path, ...) fs. ... .fchown(req.file!.path, ...) fs. ... .fchownSync(req.file!.path, ...) fs. ... .fdatasync(req.file!.path, ...) fs. ... .fdatasyncSync(req.file!.path, ...) fs. ... .fstat(req.file!.path, ...) fs. ... .fstatSync(req.file!.path, ...) fs. ... .fsync(req.file!.path, ...) fs. ... .fsyncSync(req.file!.path, ...) fs. ... .ftruncate(req.file!.path, ...) fs. ... .ftruncateSync(req.file!.path, ...) fs. ... .futimes(req.file!.path, ...) fs. ... .futimesSync(req.file!.path, ...) fs. ... .lchmod(req.file!.path, ...) fs. ... .lchmodSync(req.file!.path, ...) fs. ... .lchown(req.file!.path, ...) fs. ... .lchownSync(req.file!.path, ...) fs. ... .link(req.file!.path, ...) fs. ... .link($SMTH, req.file!.path, ...) fs. ... .linkSync(req.file!.path, ...) fs. ... .linkSync($SMTH, req.file!.path, ...) fs. ... .lstat(req.file!.path, ...) fs. ... .lstatSync(req.file!.path, ...) fs. ... .lutimes(req.file!.path, ...) fs. ... .lutimesSync(req.file!.path, ...) fs. ... .mkdir(req.file!.path, ...) fs. ... .mkdirSync(req.file!.path, ...) fs. ... .mkdtemp(req.file!.path, ...) fs. ... .mkdtempSync(req.file!.path, ...) fs. ... .open(req.file!.path, ...) fs. ... .openSync(req.file!.path, ...) fs. ... .opendir(req.file!.path, ...) fs. ... .opendirSync(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .read(req.file!.path, ...) fs. ... .readFile(req.file!.path, ...) fs. ... .readFileSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readSync(req.file!.path, ...) fs. ... .readdir(req.file!.path, ...) fs. ... .readdirSync(req.file!.path, ...) fs. ... .readlink(req.file!.path, ...) fs. ... .readlinkSync(req.file!.path, ...) fs. ... .readv(req.file!.path, ...) fs. ... .readvSync(req.file!.path, ...) fs. ... .realpath(req.file!.path, ...) fs. ... .realpath.native(req.file!.path, ...) fs. ... .realpathSync.native(req.file!.path, ...) fs. ... .realpathync(req.file!.path, ...) fs. ... .rename(req.file!.path, ...) fs. ... .rename($SMTH, req.file!.path, ...) fs. ... .renameSync(req.file!.path, ...) fs. ... .renameSync($SMTH, req.file!.path, ...) fs. ... .rm(req.file!.path, ...) fs. ... .rmSync(req.file!.path, ...) fs. ... .rmdir(req.file!.path, ...) fs. ... .rmdirSync(req.file!.path, ...) fs. ... .stat(req.file!.path, ...) fs. ... .statSync(req.file!.path, ...) fs. ... .symlink(req.file!.path, ...) fs. ... .symlink($SMTH, req.file!.path, ...) fs. ... .symlinkSync(req.file!.path, ...) fs. ... .symlinkSync($SMTH, req.file!.path, ...) fs. ... .truncate(req.file!.path, ...) fs. ... .truncateSync(req.file!.path, ...) fs. ... .unlink(req.file!.path, ...) fs. ... .unlinkSync(req.file!.path, ...) fs. ... .unwatchFile(req.file!.path, ...) fs. ... .utimes(req.file!.path, ...) fs. ... .utimesSync(req.file!.path, ...) fs. ... .watch(req.file!.path, ...) fs. ... .watchFile(req.file!.path, ...) fs. ... .write(req.file!.path, ...) fs. ... .writeFile(req.file!.path, ...) fs. ... .writeFileSync(req.file!.path, ...) fs. ... .writeSync(req.file!.path, ...) fs. ... .writev(req.file!.path, ...) fs. ... .writevSync(req.file!.path, ...) req.file!.path $METHOD("...", ...) access(req.file!.path,...) accessSync(req.file!.path, ...) appendFile(req.file!.path,...) appendFileSync(req.file!.path, ...) chmod(req.file!.path,...) chmodSync(req.file!.path, ...) chown(req.file!.path,...) chownSync(req.file!.path, ...) close(req.file!.path,...) closeSync(req.file!.path, ...) copyFile(req.file!.path,...) copyFile($SMTH, req.file!.path,...) copyFileSync(req.file!.path, ...) copyFileSync($SMTH, req.file!.path, ...) cp(req.file!.path, ...) cp($SMTH, req.file!.path, ...) cpSync(req.file!.path, ...) cpSync($SMTH, req.file!.path, ...) createReadStream(req.file!.path,...) createWriteStream(req.file!.path,...) exists(req.file!.path, ...) existsSync(req.file!.path, ...) fchmod(req.file!.path, ...) fchmodSync(req.file!.path, ...) fchown(req.file!.path, ...) fchownSync(req.file!.path, ...) fdatasync(req.file!.path, ...) fdatasyncSync(req.file!.path, ...) fstat(req.file!.path, ...) fstatSync(req.file!.path, ...) fsync(req.file!.path, ...) fsyncSync(req.file!.path, ...) ftruncate(req.file!.path, ...) ftruncateSync(req.file!.path, ...) futimes(req.file!.path, ...) futimesSync(req.file!.path, ...) lchmod(req.file!.path, ...) lchmodSync(req.file!.path, ...) lchown(req.file!.path, ...) lchownSync(req.file!.path, ...) link(req.file!.path, ...) link($SMTH, req.file!.path, ...) linkSync(req.file!.path, ...) linkSync($SMTH, req.file!.path, ...) lstat(req.file!.path, ...) lstatSync(req.file!.path, ...) lutimes(req.file!.path, ...) lutimesSync(req.file!.path, ...) mkdir(req.file!.path, ...) mkdirSync(req.file!.path, ...) mkdtemp(req.file!.path, ...) mkdtempSync(req.file!.path, ...) open(req.file!.path, ...) openSync(req.file!.path, ...) opendir(req.file!.path, ...) opendirSync(req.file!.path, ...) read(req.file!.path, ...) read(req.file!.path, ...) readFile(req.file!.path, ...) readFileSync(req.file!.path, ...) readSync(req.file!.path, ...) readSync(req.file!.path, ...) readdir(req.file!.path, ...) readdirSync(req.file!.path, ...) readlink(req.file!.path, ...) readlinkSync(req.file!.path, ...) readv(req.file!.path, ...) readvSync(req.file!.path, ...) realpath(req.file!.path, ...) realpath.native(req.file!.path, ...) realpathSync.native(req.file!.path, ...) realpathync(req.file!.path, ...) rename(req.file!.path, ...) rename($SMTH, req.file!.path, ...) renameSync(req.file!.path, ...) renameSync($SMTH, req.file!.path, ...) rm(req.file!.path, ...) rmSync(req.file!.path, ...) rmdir(req.file!.path, ...) rmdirSync(req.file!.path, ...) stat(req.file!.path, ...) statSync(req.file!.path, ...) symlink(req.file!.path, ...) symlink($SMTH, req.file!.path, ...) symlinkSync(req.file!.path, ...) symlinkSync($SMTH, req.file!.path, ...) truncate(req.file!.path, ...) truncateSync(req.file!.path, ...) unlink(req.file!.path, ...) unlinkSync(req.file!.path, ...) unwatchFile(req.file!.path, ...) utimes(req.file!.path, ...) utimesSync(req.file!.path, ...) watch(req.file!.path, ...) watchFile(req.file!.path, ...) write(req.file!.path, ...) writeFile(req.file!.path, ...) writeFileSync(req.file!.path, ...) writeSync(req.file!.path, ...) writev(req.file!.path, ...) writevSync(req.file!.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = ce6a04e9104ac8c6de2dca6c4898afde0380d077d8a3b166fd0107907f594a4281116edab2929ffd3e16142205fa60717c6ce8ba1749b5fa7e13a1228a05f342_1
2025-06-24 16:35:43,839 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-06-24 16:35:43,840 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,840 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,841 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,842 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-06-24 16:35:43,843 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,844 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,844 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_1
2025-06-24 16:35:43,845 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-06-24 16:35:43,846 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,846 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_0
2025-06-24 16:35:43,847 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} analysis.fixedApkPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(analysis.fixedApkPath,...) fs. ... .accessSync(analysis.fixedApkPath, ...) fs. ... .appendFile(analysis.fixedApkPath,...) fs. ... .appendFileSync(analysis.fixedApkPath, ...) fs. ... .chmod(analysis.fixedApkPath,...) fs. ... .chmodSync(analysis.fixedApkPath, ...) fs. ... .chown(analysis.fixedApkPath,...) fs. ... .chownSync(analysis.fixedApkPath, ...) fs. ... .close(analysis.fixedApkPath,...) fs. ... .closeSync(analysis.fixedApkPath, ...) fs. ... .copyFile(analysis.fixedApkPath,...) fs. ... .copyFile($SMTH, analysis.fixedApkPath,...) fs. ... .copyFileSync(analysis.fixedApkPath, ...) fs. ... .copyFileSync($SMTH, analysis.fixedApkPath, ...) fs. ... .cp(analysis.fixedApkPath, ...) fs. ... .cp($SMTH, analysis.fixedApkPath, ...) fs. ... .cpSync(analysis.fixedApkPath, ...) fs. ... .cpSync($SMTH, analysis.fixedApkPath, ...) fs. ... .createReadStream(analysis.fixedApkPath,...) fs. ... .createWriteStream(analysis.fixedApkPath,...) fs. ... .exists(analysis.fixedApkPath, ...) fs. ... .existsSync(analysis.fixedApkPath, ...) fs. ... .fchmod(analysis.fixedApkPath, ...) fs. ... .fchmodSync(analysis.fixedApkPath, ...) fs. ... .fchown(analysis.fixedApkPath, ...) fs. ... .fchownSync(analysis.fixedApkPath, ...) fs. ... .fdatasync(analysis.fixedApkPath, ...) fs. ... .fdatasyncSync(analysis.fixedApkPath, ...) fs. ... .fstat(analysis.fixedApkPath, ...) fs. ... .fstatSync(analysis.fixedApkPath, ...) fs. ... .fsync(analysis.fixedApkPath, ...) fs. ... .fsyncSync(analysis.fixedApkPath, ...) fs. ... .ftruncate(analysis.fixedApkPath, ...) fs. ... .ftruncateSync(analysis.fixedApkPath, ...) fs. ... .futimes(analysis.fixedApkPath, ...) fs. ... .futimesSync(analysis.fixedApkPath, ...) fs. ... .lchmod(analysis.fixedApkPath, ...) fs. ... .lchmodSync(analysis.fixedApkPath, ...) fs. ... .lchown(analysis.fixedApkPath, ...) fs. ... .lchownSync(analysis.fixedApkPath, ...) fs. ... .link(analysis.fixedApkPath, ...) fs. ... .link($SMTH, analysis.fixedApkPath, ...) fs. ... .linkSync(analysis.fixedApkPath, ...) fs. ... .linkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .lstat(analysis.fixedApkPath, ...) fs. ... .lstatSync(analysis.fixedApkPath, ...) fs. ... .lutimes(analysis.fixedApkPath, ...) fs. ... .lutimesSync(analysis.fixedApkPath, ...) fs. ... .mkdir(analysis.fixedApkPath, ...) fs. ... .mkdirSync(analysis.fixedApkPath, ...) fs. ... .mkdtemp(analysis.fixedApkPath, ...) fs. ... .mkdtempSync(analysis.fixedApkPath, ...) fs. ... .open(analysis.fixedApkPath, ...) fs. ... .openSync(analysis.fixedApkPath, ...) fs. ... .opendir(analysis.fixedApkPath, ...) fs. ... .opendirSync(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .read(analysis.fixedApkPath, ...) fs. ... .readFile(analysis.fixedApkPath, ...) fs. ... .readFileSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readSync(analysis.fixedApkPath, ...) fs. ... .readdir(analysis.fixedApkPath, ...) fs. ... .readdirSync(analysis.fixedApkPath, ...) fs. ... .readlink(analysis.fixedApkPath, ...) fs. ... .readlinkSync(analysis.fixedApkPath, ...) fs. ... .readv(analysis.fixedApkPath, ...) fs. ... .readvSync(analysis.fixedApkPath, ...) fs. ... .realpath(analysis.fixedApkPath, ...) fs. ... .realpath.native(analysis.fixedApkPath, ...) fs. ... .realpathSync.native(analysis.fixedApkPath, ...) fs. ... .realpathync(analysis.fixedApkPath, ...) fs. ... .rename(analysis.fixedApkPath, ...) fs. ... .rename($SMTH, analysis.fixedApkPath, ...) fs. ... .renameSync(analysis.fixedApkPath, ...) fs. ... .renameSync($SMTH, analysis.fixedApkPath, ...) fs. ... .rm(analysis.fixedApkPath, ...) fs. ... .rmSync(analysis.fixedApkPath, ...) fs. ... .rmdir(analysis.fixedApkPath, ...) fs. ... .rmdirSync(analysis.fixedApkPath, ...) fs. ... .stat(analysis.fixedApkPath, ...) fs. ... .statSync(analysis.fixedApkPath, ...) fs. ... .symlink(analysis.fixedApkPath, ...) fs. ... .symlink($SMTH, analysis.fixedApkPath, ...) fs. ... .symlinkSync(analysis.fixedApkPath, ...) fs. ... .symlinkSync($SMTH, analysis.fixedApkPath, ...) fs. ... .truncate(analysis.fixedApkPath, ...) fs. ... .truncateSync(analysis.fixedApkPath, ...) fs. ... .unlink(analysis.fixedApkPath, ...) fs. ... .unlinkSync(analysis.fixedApkPath, ...) fs. ... .unwatchFile(analysis.fixedApkPath, ...) fs. ... .utimes(analysis.fixedApkPath, ...) fs. ... .utimesSync(analysis.fixedApkPath, ...) fs. ... .watch(analysis.fixedApkPath, ...) fs. ... .watchFile(analysis.fixedApkPath, ...) fs. ... .write(analysis.fixedApkPath, ...) fs. ... .writeFile(analysis.fixedApkPath, ...) fs. ... .writeFileSync(analysis.fixedApkPath, ...) fs. ... .writeSync(analysis.fixedApkPath, ...) fs. ... .writev(analysis.fixedApkPath, ...) fs. ... .writevSync(analysis.fixedApkPath, ...) analysis.fixedApkPath $METHOD("...", ...) access(analysis.fixedApkPath,...) accessSync(analysis.fixedApkPath, ...) appendFile(analysis.fixedApkPath,...) appendFileSync(analysis.fixedApkPath, ...) chmod(analysis.fixedApkPath,...) chmodSync(analysis.fixedApkPath, ...) chown(analysis.fixedApkPath,...) chownSync(analysis.fixedApkPath, ...) close(analysis.fixedApkPath,...) closeSync(analysis.fixedApkPath, ...) copyFile(analysis.fixedApkPath,...) copyFile($SMTH, analysis.fixedApkPath,...) copyFileSync(analysis.fixedApkPath, ...) copyFileSync($SMTH, analysis.fixedApkPath, ...) cp(analysis.fixedApkPath, ...) cp($SMTH, analysis.fixedApkPath, ...) cpSync(analysis.fixedApkPath, ...) cpSync($SMTH, analysis.fixedApkPath, ...) createReadStream(analysis.fixedApkPath,...) createWriteStream(analysis.fixedApkPath,...) exists(analysis.fixedApkPath, ...) existsSync(analysis.fixedApkPath, ...) fchmod(analysis.fixedApkPath, ...) fchmodSync(analysis.fixedApkPath, ...) fchown(analysis.fixedApkPath, ...) fchownSync(analysis.fixedApkPath, ...) fdatasync(analysis.fixedApkPath, ...) fdatasyncSync(analysis.fixedApkPath, ...) fstat(analysis.fixedApkPath, ...) fstatSync(analysis.fixedApkPath, ...) fsync(analysis.fixedApkPath, ...) fsyncSync(analysis.fixedApkPath, ...) ftruncate(analysis.fixedApkPath, ...) ftruncateSync(analysis.fixedApkPath, ...) futimes(analysis.fixedApkPath, ...) futimesSync(analysis.fixedApkPath, ...) lchmod(analysis.fixedApkPath, ...) lchmodSync(analysis.fixedApkPath, ...) lchown(analysis.fixedApkPath, ...) lchownSync(analysis.fixedApkPath, ...) link(analysis.fixedApkPath, ...) link($SMTH, analysis.fixedApkPath, ...) linkSync(analysis.fixedApkPath, ...) linkSync($SMTH, analysis.fixedApkPath, ...) lstat(analysis.fixedApkPath, ...) lstatSync(analysis.fixedApkPath, ...) lutimes(analysis.fixedApkPath, ...) lutimesSync(analysis.fixedApkPath, ...) mkdir(analysis.fixedApkPath, ...) mkdirSync(analysis.fixedApkPath, ...) mkdtemp(analysis.fixedApkPath, ...) mkdtempSync(analysis.fixedApkPath, ...) open(analysis.fixedApkPath, ...) openSync(analysis.fixedApkPath, ...) opendir(analysis.fixedApkPath, ...) opendirSync(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) read(analysis.fixedApkPath, ...) readFile(analysis.fixedApkPath, ...) readFileSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readSync(analysis.fixedApkPath, ...) readdir(analysis.fixedApkPath, ...) readdirSync(analysis.fixedApkPath, ...) readlink(analysis.fixedApkPath, ...) readlinkSync(analysis.fixedApkPath, ...) readv(analysis.fixedApkPath, ...) readvSync(analysis.fixedApkPath, ...) realpath(analysis.fixedApkPath, ...) realpath.native(analysis.fixedApkPath, ...) realpathSync.native(analysis.fixedApkPath, ...) realpathync(analysis.fixedApkPath, ...) rename(analysis.fixedApkPath, ...) rename($SMTH, analysis.fixedApkPath, ...) renameSync(analysis.fixedApkPath, ...) renameSync($SMTH, analysis.fixedApkPath, ...) rm(analysis.fixedApkPath, ...) rmSync(analysis.fixedApkPath, ...) rmdir(analysis.fixedApkPath, ...) rmdirSync(analysis.fixedApkPath, ...) stat(analysis.fixedApkPath, ...) statSync(analysis.fixedApkPath, ...) symlink(analysis.fixedApkPath, ...) symlink($SMTH, analysis.fixedApkPath, ...) symlinkSync(analysis.fixedApkPath, ...) symlinkSync($SMTH, analysis.fixedApkPath, ...) truncate(analysis.fixedApkPath, ...) truncateSync(analysis.fixedApkPath, ...) unlink(analysis.fixedApkPath, ...) unlinkSync(analysis.fixedApkPath, ...) unwatchFile(analysis.fixedApkPath, ...) utimes(analysis.fixedApkPath, ...) utimesSync(analysis.fixedApkPath, ...) watch(analysis.fixedApkPath, ...) watchFile(analysis.fixedApkPath, ...) write(analysis.fixedApkPath, ...) writeFile(analysis.fixedApkPath, ...) writeFileSync(analysis.fixedApkPath, ...) writeSync(analysis.fixedApkPath, ...) writev(analysis.fixedApkPath, ...) writevSync(analysis.fixedApkPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 6d63a73bd2a7ebfd76c2b27de4fd1986ec35fa8564da0e4805eebc00f2cdf3a00d32662fd4a146d3db4c8c572f53feb29e1a0a30af966861ff977d0c8c114fef_2
2025-06-24 16:35:43,849 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:05.806868 on 85 files
2025-06-24 16:35:43,850 - semgrep.core_runner - DEBUG - findings summary: 26 warning, 0 error, 1 info
2025-06-24 16:35:43,852 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-06-24 16:35:43,852 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-06-24 16:35:43,958 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • tailwind.config.ts (1 lines skipped)

2025-06-24 16:35:43,959 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Opengrep errors

Ran 437 rules on 85 files: 27 findings.
2025-06-24 16:35:43,959 - semgrep.app.version - DEBUG - Version cache does not exist
2025-06-24 16:35:43,960 - semgrep.app.version - DEBUG - Version cache does not exist
2025-06-24 16:35:43,975 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
